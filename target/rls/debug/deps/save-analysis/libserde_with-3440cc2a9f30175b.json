{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0","program":"C:\\Users\\79211\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","serde_with","C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"macros\"","--cfg","feature=\"serde_with_macros\"","-C","metadata=3440cc2a9f30175b","-C","extra-filename=-3440cc2a9f30175b","--out-dir","c:\\Users\\79211\\Documents\\MyCode\\rustServer\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\79211\\Documents\\MyCode\\rustServer\\target\\rls\\debug\\deps","--extern","serde=c:\\Users\\79211\\Documents\\MyCode\\rustServer\\target\\rls\\debug\\deps\\libserde-086fa85985330fe9.rmeta","--extern","serde_with_macros=c:\\Users\\79211\\Documents\\MyCode\\rustServer\\target\\rls\\debug\\deps\\serde_with_macros-fbfc8a9ef8eb578f.dll","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\79211\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\79211\\Documents\\MyCode\\rustServer\\target\\rls\\debug\\deps\\libserde_with-3440cc2a9f30175b.rmeta"},"prelude":{"crate_id":{"name":"serde_with","disambiguator":[16442408059325480388,8551229945973325455]},"crate_root":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src","external_crates":[{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[12374408497437733202,6492056007108846167]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[2290045538748334120,9614494007960750338]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15512757571249680579,12574991579126166983]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[17123206265898570674,6623867072543366863]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9295367743284037777,362479726688110916]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[9577042658642913717,6283816297099158970]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9211776128286668424,8590800287841478331]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[761442209400273500,2318016978487880907]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[9619839731531435865,7305872285662454983]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[9022773486214233476,13211195617945869214]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[12418999252224835617,8433212072856927403]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15106747134913048427,4886671886298966434]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[303194902276108962,17442566137036092759]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","num":14,"id":{"name":"serde","disambiguator":[14807757036515809162,12709154796592939541]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","num":15,"id":{"name":"serde_derive","disambiguator":[16449788495858409035,18046186087558075445]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","num":16,"id":{"name":"serde_with_macros","disambiguator":[18177901096113178508,17914828975110463630]}}],"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":0,"byte_end":4486,"line_start":1,"line_end":140,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":3765,"byte_end":3766,"line_start":112,"line_end":112,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":0,"byte_end":4486,"line_start":1,"line_end":140,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":93},{"krate":0,"index":95},{"krate":0,"index":465},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":789},{"krate":0,"index":810},{"krate":0,"index":808},{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":800},{"krate":0,"index":798},{"krate":0,"index":795},{"krate":0,"index":793},{"krate":0,"index":791},{"krate":0,"index":629},{"krate":0,"index":811},{"krate":0,"index":832},{"krate":0,"index":830},{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":822},{"krate":0,"index":820},{"krate":0,"index":817},{"krate":0,"index":815},{"krate":0,"index":813},{"krate":0,"index":631}],"decl_id":null,"docs":" [![docs.rs badge](https://docs.rs/serde_with/badge.svg)](https://docs.rs/serde_with/)\n [![crates.io badge](https://img.shields.io/crates/v/serde_with.svg)](https://crates.io/crates/serde_with/)\n [![Build Status](https://travis-ci.org/jonasbb/serde_with.svg?branch=master)](https://travis-ci.org/jonasbb/serde_with)\n [![codecov](https://codecov.io/gh/jonasbb/serde_with/branch/master/graph/badge.svg)](https://codecov.io/gh/jonasbb/serde_with)","sig":null,"attributes":[{"value":"deny(missing_debug_implementations, missing_copy_implementations,\n       missing_docs, trivial_casts, trivial_numeric_casts,\n       unused_extern_crates, unused_import_braces, unused_qualifications,\n       variant_size_differences)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":0,"byte_end":252,"line_start":1,"line_end":11,"column_start":1,"column_end":3}},{"value":"! [![docs.rs badge](https://docs.rs/serde_with/badge.svg)](https://docs.rs/serde_with/)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":387,"byte_end":476,"line_start":15,"line_end":15,"column_start":1,"column_end":90}},{"value":"! [![crates.io badge](https://img.shields.io/crates/v/serde_with.svg)](https://crates.io/crates/serde_with/)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":477,"byte_end":587,"line_start":16,"line_end":16,"column_start":1,"column_end":111}},{"value":"! [![Build Status](https://travis-ci.org/jonasbb/serde_with.svg?branch=master)](https://travis-ci.org/jonasbb/serde_with)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":588,"byte_end":711,"line_start":17,"line_end":17,"column_start":1,"column_end":124}},{"value":"! [![codecov](https://codecov.io/gh/jonasbb/serde_with/branch/master/graph/badge.svg)](https://codecov.io/gh/jonasbb/serde_with)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":712,"byte_end":842,"line_start":18,"line_end":18,"column_start":1,"column_end":131}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":843,"byte_end":846,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! ---","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":847,"byte_end":854,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":855,"byte_end":858,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! This crate provides custom de/serialization helpers to use in combination with [serde's with-annotation][with-annotation].","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":859,"byte_end":985,"line_start":22,"line_end":22,"column_start":1,"column_end":127}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":986,"byte_end":989,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"! Serde tracks a wishlist of similar helpers at [serde#553].","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":990,"byte_end":1052,"line_start":24,"line_end":24,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":1053,"byte_end":1056,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! # Usage","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":1057,"byte_end":1068,"line_start":26,"line_end":26,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":1069,"byte_end":1072,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! Add this to your `Cargo.toml`:","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":1073,"byte_end":1107,"line_start":28,"line_end":28,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":1108,"byte_end":1111,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"! ```toml","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":1112,"byte_end":1123,"line_start":30,"line_end":30,"column_start":1,"column_end":12}},{"value":"! [dependencies.serde_with]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":1124,"byte_end":1153,"line_start":31,"line_end":31,"column_start":1,"column_end":30}},{"value":"! version = \"1.4.0\"","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":1154,"byte_end":1175,"line_start":32,"line_end":32,"column_start":1,"column_end":22}},{"value":"! features = [ \"...\" ]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":1176,"byte_end":1200,"line_start":33,"line_end":33,"column_start":1,"column_end":25}},{"value":"! ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":1201,"byte_end":1208,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":1209,"byte_end":1212,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! The crate is divided into different modules.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":1213,"byte_end":1261,"line_start":36,"line_end":36,"column_start":1,"column_end":49}},{"value":"! They contain helpers for external crates and must be enabled with the correspondig feature.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":1262,"byte_end":1357,"line_start":37,"line_end":37,"column_start":1,"column_end":96}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":1358,"byte_end":1361,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! Annotate your struct or enum to enable the custom de/serializer.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":1362,"byte_end":1430,"line_start":39,"line_end":39,"column_start":1,"column_end":69}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":1431,"byte_end":1434,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":1435,"byte_end":1446,"line_start":41,"line_end":41,"column_start":1,"column_end":12}},{"value":"! # extern crate serde;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":1447,"byte_end":1472,"line_start":42,"line_end":42,"column_start":1,"column_end":26}},{"value":"! # extern crate serde_derive;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":1473,"byte_end":1505,"line_start":43,"line_end":43,"column_start":1,"column_end":33}},{"value":"! # extern crate serde_with;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":1506,"byte_end":1536,"line_start":44,"line_end":44,"column_start":1,"column_end":31}},{"value":"! # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":1537,"byte_end":1586,"line_start":45,"line_end":45,"column_start":1,"column_end":50}},{"value":"! #[derive(Deserialize, Serialize)]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":1587,"byte_end":1624,"line_start":46,"line_end":46,"column_start":1,"column_end":38}},{"value":"! struct Foo {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":1625,"byte_end":1641,"line_start":47,"line_end":47,"column_start":1,"column_end":17}},{"value":"!     #[serde(with = \"serde_with::rust::display_fromstr\")]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":1642,"byte_end":1702,"line_start":48,"line_end":48,"column_start":1,"column_end":61}},{"value":"!     bar: u8,","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":1703,"byte_end":1719,"line_start":49,"line_end":49,"column_start":1,"column_end":17}},{"value":"! }","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":1720,"byte_end":1725,"line_start":50,"line_end":50,"column_start":1,"column_end":6}},{"value":"! # fn main() {}","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":1726,"byte_end":1744,"line_start":51,"line_end":51,"column_start":1,"column_end":19}},{"value":"! ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":1745,"byte_end":1752,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":1753,"byte_end":1756,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"! Most helpers implement both deserialize and serialize.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":1757,"byte_end":1815,"line_start":54,"line_end":54,"column_start":1,"column_end":59}},{"value":"! If you do not want to derive both, you can simply derive only the necessary parts.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":1816,"byte_end":1902,"line_start":55,"line_end":55,"column_start":1,"column_end":87}},{"value":"! If you want to mix different helpers, you can write your annotations like","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":1903,"byte_end":1980,"line_start":56,"line_end":56,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":1981,"byte_end":1984,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":1985,"byte_end":1996,"line_start":58,"line_end":58,"column_start":1,"column_end":12}},{"value":"! # extern crate serde;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":1997,"byte_end":2022,"line_start":59,"line_end":59,"column_start":1,"column_end":26}},{"value":"! # extern crate serde_derive;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":2023,"byte_end":2055,"line_start":60,"line_end":60,"column_start":1,"column_end":33}},{"value":"! # extern crate serde_with;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":2056,"byte_end":2086,"line_start":61,"line_end":61,"column_start":1,"column_end":31}},{"value":"! # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":2087,"byte_end":2136,"line_start":62,"line_end":62,"column_start":1,"column_end":50}},{"value":"! # #[cfg(feature = \"json\")]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":2137,"byte_end":2167,"line_start":63,"line_end":63,"column_start":1,"column_end":31}},{"value":"! #[derive(Deserialize, Serialize)]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":2168,"byte_end":2205,"line_start":64,"line_end":64,"column_start":1,"column_end":38}},{"value":"! struct Foo {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":2206,"byte_end":2222,"line_start":65,"line_end":65,"column_start":1,"column_end":17}},{"value":"!     #[serde(","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":2223,"byte_end":2239,"line_start":66,"line_end":66,"column_start":1,"column_end":17}},{"value":"!         deserialize_with = \"serde_with::rust::display_fromstr::deserialize\",","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":2240,"byte_end":2320,"line_start":67,"line_end":67,"column_start":1,"column_end":81}},{"value":"!         serialize_with = \"serde_with::json::nested::serialize\"","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":2321,"byte_end":2387,"line_start":68,"line_end":68,"column_start":1,"column_end":67}},{"value":"!     )]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":2388,"byte_end":2398,"line_start":69,"line_end":69,"column_start":1,"column_end":11}},{"value":"!     bar: u8,","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":2399,"byte_end":2415,"line_start":70,"line_end":70,"column_start":1,"column_end":17}},{"value":"! }","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":2416,"byte_end":2421,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"! # fn main() {}","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":2422,"byte_end":2440,"line_start":72,"line_end":72,"column_start":1,"column_end":19}},{"value":"! ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":2441,"byte_end":2448,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":2449,"byte_end":2452,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"! However, this will prohibit you from applying deserialize on the value returned by serializing a struct.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":2453,"byte_end":2561,"line_start":75,"line_end":75,"column_start":1,"column_end":109}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":2562,"byte_end":2565,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"! # Attributes","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":2566,"byte_end":2582,"line_start":77,"line_end":77,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":2583,"byte_end":2586,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"! The crate comes with custom attributes, which futher extend how serde serialization can be customized.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":2587,"byte_end":2693,"line_start":79,"line_end":79,"column_start":1,"column_end":107}},{"value":"! They are enabled by default, but can be disabled, by removing the default features from this crate.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":2694,"byte_end":2797,"line_start":80,"line_end":80,"column_start":1,"column_end":104}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":2798,"byte_end":2801,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"! The `serde_with` crate re-exports all items from `serde_with_macros`.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":2802,"byte_end":2875,"line_start":82,"line_end":82,"column_start":1,"column_end":74}},{"value":"! This means, if you want to use any proc_macros, import them like `use serde_with::skip_serializing_none`.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":2876,"byte_end":2985,"line_start":83,"line_end":83,"column_start":1,"column_end":110}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":2986,"byte_end":2989,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"! [The documentation for the custom attributes can be found here.](serde_with_macros)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":2990,"byte_end":3077,"line_start":85,"line_end":85,"column_start":1,"column_end":88}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":3078,"byte_end":3081,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"! [with-annotation]: https://serde.rs/field-attrs.html#serdewith--module","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":3082,"byte_end":3156,"line_start":87,"line_end":87,"column_start":1,"column_end":75}},{"value":"! [serde#553]: https://github.com/serde-rs/serde/issues/553","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":3157,"byte_end":3218,"line_start":88,"line_end":88,"column_start":1,"column_end":62}}]},{"kind":"Trait","id":{"krate":0,"index":16},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\duplicate_key_impls\\error_on_duplicate.rs","byte_start":4834,"byte_end":4860,"line_start":6,"line_end":6,"column_start":11,"column_end":37},"name":"PreventDuplicateInsertsSet","qualname":"::duplicate_key_impls::error_on_duplicate::PreventDuplicateInsertsSet","value":"PreventDuplicateInsertsSet<T>","parent":null,"children":[{"krate":0,"index":18},{"krate":0,"index":19}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\duplicate_key_impls\\error_on_duplicate.rs","byte_start":4873,"byte_end":4876,"line_start":7,"line_end":7,"column_start":8,"column_end":11},"name":"new","qualname":"::duplicate_key_impls::error_on_duplicate::PreventDuplicateInsertsSet::new","value":"fn (size_hint: Option<usize>) -> Self","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":19},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\duplicate_key_impls\\error_on_duplicate.rs","byte_start":5008,"byte_end":5014,"line_start":10,"line_end":10,"column_start":8,"column_end":14},"name":"insert","qualname":"::duplicate_key_impls::error_on_duplicate::PreventDuplicateInsertsSet::insert","value":"fn (&mut self, value: T) -> bool","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Return true if the insert was successful and the value did not exist in the set\n","sig":null,"attributes":[{"value":"/ Return true if the insert was successful and the value did not exist in the set","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\duplicate_key_impls\\error_on_duplicate.rs","byte_start":4917,"byte_end":5000,"line_start":9,"line_end":9,"column_start":5,"column_end":88}}]},{"kind":"Trait","id":{"krate":0,"index":20},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\duplicate_key_impls\\error_on_duplicate.rs","byte_start":5058,"byte_end":5084,"line_start":13,"line_end":13,"column_start":11,"column_end":37},"name":"PreventDuplicateInsertsMap","qualname":"::duplicate_key_impls::error_on_duplicate::PreventDuplicateInsertsMap","value":"PreventDuplicateInsertsMap<K, V>","parent":null,"children":[{"krate":0,"index":23},{"krate":0,"index":24}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\duplicate_key_impls\\error_on_duplicate.rs","byte_start":5100,"byte_end":5103,"line_start":14,"line_end":14,"column_start":8,"column_end":11},"name":"new","qualname":"::duplicate_key_impls::error_on_duplicate::PreventDuplicateInsertsMap::new","value":"fn (size_hint: Option<usize>) -> Self","parent":{"krate":0,"index":20},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\duplicate_key_impls\\error_on_duplicate.rs","byte_start":5233,"byte_end":5239,"line_start":17,"line_end":17,"column_start":8,"column_end":14},"name":"insert","qualname":"::duplicate_key_impls::error_on_duplicate::PreventDuplicateInsertsMap::insert","value":"fn (&mut self, key: K, value: V) -> bool","parent":{"krate":0,"index":20},"children":[],"decl_id":null,"docs":" Return true if the insert was successful and the key did not exist in the map\n","sig":null,"attributes":[{"value":"/ Return true if the insert was successful and the key did not exist in the map","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\duplicate_key_impls\\error_on_duplicate.rs","byte_start":5144,"byte_end":5225,"line_start":16,"line_end":16,"column_start":5,"column_end":86}}]},{"kind":"Trait","id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\duplicate_key_impls\\first_value_wins.rs","byte_start":6864,"byte_end":6892,"line_start":6,"line_end":6,"column_start":11,"column_end":39},"name":"DuplicateInsertsFirstWinsSet","qualname":"::duplicate_key_impls::first_value_wins::DuplicateInsertsFirstWinsSet","value":"DuplicateInsertsFirstWinsSet<T>","parent":null,"children":[{"krate":0,"index":57},{"krate":0,"index":58}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\duplicate_key_impls\\first_value_wins.rs","byte_start":6905,"byte_end":6908,"line_start":7,"line_end":7,"column_start":8,"column_end":11},"name":"new","qualname":"::duplicate_key_impls::first_value_wins::DuplicateInsertsFirstWinsSet::new","value":"fn (size_hint: Option<usize>) -> Self","parent":{"krate":0,"index":55},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\duplicate_key_impls\\first_value_wins.rs","byte_start":7033,"byte_end":7039,"line_start":10,"line_end":10,"column_start":8,"column_end":14},"name":"insert","qualname":"::duplicate_key_impls::first_value_wins::DuplicateInsertsFirstWinsSet::insert","value":"fn (&mut self, value: T) -> ()","parent":{"krate":0,"index":55},"children":[],"decl_id":null,"docs":" Insert the value into the set, if there is not already an existing value\n","sig":null,"attributes":[{"value":"/ Insert the value into the set, if there is not already an existing value","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\duplicate_key_impls\\first_value_wins.rs","byte_start":6949,"byte_end":7025,"line_start":9,"line_end":9,"column_start":5,"column_end":81}}]},{"kind":"Trait","id":{"krate":0,"index":59},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\duplicate_key_impls\\first_value_wins.rs","byte_start":7075,"byte_end":7103,"line_start":13,"line_end":13,"column_start":11,"column_end":39},"name":"DuplicateInsertsFirstWinsMap","qualname":"::duplicate_key_impls::first_value_wins::DuplicateInsertsFirstWinsMap","value":"DuplicateInsertsFirstWinsMap<K, V>","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":63}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\duplicate_key_impls\\first_value_wins.rs","byte_start":7119,"byte_end":7122,"line_start":14,"line_end":14,"column_start":8,"column_end":11},"name":"new","qualname":"::duplicate_key_impls::first_value_wins::DuplicateInsertsFirstWinsMap::new","value":"fn (size_hint: Option<usize>) -> Self","parent":{"krate":0,"index":59},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\duplicate_key_impls\\first_value_wins.rs","byte_start":7247,"byte_end":7253,"line_start":17,"line_end":17,"column_start":8,"column_end":14},"name":"insert","qualname":"::duplicate_key_impls::first_value_wins::DuplicateInsertsFirstWinsMap::insert","value":"fn (&mut self, key: K, value: V) -> ()","parent":{"krate":0,"index":59},"children":[],"decl_id":null,"docs":" Insert the value into the map, if there is not already an existing value\n","sig":null,"attributes":[{"value":"/ Insert the value into the map, if there is not already an existing value","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\duplicate_key_impls\\first_value_wins.rs","byte_start":7163,"byte_end":7239,"line_start":16,"line_end":16,"column_start":5,"column_end":81}}]},{"kind":"Mod","id":{"krate":0,"index":95},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rust","qualname":"::rust","value":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","parent":null,"children":[{"krate":0,"index":96},{"krate":0,"index":110},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":146},{"krate":0,"index":633},{"krate":0,"index":671},{"krate":0,"index":668},{"krate":0,"index":663},{"krate":0,"index":665},{"krate":0,"index":657},{"krate":0,"index":659},{"krate":0,"index":654},{"krate":0,"index":647},{"krate":0,"index":643},{"krate":0,"index":640},{"krate":0,"index":637},{"krate":0,"index":186},{"krate":0,"index":197},{"krate":0,"index":206},{"krate":0,"index":215},{"krate":0,"index":236},{"krate":0,"index":261},{"krate":0,"index":282},{"krate":0,"index":307},{"krate":0,"index":331},{"krate":0,"index":361},{"krate":0,"index":385},{"krate":0,"index":431},{"krate":0,"index":452},{"krate":0,"index":459}],"decl_id":null,"docs":" De/Serialization for Rust's builtin and std types\n","sig":null,"attributes":[{"value":"! De/Serialization for Rust's builtin and std types","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":12173,"byte_end":12226,"line_start":1,"line_end":1,"column_start":1,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":125},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":13746,"byte_end":13761,"line_start":56,"line_end":56,"column_start":9,"column_end":24},"name":"display_fromstr","qualname":"::rust::display_fromstr","value":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","parent":null,"children":[{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":143}],"decl_id":null,"docs":" De/Serialize using [`Display`] and [`FromStr`] implementation","sig":null,"attributes":[{"value":"/ De/Serialize using [`Display`] and [`FromStr`] implementation","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":12604,"byte_end":12669,"line_start":18,"line_end":18,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":12670,"byte_end":12673,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This allows to deserialize a string as a number.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":12674,"byte_end":12726,"line_start":20,"line_end":20,"column_start":1,"column_end":53}},{"value":"/ It can be very useful for serialization formats like JSON, which do not support integer","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":12727,"byte_end":12818,"line_start":21,"line_end":21,"column_start":1,"column_end":92}},{"value":"/ numbers and have to resort to strings to represent them.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":12819,"byte_end":12879,"line_start":22,"line_end":22,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":12880,"byte_end":12883,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":12884,"byte_end":12898,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":12899,"byte_end":12902,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":12903,"byte_end":12910,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ # extern crate serde;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":12911,"byte_end":12936,"line_start":27,"line_end":27,"column_start":1,"column_end":26}},{"value":"/ # extern crate serde_derive;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":12937,"byte_end":12969,"line_start":28,"line_end":28,"column_start":1,"column_end":33}},{"value":"/ # extern crate serde_json;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":12970,"byte_end":13000,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/ # extern crate serde_with;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":13001,"byte_end":13031,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/ #","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":13032,"byte_end":13037,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":13038,"byte_end":13087,"line_start":32,"line_end":32,"column_start":1,"column_end":50}},{"value":"/ # use std::net::Ipv4Addr;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":13088,"byte_end":13117,"line_start":33,"line_end":33,"column_start":1,"column_end":30}},{"value":"/ #","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":13118,"byte_end":13123,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":13124,"byte_end":13161,"line_start":35,"line_end":35,"column_start":1,"column_end":38}},{"value":"/ struct A {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":13162,"byte_end":13176,"line_start":36,"line_end":36,"column_start":1,"column_end":15}},{"value":"/     #[serde(with = \"serde_with::rust::display_fromstr\")]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":13177,"byte_end":13237,"line_start":37,"line_end":37,"column_start":1,"column_end":61}},{"value":"/     address: Ipv4Addr,","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":13238,"byte_end":13264,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/     #[serde(with = \"serde_with::rust::display_fromstr\")]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":13265,"byte_end":13325,"line_start":39,"line_end":39,"column_start":1,"column_end":61}},{"value":"/     b: bool,","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":13326,"byte_end":13342,"line_start":40,"line_end":40,"column_start":1,"column_end":17}},{"value":"/ }","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":13343,"byte_end":13348,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":13349,"byte_end":13352,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let v: A = serde_json::from_str(r#\"{","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":13353,"byte_end":13393,"line_start":43,"line_end":43,"column_start":1,"column_end":41}},{"value":"/     \"address\": \"192.168.2.1\",","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":13394,"byte_end":13427,"line_start":44,"line_end":44,"column_start":1,"column_end":34}},{"value":"/     \"b\": \"true\"","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":13428,"byte_end":13447,"line_start":45,"line_end":45,"column_start":1,"column_end":20}},{"value":"/ }\"#).unwrap();","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":13448,"byte_end":13466,"line_start":46,"line_end":46,"column_start":1,"column_end":19}},{"value":"/ assert_eq!(Ipv4Addr::new(192, 168, 2, 1), v.address);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":13467,"byte_end":13524,"line_start":47,"line_end":47,"column_start":1,"column_end":58}},{"value":"/ assert!(v.b);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":13525,"byte_end":13542,"line_start":48,"line_end":48,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":13543,"byte_end":13546,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ let x = A {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":13547,"byte_end":13562,"line_start":50,"line_end":50,"column_start":1,"column_end":16}},{"value":"/     address: Ipv4Addr::new(127, 53, 0, 1),","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":13563,"byte_end":13609,"line_start":51,"line_end":51,"column_start":1,"column_end":47}},{"value":"/     b: false,","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":13610,"byte_end":13627,"line_start":52,"line_end":52,"column_start":1,"column_end":18}},{"value":"/ };","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":13628,"byte_end":13634,"line_start":53,"line_end":53,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(r#\"{\"address\":\"127.53.0.1\",\"b\":\"false\"}\"#, serde_json::to_string(&x).unwrap());","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":13635,"byte_end":13729,"line_start":54,"line_end":54,"column_start":1,"column_end":95}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":13730,"byte_end":13737,"line_start":55,"line_end":55,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":128},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":13859,"byte_end":13870,"line_start":61,"line_end":61,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::display_fromstr::deserialize","value":"fn <'de, D, T> (deserializer: D) -> Result<T, D::Error>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize T using [FromStr]\n","sig":null,"attributes":[{"value":"/ Deserialize T using [FromStr]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":13814,"byte_end":13847,"line_start":60,"line_end":60,"column_start":5,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":143},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":14710,"byte_end":14719,"line_start":92,"line_end":92,"column_start":12,"column_end":21},"name":"serialize","qualname":"::rust::display_fromstr::serialize","value":"fn <T, S> (value: &T, serializer: S) -> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Serialize T using [Display]\n","sig":null,"attributes":[{"value":"/ Serialize T using [Display]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":14667,"byte_end":14698,"line_start":91,"line_end":91,"column_start":5,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":146},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":16590,"byte_end":16609,"line_start":148,"line_end":148,"column_start":9,"column_end":28},"name":"seq_display_fromstr","qualname":"::rust::seq_display_fromstr","value":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","parent":null,"children":[{"krate":0,"index":147},{"krate":0,"index":156},{"krate":0,"index":165},{"krate":0,"index":181}],"decl_id":null,"docs":" De/Serialize sequences using [`FromIterator`] and [`IntoIterator`] implementation for it and [`Display`] and [`FromStr`] implementation for each element","sig":null,"attributes":[{"value":"/ De/Serialize sequences using [`FromIterator`] and [`IntoIterator`] implementation for it and [`Display`] and [`FromStr`] implementation for each element","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":14901,"byte_end":15057,"line_start":101,"line_end":101,"column_start":1,"column_end":157}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":15058,"byte_end":15061,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ This allows to serialize and deserialize collections with elements which can be represented as strings.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":15062,"byte_end":15169,"line_start":103,"line_end":103,"column_start":1,"column_end":108}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":15170,"byte_end":15173,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":15174,"byte_end":15188,"line_start":105,"line_end":105,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":15189,"byte_end":15192,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":15193,"byte_end":15200,"line_start":107,"line_end":107,"column_start":1,"column_end":8}},{"value":"/ # extern crate serde;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":15201,"byte_end":15226,"line_start":108,"line_end":108,"column_start":1,"column_end":26}},{"value":"/ # extern crate serde_derive;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":15227,"byte_end":15259,"line_start":109,"line_end":109,"column_start":1,"column_end":33}},{"value":"/ # extern crate serde_json;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":15260,"byte_end":15290,"line_start":110,"line_end":110,"column_start":1,"column_end":31}},{"value":"/ # extern crate serde_with;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":15291,"byte_end":15321,"line_start":111,"line_end":111,"column_start":1,"column_end":31}},{"value":"/ #","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":15322,"byte_end":15327,"line_start":112,"line_end":112,"column_start":1,"column_end":6}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":15328,"byte_end":15377,"line_start":113,"line_end":113,"column_start":1,"column_end":50}},{"value":"/ #","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":15378,"byte_end":15383,"line_start":114,"line_end":114,"column_start":1,"column_end":6}},{"value":"/ use std::collections::BTreeSet;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":15384,"byte_end":15419,"line_start":115,"line_end":115,"column_start":1,"column_end":36}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":15420,"byte_end":15447,"line_start":116,"line_end":116,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":15448,"byte_end":15451,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":15452,"byte_end":15489,"line_start":118,"line_end":118,"column_start":1,"column_end":38}},{"value":"/ struct A {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":15490,"byte_end":15504,"line_start":119,"line_end":119,"column_start":1,"column_end":15}},{"value":"/     #[serde(with = \"serde_with::rust::seq_display_fromstr\")]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":15505,"byte_end":15569,"line_start":120,"line_end":120,"column_start":1,"column_end":65}},{"value":"/     addresses: BTreeSet<Ipv4Addr>,","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":15570,"byte_end":15608,"line_start":121,"line_end":121,"column_start":1,"column_end":39}},{"value":"/     #[serde(with = \"serde_with::rust::seq_display_fromstr\")]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":15609,"byte_end":15673,"line_start":122,"line_end":122,"column_start":1,"column_end":65}},{"value":"/     bs: Vec<bool>,","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":15674,"byte_end":15696,"line_start":123,"line_end":123,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":15697,"byte_end":15702,"line_start":124,"line_end":124,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":15703,"byte_end":15706,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ let v: A = serde_json::from_str(r#\"{","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":15707,"byte_end":15747,"line_start":126,"line_end":126,"column_start":1,"column_end":41}},{"value":"/     \"addresses\": [\"192.168.2.1\", \"192.168.2.2\", \"192.168.1.1\", \"192.168.2.2\"],","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":15748,"byte_end":15830,"line_start":127,"line_end":127,"column_start":1,"column_end":83}},{"value":"/     \"bs\": [\"true\", \"false\"]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":15831,"byte_end":15862,"line_start":128,"line_end":128,"column_start":1,"column_end":32}},{"value":"/ }\"#).unwrap();","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":15863,"byte_end":15881,"line_start":129,"line_end":129,"column_start":1,"column_end":19}},{"value":"/ assert_eq!(v.addresses.len(), 3);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":15882,"byte_end":15919,"line_start":130,"line_end":130,"column_start":1,"column_end":38}},{"value":"/ assert!(v.addresses.contains(&Ipv4Addr::new(192, 168, 2, 1)));","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":15920,"byte_end":15986,"line_start":131,"line_end":131,"column_start":1,"column_end":67}},{"value":"/ assert!(v.addresses.contains(&Ipv4Addr::new(192, 168, 2, 2)));","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":15987,"byte_end":16053,"line_start":132,"line_end":132,"column_start":1,"column_end":67}},{"value":"/ assert!(!v.addresses.contains(&Ipv4Addr::new(192, 168, 1, 2)));","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":16054,"byte_end":16121,"line_start":133,"line_end":133,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(v.bs.len(), 2);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":16122,"byte_end":16152,"line_start":134,"line_end":134,"column_start":1,"column_end":31}},{"value":"/ assert!(v.bs[0]);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":16153,"byte_end":16174,"line_start":135,"line_end":135,"column_start":1,"column_end":22}},{"value":"/ assert!(!v.bs[1]);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":16175,"byte_end":16197,"line_start":136,"line_end":136,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":16198,"byte_end":16201,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ let x = A {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":16202,"byte_end":16217,"line_start":138,"line_end":138,"column_start":1,"column_end":16}},{"value":"/     addresses: vec![","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":16218,"byte_end":16242,"line_start":139,"line_end":139,"column_start":1,"column_end":25}},{"value":"/         Ipv4Addr::new(127, 53, 0, 1),","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":16243,"byte_end":16284,"line_start":140,"line_end":140,"column_start":1,"column_end":42}},{"value":"/         Ipv4Addr::new(127, 53, 1, 1),","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":16285,"byte_end":16326,"line_start":141,"line_end":141,"column_start":1,"column_end":42}},{"value":"/         Ipv4Addr::new(127, 53, 0, 2)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":16327,"byte_end":16367,"line_start":142,"line_end":142,"column_start":1,"column_end":41}},{"value":"/     ].into_iter().collect(),","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":16368,"byte_end":16400,"line_start":143,"line_end":143,"column_start":1,"column_end":33}},{"value":"/     bs: vec![false, true],","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":16401,"byte_end":16431,"line_start":144,"line_end":144,"column_start":1,"column_end":31}},{"value":"/ };","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":16432,"byte_end":16438,"line_start":145,"line_end":145,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(r#\"{\"addresses\":[\"127.53.0.1\",\"127.53.0.2\",\"127.53.1.1\"],\"bs\":[\"false\",\"true\"]}\"#, serde_json::to_string(&x).unwrap());","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":16439,"byte_end":16573,"line_start":146,"line_end":146,"column_start":1,"column_end":135}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":16574,"byte_end":16581,"line_start":147,"line_end":147,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":165},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":16976,"byte_end":16987,"line_start":161,"line_end":161,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::seq_display_fromstr::deserialize","value":"fn <'de, D, T, I> (deserializer: D) -> Result<T, D::Error>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize collection T using [FromIterator] and [FromStr] for each element\n","sig":null,"attributes":[{"value":"/ Deserialize collection T using [FromIterator] and [FromStr] for each element","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":16884,"byte_end":16964,"line_start":160,"line_end":160,"column_start":5,"column_end":85}}]},{"kind":"Function","id":{"krate":0,"index":181},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":18283,"byte_end":18292,"line_start":204,"line_end":204,"column_start":12,"column_end":21},"name":"serialize","qualname":"::rust::seq_display_fromstr::serialize","value":"fn <S, T, I> (value: &T, serializer: S) -> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Serialize collection T using [IntoIterator] and [Display] for each element\n","sig":null,"attributes":[{"value":"/ Serialize collection T using [IntoIterator] and [Display] for each element","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":18193,"byte_end":18271,"line_start":203,"line_end":203,"column_start":5,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":633},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":20211,"byte_end":20230,"line_start":262,"line_end":262,"column_start":12,"column_end":31},"name":"StringWithSeparator","qualname":"::rust::StringWithSeparator","value":"","parent":null,"children":[],"decl_id":null,"docs":" De/Serialize a delimited collection using [`Display`] and [`FromStr`] implementation","sig":null,"attributes":[{"value":"/ De/Serialize a delimited collection using [`Display`] and [`FromStr`] implementation","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":18715,"byte_end":18803,"line_start":220,"line_end":220,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":18804,"byte_end":18807,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ You can define an arbitrary separator, by specifying a type which implements [`Separator`].","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":18808,"byte_end":18903,"line_start":222,"line_end":222,"column_start":1,"column_end":96}},{"value":"/ Some common ones, like space and comma are already predefined and you can find them [here][Separator].","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":18904,"byte_end":19010,"line_start":223,"line_end":223,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":19011,"byte_end":19014,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ An empty string deserializes as an empty collection.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":19015,"byte_end":19071,"line_start":225,"line_end":225,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":19072,"byte_end":19075,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":19076,"byte_end":19090,"line_start":227,"line_end":227,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":19091,"byte_end":19094,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":19095,"byte_end":19102,"line_start":229,"line_end":229,"column_start":1,"column_end":8}},{"value":"/ # extern crate serde;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":19103,"byte_end":19128,"line_start":230,"line_end":230,"column_start":1,"column_end":26}},{"value":"/ # extern crate serde_derive;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":19129,"byte_end":19161,"line_start":231,"line_end":231,"column_start":1,"column_end":33}},{"value":"/ # extern crate serde_json;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":19162,"byte_end":19192,"line_start":232,"line_end":232,"column_start":1,"column_end":31}},{"value":"/ # extern crate serde_with;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":19193,"byte_end":19223,"line_start":233,"line_end":233,"column_start":1,"column_end":31}},{"value":"/ #","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":19224,"byte_end":19229,"line_start":234,"line_end":234,"column_start":1,"column_end":6}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":19230,"byte_end":19279,"line_start":235,"line_end":235,"column_start":1,"column_end":50}},{"value":"/ #","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":19280,"byte_end":19285,"line_start":236,"line_end":236,"column_start":1,"column_end":6}},{"value":"/ use serde_with::{CommaSeparator, SpaceSeparator};","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":19286,"byte_end":19339,"line_start":237,"line_end":237,"column_start":1,"column_end":54}},{"value":"/ use std::collections::BTreeSet;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":19340,"byte_end":19375,"line_start":238,"line_end":238,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":19376,"byte_end":19379,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":19380,"byte_end":19417,"line_start":240,"line_end":240,"column_start":1,"column_end":38}},{"value":"/ struct A {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":19418,"byte_end":19432,"line_start":241,"line_end":241,"column_start":1,"column_end":15}},{"value":"/     #[serde(with = \"serde_with::rust::StringWithSeparator::<SpaceSeparator>\")]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":19433,"byte_end":19515,"line_start":242,"line_end":242,"column_start":1,"column_end":83}},{"value":"/     tags: Vec<String>,","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":19516,"byte_end":19542,"line_start":243,"line_end":243,"column_start":1,"column_end":27}},{"value":"/     #[serde(with = \"serde_with::rust::StringWithSeparator::<CommaSeparator>\")]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":19543,"byte_end":19625,"line_start":244,"line_end":244,"column_start":1,"column_end":83}},{"value":"/     more_tags: BTreeSet<String>,","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":19626,"byte_end":19662,"line_start":245,"line_end":245,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":19663,"byte_end":19668,"line_start":246,"line_end":246,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":19669,"byte_end":19672,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/ let v: A = serde_json::from_str(r##\"{","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":19673,"byte_end":19714,"line_start":248,"line_end":248,"column_start":1,"column_end":42}},{"value":"/     \"tags\": \"#hello #world\",","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":19715,"byte_end":19747,"line_start":249,"line_end":249,"column_start":1,"column_end":33}},{"value":"/     \"more_tags\": \"foo,bar,bar\"","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":19748,"byte_end":19782,"line_start":250,"line_end":250,"column_start":1,"column_end":35}},{"value":"/ }\"##).unwrap();","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":19783,"byte_end":19802,"line_start":251,"line_end":251,"column_start":1,"column_end":20}},{"value":"/ assert_eq!(vec![\"#hello\", \"#world\"], v.tags);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":19803,"byte_end":19852,"line_start":252,"line_end":252,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(2, v.more_tags.len());","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":19853,"byte_end":19890,"line_start":253,"line_end":253,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":19891,"byte_end":19894,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ let x = A {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":19895,"byte_end":19910,"line_start":255,"line_end":255,"column_start":1,"column_end":16}},{"value":"/     tags: vec![\"1\".to_string(), \"2\".to_string(), \"3\".to_string()],","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":19911,"byte_end":19981,"line_start":256,"line_end":256,"column_start":1,"column_end":71}},{"value":"/     more_tags: BTreeSet::new(),","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":19982,"byte_end":20017,"line_start":257,"line_end":257,"column_start":1,"column_end":36}},{"value":"/ };","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":20018,"byte_end":20024,"line_start":258,"line_end":258,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(r#\"{\"tags\":\"1 2 3\",\"more_tags\":\"\"}\"#, serde_json::to_string(&x).unwrap());","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":20025,"byte_end":20114,"line_start":259,"line_end":259,"column_start":1,"column_end":90}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":20115,"byte_end":20122,"line_start":260,"line_end":260,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":20395,"byte_end":20404,"line_start":269,"line_end":269,"column_start":12,"column_end":21},"name":"serialize","qualname":"<StringWithSeparator<Sep>>::serialize","value":"fn <S, T, V> (values: T, serializer: S) -> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Serialize collection into a string with separator symbol\n","sig":null,"attributes":[{"value":"/ Serialize collection into a string with separator symbol","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":20323,"byte_end":20383,"line_start":268,"line_end":268,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":21004,"byte_end":21015,"line_start":289,"line_end":289,"column_start":12,"column_end":23},"name":"deserialize","qualname":"<StringWithSeparator<Sep>>::deserialize","value":"fn <'de, D, T, V> (deserializer: D) -> Result<T, D::Error>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a collection from a string with separator symbol\n","sig":null,"attributes":[{"value":"/ Deserialize a collection from a string with separator symbol","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":20928,"byte_end":20992,"line_start":288,"line_end":288,"column_start":5,"column_end":69}}]},{"kind":"Mod","id":{"krate":0,"index":197},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":23374,"byte_end":23387,"line_start":355,"line_end":355,"column_start":9,"column_end":22},"name":"double_option","qualname":"::rust::double_option","value":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","parent":null,"children":[{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":203}],"decl_id":null,"docs":" Makes a distinction between a missing, unset, or existing value","sig":null,"attributes":[{"value":"/ Makes a distinction between a missing, unset, or existing value","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":21507,"byte_end":21574,"line_start":308,"line_end":308,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":21575,"byte_end":21578,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ Some serialization formats make a distinction between missing fields, fields with a `null`","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":21579,"byte_end":21673,"line_start":310,"line_end":310,"column_start":1,"column_end":95}},{"value":"/ value, and existing values. One such format is JSON. By default it is not easily possible to","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":21674,"byte_end":21770,"line_start":311,"line_end":311,"column_start":1,"column_end":97}},{"value":"/ differentiate between a missing value and a field which is `null`, as they deserialize to the","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":21771,"byte_end":21868,"line_start":312,"line_end":312,"column_start":1,"column_end":98}},{"value":"/ same value. This helper changes it, by using an `Option<Option<T>>` to deserialize into.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":21869,"byte_end":21961,"line_start":313,"line_end":313,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":21962,"byte_end":21965,"line_start":314,"line_end":314,"column_start":1,"column_end":4}},{"value":"/ * `None`: Represents a missing value.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":21966,"byte_end":22007,"line_start":315,"line_end":315,"column_start":1,"column_end":42}},{"value":"/ * `Some(None)`: Represents a `null` value.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":22008,"byte_end":22054,"line_start":316,"line_end":316,"column_start":1,"column_end":47}},{"value":"/ * `Some(Some(value))`: Represents an existing value.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":22055,"byte_end":22111,"line_start":317,"line_end":317,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":22112,"byte_end":22115,"line_start":318,"line_end":318,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":22116,"byte_end":22130,"line_start":319,"line_end":319,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":22131,"byte_end":22134,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":22135,"byte_end":22146,"line_start":321,"line_end":321,"column_start":1,"column_end":12}},{"value":"/ # extern crate serde;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":22147,"byte_end":22172,"line_start":322,"line_end":322,"column_start":1,"column_end":26}},{"value":"/ # extern crate serde_derive;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":22173,"byte_end":22205,"line_start":323,"line_end":323,"column_start":1,"column_end":33}},{"value":"/ # extern crate serde_json;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":22206,"byte_end":22236,"line_start":324,"line_end":324,"column_start":1,"column_end":31}},{"value":"/ # extern crate serde_with;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":22237,"byte_end":22267,"line_start":325,"line_end":325,"column_start":1,"column_end":31}},{"value":"/ #","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":22268,"byte_end":22273,"line_start":326,"line_end":326,"column_start":1,"column_end":6}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":22274,"byte_end":22323,"line_start":327,"line_end":327,"column_start":1,"column_end":50}},{"value":"/ #","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":22324,"byte_end":22329,"line_start":328,"line_end":328,"column_start":1,"column_end":6}},{"value":"/ # #[derive(Debug, PartialEq, Eq)]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":22330,"byte_end":22367,"line_start":329,"line_end":329,"column_start":1,"column_end":38}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":22368,"byte_end":22405,"line_start":330,"line_end":330,"column_start":1,"column_end":38}},{"value":"/ struct Doc {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":22406,"byte_end":22422,"line_start":331,"line_end":331,"column_start":1,"column_end":17}},{"value":"/     #[serde(","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":22423,"byte_end":22439,"line_start":332,"line_end":332,"column_start":1,"column_end":17}},{"value":"/         default,                                    // <- important for deserialization","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":22440,"byte_end":22531,"line_start":333,"line_end":333,"column_start":1,"column_end":92}},{"value":"/         skip_serializing_if = \"Option::is_none\",    // <- important for serialization","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":22532,"byte_end":22621,"line_start":334,"line_end":334,"column_start":1,"column_end":90}},{"value":"/         with = \"::serde_with::rust::double_option\",","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":22622,"byte_end":22677,"line_start":335,"line_end":335,"column_start":1,"column_end":56}},{"value":"/     )]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":22678,"byte_end":22688,"line_start":336,"line_end":336,"column_start":1,"column_end":11}},{"value":"/     a: Option<Option<u8>>,","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":22689,"byte_end":22719,"line_start":337,"line_end":337,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":22720,"byte_end":22725,"line_start":338,"line_end":338,"column_start":1,"column_end":6}},{"value":"/ // Missing Value","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":22726,"byte_end":22746,"line_start":339,"line_end":339,"column_start":1,"column_end":21}},{"value":"/ let s = r#\"{}\"#;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":22747,"byte_end":22767,"line_start":340,"line_end":340,"column_start":1,"column_end":21}},{"value":"/ assert_eq!(Doc {a: None}, serde_json::from_str(s).unwrap());","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":22768,"byte_end":22832,"line_start":341,"line_end":341,"column_start":1,"column_end":65}},{"value":"/ assert_eq!(s, serde_json::to_string(&Doc {a: None}).unwrap());","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":22833,"byte_end":22899,"line_start":342,"line_end":342,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":22900,"byte_end":22903,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ // Unset Value","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":22904,"byte_end":22922,"line_start":344,"line_end":344,"column_start":1,"column_end":19}},{"value":"/ let s = r#\"{\"a\":null}\"#;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":22923,"byte_end":22951,"line_start":345,"line_end":345,"column_start":1,"column_end":29}},{"value":"/ assert_eq!(Doc {a: Some(None)}, serde_json::from_str(s).unwrap());","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":22952,"byte_end":23022,"line_start":346,"line_end":346,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(s, serde_json::to_string(&Doc {a: Some(None)}).unwrap());","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":23023,"byte_end":23095,"line_start":347,"line_end":347,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":23096,"byte_end":23099,"line_start":348,"line_end":348,"column_start":1,"column_end":4}},{"value":"/ // Existing Value","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":23100,"byte_end":23121,"line_start":349,"line_end":349,"column_start":1,"column_end":22}},{"value":"/ let s = r#\"{\"a\":5}\"#;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":23122,"byte_end":23147,"line_start":350,"line_end":350,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(Doc {a: Some(Some(5))}, serde_json::from_str(s).unwrap());","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":23148,"byte_end":23221,"line_start":351,"line_end":351,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(s, serde_json::to_string(&Doc {a: Some(Some(5))}).unwrap());","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":23222,"byte_end":23297,"line_start":352,"line_end":352,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":23298,"byte_end":23305,"line_start":353,"line_end":353,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":199},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":23480,"byte_end":23491,"line_start":359,"line_end":359,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::double_option::deserialize","value":"fn <'de, T, D> (deserializer: D) -> Result<Option<Option<T>>, D::Error>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize potentially non-existing optional value\n","sig":null,"attributes":[{"value":"/ Deserialize potentially non-existing optional value","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":23413,"byte_end":23468,"line_start":358,"line_end":358,"column_start":5,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":203},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":23742,"byte_end":23751,"line_start":368,"line_end":368,"column_start":12,"column_end":21},"name":"serialize","qualname":"::rust::double_option::serialize","value":"fn <S, T> (values: &Option<Option<T>>, serializer: S) -> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Serialize optional value\n","sig":null,"attributes":[{"value":"/ Serialize optional value","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":23702,"byte_end":23730,"line_start":367,"line_end":367,"column_start":5,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":206},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":26425,"byte_end":26439,"line_start":450,"line_end":450,"column_start":9,"column_end":23},"name":"unwrap_or_skip","qualname":"::rust::unwrap_or_skip","value":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","parent":null,"children":[{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":212}],"decl_id":null,"docs":" Serialize inner value if [`Some`]`(T)`. If [`None`], serialize the unit struct `()`.","sig":null,"attributes":[{"value":"/ Serialize inner value if [`Some`]`(T)`. If [`None`], serialize the unit struct `()`.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":24095,"byte_end":24183,"line_start":381,"line_end":381,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":24184,"byte_end":24187,"line_start":382,"line_end":382,"column_start":1,"column_end":4}},{"value":"/ When used in conjunction with `skip_serializing_if = \"Option::is_none\"` and","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":24188,"byte_end":24267,"line_start":383,"line_end":383,"column_start":1,"column_end":80}},{"value":"/ `default`, you can build an optional value by skipping if it is [`None`], or serializing its","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":24268,"byte_end":24364,"line_start":384,"line_end":384,"column_start":1,"column_end":97}},{"value":"/ inner value if [`Some`]`(T)`.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":24365,"byte_end":24398,"line_start":385,"line_end":385,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":24399,"byte_end":24402,"line_start":386,"line_end":386,"column_start":1,"column_end":4}},{"value":"/ Not all serialization formats easily support optional values.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":24403,"byte_end":24468,"line_start":387,"line_end":387,"column_start":1,"column_end":66}},{"value":"/ While JSON uses the [`Option`] type to represent optional values and only serializes the inner","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":24469,"byte_end":24567,"line_start":388,"line_end":388,"column_start":1,"column_end":99}},{"value":"/ part of the [`Some`]`()`, other serialization formats, such as [RON][], choose to serialize the","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":24568,"byte_end":24667,"line_start":389,"line_end":389,"column_start":1,"column_end":100}},{"value":"/ [`Some`] around a value.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":24668,"byte_end":24696,"line_start":390,"line_end":390,"column_start":1,"column_end":29}},{"value":"/ This helper helps building a truly optional value for such serializers.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":24697,"byte_end":24772,"line_start":391,"line_end":391,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":24773,"byte_end":24776,"line_start":392,"line_end":392,"column_start":1,"column_end":4}},{"value":"/ [RON]: https://github.com/ron-rs/ron","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":24777,"byte_end":24817,"line_start":393,"line_end":393,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":24818,"byte_end":24821,"line_start":394,"line_end":394,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":24822,"byte_end":24835,"line_start":395,"line_end":395,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":24836,"byte_end":24839,"line_start":396,"line_end":396,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":24840,"byte_end":24851,"line_start":397,"line_end":397,"column_start":1,"column_end":12}},{"value":"/ # extern crate serde;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":24852,"byte_end":24877,"line_start":398,"line_end":398,"column_start":1,"column_end":26}},{"value":"/ # extern crate serde_derive;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":24878,"byte_end":24910,"line_start":399,"line_end":399,"column_start":1,"column_end":33}},{"value":"/ # extern crate serde_json;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":24911,"byte_end":24941,"line_start":400,"line_end":400,"column_start":1,"column_end":31}},{"value":"/ # extern crate serde_with;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":24942,"byte_end":24972,"line_start":401,"line_end":401,"column_start":1,"column_end":31}},{"value":"/ # extern crate ron;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":24973,"byte_end":24996,"line_start":402,"line_end":402,"column_start":1,"column_end":24}},{"value":"/ #","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":24997,"byte_end":25002,"line_start":403,"line_end":403,"column_start":1,"column_end":6}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":25003,"byte_end":25052,"line_start":404,"line_end":404,"column_start":1,"column_end":50}},{"value":"/ #","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":25053,"byte_end":25058,"line_start":405,"line_end":405,"column_start":1,"column_end":6}},{"value":"/ # #[derive(Debug, Eq, PartialEq)]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":25059,"byte_end":25096,"line_start":406,"line_end":406,"column_start":1,"column_end":38}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":25097,"byte_end":25134,"line_start":407,"line_end":407,"column_start":1,"column_end":38}},{"value":"/ struct Doc {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":25135,"byte_end":25151,"line_start":408,"line_end":408,"column_start":1,"column_end":17}},{"value":"/     mandatory: usize,","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":25152,"byte_end":25177,"line_start":409,"line_end":409,"column_start":1,"column_end":26}},{"value":"/     #[serde(","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":25178,"byte_end":25194,"line_start":410,"line_end":410,"column_start":1,"column_end":17}},{"value":"/         default,                                    // <- important for deserialization","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":25195,"byte_end":25286,"line_start":411,"line_end":411,"column_start":1,"column_end":92}},{"value":"/         skip_serializing_if = \"Option::is_none\",    // <- important for serialization","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":25287,"byte_end":25376,"line_start":412,"line_end":412,"column_start":1,"column_end":90}},{"value":"/         with = \"::serde_with::rust::unwrap_or_skip\",","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":25377,"byte_end":25433,"line_start":413,"line_end":413,"column_start":1,"column_end":57}},{"value":"/     )]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":25434,"byte_end":25444,"line_start":414,"line_end":414,"column_start":1,"column_end":11}},{"value":"/     optional: Option<usize>,","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":25445,"byte_end":25477,"line_start":415,"line_end":415,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":25478,"byte_end":25483,"line_start":416,"line_end":416,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":25484,"byte_end":25487,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ // Transparently add/remove Some() wrapper","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":25488,"byte_end":25534,"line_start":418,"line_end":418,"column_start":1,"column_end":47}},{"value":"/ # let pretty_config = ron::ser::PrettyConfig {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":25535,"byte_end":25585,"line_start":419,"line_end":419,"column_start":1,"column_end":51}},{"value":"/ #     new_line: \"\\n\".into(),","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":25586,"byte_end":25618,"line_start":420,"line_end":420,"column_start":1,"column_end":33}},{"value":"/ #     ..Default::default()","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":25619,"byte_end":25649,"line_start":421,"line_end":421,"column_start":1,"column_end":31}},{"value":"/ # };","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":25650,"byte_end":25658,"line_start":422,"line_end":422,"column_start":1,"column_end":9}},{"value":"/ let s = r#\"(","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":25659,"byte_end":25675,"line_start":423,"line_end":423,"column_start":1,"column_end":17}},{"value":"/     mandatory: 1,","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":25676,"byte_end":25697,"line_start":424,"line_end":424,"column_start":1,"column_end":22}},{"value":"/     optional: 2,","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":25698,"byte_end":25718,"line_start":425,"line_end":425,"column_start":1,"column_end":21}},{"value":"/ )\"#;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":25719,"byte_end":25727,"line_start":426,"line_end":426,"column_start":1,"column_end":9}},{"value":"/ let v = Doc {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":25728,"byte_end":25745,"line_start":427,"line_end":427,"column_start":1,"column_end":18}},{"value":"/     mandatory: 1,","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":25746,"byte_end":25767,"line_start":428,"line_end":428,"column_start":1,"column_end":22}},{"value":"/     optional: Some(2),","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":25768,"byte_end":25794,"line_start":429,"line_end":429,"column_start":1,"column_end":27}},{"value":"/ };","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":25795,"byte_end":25801,"line_start":430,"line_end":430,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(v, ron::de::from_str(s).unwrap());","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":25802,"byte_end":25851,"line_start":431,"line_end":431,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(s, ron::ser::to_string_pretty(&v, pretty_config).unwrap());","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":25852,"byte_end":25926,"line_start":432,"line_end":432,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":25927,"byte_end":25930,"line_start":433,"line_end":433,"column_start":1,"column_end":4}},{"value":"/ // Missing values are deserialized as `None`","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":25931,"byte_end":25979,"line_start":434,"line_end":434,"column_start":1,"column_end":49}},{"value":"/ // while `None` values are skipped during serialization.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":25980,"byte_end":26040,"line_start":435,"line_end":435,"column_start":1,"column_end":61}},{"value":"/ # let pretty_config = ron::ser::PrettyConfig {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":26041,"byte_end":26091,"line_start":436,"line_end":436,"column_start":1,"column_end":51}},{"value":"/ #     new_line: \"\\n\".into(),","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":26092,"byte_end":26124,"line_start":437,"line_end":437,"column_start":1,"column_end":33}},{"value":"/ #     ..Default::default()","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":26125,"byte_end":26155,"line_start":438,"line_end":438,"column_start":1,"column_end":31}},{"value":"/ # };","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":26156,"byte_end":26164,"line_start":439,"line_end":439,"column_start":1,"column_end":9}},{"value":"/ let s = r#\"(","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":26165,"byte_end":26181,"line_start":440,"line_end":440,"column_start":1,"column_end":17}},{"value":"/     mandatory: 1,","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":26182,"byte_end":26203,"line_start":441,"line_end":441,"column_start":1,"column_end":22}},{"value":"/ )\"#;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":26204,"byte_end":26212,"line_start":442,"line_end":442,"column_start":1,"column_end":9}},{"value":"/ let v = Doc {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":26213,"byte_end":26230,"line_start":443,"line_end":443,"column_start":1,"column_end":18}},{"value":"/     mandatory: 1,","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":26231,"byte_end":26252,"line_start":444,"line_end":444,"column_start":1,"column_end":22}},{"value":"/     optional: None,","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":26253,"byte_end":26276,"line_start":445,"line_end":445,"column_start":1,"column_end":24}},{"value":"/ };","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":26277,"byte_end":26283,"line_start":446,"line_end":446,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(v, ron::de::from_str(s).unwrap());","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":26284,"byte_end":26333,"line_start":447,"line_end":447,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(s, ron::ser::to_string_pretty(&v, pretty_config).unwrap());","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":26334,"byte_end":26408,"line_start":448,"line_end":448,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":26409,"byte_end":26416,"line_start":449,"line_end":449,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":208},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":26517,"byte_end":26528,"line_start":454,"line_end":454,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::unwrap_or_skip::deserialize","value":"fn <'de, D, T> (deserializer: D) -> Result<Option<T>, D::Error>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize value wrapped in Some(T)\n","sig":null,"attributes":[{"value":"/ Deserialize value wrapped in Some(T)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":26465,"byte_end":26505,"line_start":453,"line_end":453,"column_start":5,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":212},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":26784,"byte_end":26793,"line_start":463,"line_end":463,"column_start":12,"column_end":21},"name":"serialize","qualname":"::rust::unwrap_or_skip::serialize","value":"fn <T, S> (option: &Option<T>, serializer: S) -> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Serialize value if Some(T), unit struct if None\n","sig":null,"attributes":[{"value":"/ Serialize value if Some(T), unit struct if None","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":26721,"byte_end":26772,"line_start":462,"line_end":462,"column_start":5,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":28545,"byte_end":28574,"line_start":519,"line_end":519,"column_start":9,"column_end":38},"name":"sets_duplicate_value_is_error","qualname":"::rust::sets_duplicate_value_is_error","value":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218}],"decl_id":null,"docs":" Ensure no duplicate values exist in a set.","sig":null,"attributes":[{"value":"/ Ensure no duplicate values exist in a set.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":27074,"byte_end":27120,"line_start":476,"line_end":476,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":27121,"byte_end":27124,"line_start":477,"line_end":477,"column_start":1,"column_end":4}},{"value":"/ By default serde has a last-value-wins implementation, if duplicate values for a set exist.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":27125,"byte_end":27220,"line_start":478,"line_end":478,"column_start":1,"column_end":96}},{"value":"/ Sometimes it is desirable to know when such an event happens, as the first value is overwritten","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":27221,"byte_end":27320,"line_start":479,"line_end":479,"column_start":1,"column_end":100}},{"value":"/ and it can indicate an error in the serialized data.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":27321,"byte_end":27377,"line_start":480,"line_end":480,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":27378,"byte_end":27381,"line_start":481,"line_end":481,"column_start":1,"column_end":4}},{"value":"/ This helper returns an error if two identical values exist in a set.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":27382,"byte_end":27454,"line_start":482,"line_end":482,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":27455,"byte_end":27458,"line_start":483,"line_end":483,"column_start":1,"column_end":4}},{"value":"/ The implementation supports both the [`HashSet`] and the [`BTreeSet`] from the standard library.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":27459,"byte_end":27559,"line_start":484,"line_end":484,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":27560,"byte_end":27563,"line_start":485,"line_end":485,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: std::collections::HashSet","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":27564,"byte_end":27606,"line_start":486,"line_end":486,"column_start":1,"column_end":43}},{"value":"/ [`BTreeSet`]: std::collections::HashSet","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":27607,"byte_end":27650,"line_start":487,"line_end":487,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":27651,"byte_end":27654,"line_start":488,"line_end":488,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":27655,"byte_end":27668,"line_start":489,"line_end":489,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":27669,"byte_end":27672,"line_start":490,"line_end":490,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":27673,"byte_end":27684,"line_start":491,"line_end":491,"column_start":1,"column_end":12}},{"value":"/ # extern crate serde;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":27685,"byte_end":27710,"line_start":492,"line_end":492,"column_start":1,"column_end":26}},{"value":"/ # extern crate serde_derive;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":27711,"byte_end":27743,"line_start":493,"line_end":493,"column_start":1,"column_end":33}},{"value":"/ # extern crate serde_json;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":27744,"byte_end":27774,"line_start":494,"line_end":494,"column_start":1,"column_end":31}},{"value":"/ # extern crate serde_with;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":27775,"byte_end":27805,"line_start":495,"line_end":495,"column_start":1,"column_end":31}},{"value":"/ #","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":27806,"byte_end":27811,"line_start":496,"line_end":496,"column_start":1,"column_end":6}},{"value":"/ # use std::{collections::HashSet, iter::FromIterator};","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":27812,"byte_end":27870,"line_start":497,"line_end":497,"column_start":1,"column_end":59}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":27871,"byte_end":27920,"line_start":498,"line_end":498,"column_start":1,"column_end":50}},{"value":"/ #","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":27921,"byte_end":27926,"line_start":499,"line_end":499,"column_start":1,"column_end":6}},{"value":"/ # #[derive(Debug, Eq, PartialEq)]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":27927,"byte_end":27964,"line_start":500,"line_end":500,"column_start":1,"column_end":38}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":27965,"byte_end":27991,"line_start":501,"line_end":501,"column_start":1,"column_end":27}},{"value":"/ struct Doc {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":27992,"byte_end":28008,"line_start":502,"line_end":502,"column_start":1,"column_end":17}},{"value":"/     #[serde(with = \"::serde_with::rust::sets_duplicate_value_is_error\")]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":28009,"byte_end":28085,"line_start":503,"line_end":503,"column_start":1,"column_end":77}},{"value":"/     set: HashSet<usize>,","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":28086,"byte_end":28114,"line_start":504,"line_end":504,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":28115,"byte_end":28120,"line_start":505,"line_end":505,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":28121,"byte_end":28124,"line_start":506,"line_end":506,"column_start":1,"column_end":4}},{"value":"/ // Sets are serialized normally,","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":28125,"byte_end":28161,"line_start":507,"line_end":507,"column_start":1,"column_end":37}},{"value":"/ let s = r#\"{\"set\": [1, 2, 3, 4]}\"#;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":28162,"byte_end":28201,"line_start":508,"line_end":508,"column_start":1,"column_end":40}},{"value":"/ let v = Doc {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":28202,"byte_end":28219,"line_start":509,"line_end":509,"column_start":1,"column_end":18}},{"value":"/     set: HashSet::from_iter(vec![1, 2, 3, 4]),","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":28220,"byte_end":28270,"line_start":510,"line_end":510,"column_start":1,"column_end":51}},{"value":"/ };","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":28271,"byte_end":28277,"line_start":511,"line_end":511,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(v, serde_json::from_str(s).unwrap());","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":28278,"byte_end":28330,"line_start":512,"line_end":512,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":28331,"byte_end":28334,"line_start":513,"line_end":513,"column_start":1,"column_end":4}},{"value":"/ // but create an error if duplicate values, like the `1`, exist.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":28335,"byte_end":28403,"line_start":514,"line_end":514,"column_start":1,"column_end":69}},{"value":"/ let s = r#\"{\"set\": [1, 2, 3, 4, 1]}\"#;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":28404,"byte_end":28446,"line_start":515,"line_end":515,"column_start":1,"column_end":43}},{"value":"/ let res: Result<Doc, _> = serde_json::from_str(s);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":28447,"byte_end":28501,"line_start":516,"line_end":516,"column_start":1,"column_end":55}},{"value":"/ assert!(res.is_err());","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":28502,"byte_end":28528,"line_start":517,"line_end":517,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":28529,"byte_end":28536,"line_start":518,"line_end":518,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":218},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":28730,"byte_end":28741,"line_start":524,"line_end":524,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::sets_duplicate_value_is_error::deserialize","value":"fn <'de, D, T, V> (deserializer: D) -> Result<T, D::Error>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a set and return an error on duplicate values\n","sig":null,"attributes":[{"value":"/ Deserialize a set and return an error on duplicate values","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":28657,"byte_end":28718,"line_start":523,"line_end":523,"column_start":5,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":236},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":31609,"byte_end":31636,"line_start":617,"line_end":617,"column_start":9,"column_end":36},"name":"maps_duplicate_key_is_error","qualname":"::rust::maps_duplicate_key_is_error","value":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239}],"decl_id":null,"docs":" Ensure no duplicate keys exist in a map.","sig":null,"attributes":[{"value":"/ Ensure no duplicate keys exist in a map.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":30088,"byte_end":30132,"line_start":571,"line_end":571,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":30133,"byte_end":30136,"line_start":572,"line_end":572,"column_start":1,"column_end":4}},{"value":"/ By default serde has a last-value-wins implementation, if duplicate keys for a map exist.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":30137,"byte_end":30230,"line_start":573,"line_end":573,"column_start":1,"column_end":94}},{"value":"/ Sometimes it is desirable to know when such an event happens, as the first value is overwritten","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":30231,"byte_end":30330,"line_start":574,"line_end":574,"column_start":1,"column_end":100}},{"value":"/ and it can indicate an error in the serialized data.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":30331,"byte_end":30387,"line_start":575,"line_end":575,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":30388,"byte_end":30391,"line_start":576,"line_end":576,"column_start":1,"column_end":4}},{"value":"/ This helper returns an error if two identical keys exist in a map.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":30392,"byte_end":30462,"line_start":577,"line_end":577,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":30463,"byte_end":30466,"line_start":578,"line_end":578,"column_start":1,"column_end":4}},{"value":"/ The implementation supports both the [`HashMap`] and the [`BTreeMap`] from the standard library.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":30467,"byte_end":30567,"line_start":579,"line_end":579,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":30568,"byte_end":30571,"line_start":580,"line_end":580,"column_start":1,"column_end":4}},{"value":"/ [`HashMap`]: std::collections::HashMap","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":30572,"byte_end":30614,"line_start":581,"line_end":581,"column_start":1,"column_end":43}},{"value":"/ [`BTreeMap`]: std::collections::HashMap","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":30615,"byte_end":30658,"line_start":582,"line_end":582,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":30659,"byte_end":30662,"line_start":583,"line_end":583,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":30663,"byte_end":30676,"line_start":584,"line_end":584,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":30677,"byte_end":30680,"line_start":585,"line_end":585,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":30681,"byte_end":30692,"line_start":586,"line_end":586,"column_start":1,"column_end":12}},{"value":"/ # extern crate serde;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":30693,"byte_end":30718,"line_start":587,"line_end":587,"column_start":1,"column_end":26}},{"value":"/ # extern crate serde_derive;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":30719,"byte_end":30751,"line_start":588,"line_end":588,"column_start":1,"column_end":33}},{"value":"/ # extern crate serde_json;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":30752,"byte_end":30782,"line_start":589,"line_end":589,"column_start":1,"column_end":31}},{"value":"/ # extern crate serde_with;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":30783,"byte_end":30813,"line_start":590,"line_end":590,"column_start":1,"column_end":31}},{"value":"/ #","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":30814,"byte_end":30819,"line_start":591,"line_end":591,"column_start":1,"column_end":6}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":30820,"byte_end":30869,"line_start":592,"line_end":592,"column_start":1,"column_end":50}},{"value":"/ # use std::collections::HashMap;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":30870,"byte_end":30906,"line_start":593,"line_end":593,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":30907,"byte_end":30912,"line_start":594,"line_end":594,"column_start":1,"column_end":6}},{"value":"/ # #[derive(Debug, Eq, PartialEq)]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":30913,"byte_end":30950,"line_start":595,"line_end":595,"column_start":1,"column_end":38}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":30951,"byte_end":30977,"line_start":596,"line_end":596,"column_start":1,"column_end":27}},{"value":"/ struct Doc {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":30978,"byte_end":30994,"line_start":597,"line_end":597,"column_start":1,"column_end":17}},{"value":"/     #[serde(with = \"::serde_with::rust::maps_duplicate_key_is_error\")]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":30995,"byte_end":31069,"line_start":598,"line_end":598,"column_start":1,"column_end":75}},{"value":"/     map: HashMap<usize, usize>,","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":31070,"byte_end":31105,"line_start":599,"line_end":599,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":31106,"byte_end":31111,"line_start":600,"line_end":600,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":31112,"byte_end":31115,"line_start":601,"line_end":601,"column_start":1,"column_end":4}},{"value":"/ // Maps are serialized normally,","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":31116,"byte_end":31152,"line_start":602,"line_end":602,"column_start":1,"column_end":37}},{"value":"/ let s = r#\"{\"map\": {\"1\": 1, \"2\": 2, \"3\": 3}}\"#;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":31153,"byte_end":31204,"line_start":603,"line_end":603,"column_start":1,"column_end":52}},{"value":"/ let mut v = Doc {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":31205,"byte_end":31226,"line_start":604,"line_end":604,"column_start":1,"column_end":22}},{"value":"/     map: HashMap::new(),","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":31227,"byte_end":31255,"line_start":605,"line_end":605,"column_start":1,"column_end":29}},{"value":"/ };","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":31256,"byte_end":31262,"line_start":606,"line_end":606,"column_start":1,"column_end":7}},{"value":"/ v.map.insert(1, 1);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":31263,"byte_end":31286,"line_start":607,"line_end":607,"column_start":1,"column_end":24}},{"value":"/ v.map.insert(2, 2);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":31287,"byte_end":31310,"line_start":608,"line_end":608,"column_start":1,"column_end":24}},{"value":"/ v.map.insert(3, 3);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":31311,"byte_end":31334,"line_start":609,"line_end":609,"column_start":1,"column_end":24}},{"value":"/ assert_eq!(v, serde_json::from_str(s).unwrap());","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":31335,"byte_end":31387,"line_start":610,"line_end":610,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":31388,"byte_end":31391,"line_start":611,"line_end":611,"column_start":1,"column_end":4}},{"value":"/ // but create an error if duplicate keys, like the `1`, exist.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":31392,"byte_end":31458,"line_start":612,"line_end":612,"column_start":1,"column_end":67}},{"value":"/ let s = r#\"{\"map\": {\"1\": 1, \"2\": 2, \"1\": 3}}\"#;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":31459,"byte_end":31510,"line_start":613,"line_end":613,"column_start":1,"column_end":52}},{"value":"/ let res: Result<Doc, _> = serde_json::from_str(s);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":31511,"byte_end":31565,"line_start":614,"line_end":614,"column_start":1,"column_end":55}},{"value":"/ assert!(res.is_err());","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":31566,"byte_end":31592,"line_start":615,"line_end":615,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":31593,"byte_end":31600,"line_start":616,"line_end":616,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":239},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":31790,"byte_end":31801,"line_start":622,"line_end":622,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::maps_duplicate_key_is_error::deserialize","value":"fn <'de, D, T, K, V> (deserializer: D) -> Result<T, D::Error>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a map and return an error on duplicate keys\n","sig":null,"attributes":[{"value":"/ Deserialize a map and return an error on duplicate keys","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":31719,"byte_end":31778,"line_start":621,"line_end":621,"column_start":5,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":261},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":33784,"byte_end":33805,"line_start":682,"line_end":682,"column_start":9,"column_end":30},"name":"sets_first_value_wins","qualname":"::rust::sets_first_value_wins","value":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","parent":null,"children":[{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264}],"decl_id":null,"docs":" Ensure that the first value is taken, if duplicate values exist","sig":null,"attributes":[{"value":"/ Ensure that the first value is taken, if duplicate values exist","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":33314,"byte_end":33381,"line_start":673,"line_end":673,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":33382,"byte_end":33385,"line_start":674,"line_end":674,"column_start":1,"column_end":4}},{"value":"/ By default serde has a last-value-wins implementation, if duplicate keys for a set exist.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":33386,"byte_end":33479,"line_start":675,"line_end":675,"column_start":1,"column_end":94}},{"value":"/ Sometimes the opposite strategy is desired. This helper implements a first-value-wins strategy.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":33480,"byte_end":33579,"line_start":676,"line_end":676,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":33580,"byte_end":33583,"line_start":677,"line_end":677,"column_start":1,"column_end":4}},{"value":"/ The implementation supports both the [`HashSet`] and the [`BTreeSet`] from the standard library.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":33584,"byte_end":33684,"line_start":678,"line_end":678,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":33685,"byte_end":33688,"line_start":679,"line_end":679,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: std::collections::HashSet","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":33689,"byte_end":33731,"line_start":680,"line_end":680,"column_start":1,"column_end":43}},{"value":"/ [`BTreeSet`]: std::collections::HashSet","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":33732,"byte_end":33775,"line_start":681,"line_end":681,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":264},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":33963,"byte_end":33974,"line_start":687,"line_end":687,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::sets_first_value_wins::deserialize","value":"fn <'de, D, T, V> (deserializer: D) -> Result<T, D::Error>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a set and return an error on duplicate values\n","sig":null,"attributes":[{"value":"/ Deserialize a set and return an error on duplicate values","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":33890,"byte_end":33951,"line_start":686,"line_end":686,"column_start":5,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":282},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":36679,"byte_end":36698,"line_start":779,"line_end":779,"column_start":9,"column_end":28},"name":"maps_first_key_wins","qualname":"::rust::maps_first_key_wins","value":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285}],"decl_id":null,"docs":" Ensure that the first key is taken, if duplicate keys exist","sig":null,"attributes":[{"value":"/ Ensure that the first key is taken, if duplicate keys exist","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":35206,"byte_end":35269,"line_start":732,"line_end":732,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":35270,"byte_end":35273,"line_start":733,"line_end":733,"column_start":1,"column_end":4}},{"value":"/ By default serde has a last-key-wins implementation, if duplicate keys for a map exist.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":35274,"byte_end":35365,"line_start":734,"line_end":734,"column_start":1,"column_end":92}},{"value":"/ Sometimes the opposite strategy is desired. This helper implements a first-key-wins strategy.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":35366,"byte_end":35463,"line_start":735,"line_end":735,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":35464,"byte_end":35467,"line_start":736,"line_end":736,"column_start":1,"column_end":4}},{"value":"/ The implementation supports both the [`HashMap`] and the [`BTreeMap`] from the standard library.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":35468,"byte_end":35568,"line_start":737,"line_end":737,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":35569,"byte_end":35572,"line_start":738,"line_end":738,"column_start":1,"column_end":4}},{"value":"/ [`HashMap`]: std::collections::HashMap","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":35573,"byte_end":35615,"line_start":739,"line_end":739,"column_start":1,"column_end":43}},{"value":"/ [`BTreeMap`]: std::collections::HashMap","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":35616,"byte_end":35659,"line_start":740,"line_end":740,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":35660,"byte_end":35663,"line_start":741,"line_end":741,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":35664,"byte_end":35677,"line_start":742,"line_end":742,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":35678,"byte_end":35681,"line_start":743,"line_end":743,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":35682,"byte_end":35693,"line_start":744,"line_end":744,"column_start":1,"column_end":12}},{"value":"/ # extern crate serde;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":35694,"byte_end":35719,"line_start":745,"line_end":745,"column_start":1,"column_end":26}},{"value":"/ # extern crate serde_derive;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":35720,"byte_end":35752,"line_start":746,"line_end":746,"column_start":1,"column_end":33}},{"value":"/ # extern crate serde_json;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":35753,"byte_end":35783,"line_start":747,"line_end":747,"column_start":1,"column_end":31}},{"value":"/ # extern crate serde_with;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":35784,"byte_end":35814,"line_start":748,"line_end":748,"column_start":1,"column_end":31}},{"value":"/ #","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":35815,"byte_end":35820,"line_start":749,"line_end":749,"column_start":1,"column_end":6}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":35821,"byte_end":35870,"line_start":750,"line_end":750,"column_start":1,"column_end":50}},{"value":"/ # use std::collections::HashMap;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":35871,"byte_end":35907,"line_start":751,"line_end":751,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":35908,"byte_end":35913,"line_start":752,"line_end":752,"column_start":1,"column_end":6}},{"value":"/ # #[derive(Debug, Eq, PartialEq)]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":35914,"byte_end":35951,"line_start":753,"line_end":753,"column_start":1,"column_end":38}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":35952,"byte_end":35978,"line_start":754,"line_end":754,"column_start":1,"column_end":27}},{"value":"/ struct Doc {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":35979,"byte_end":35995,"line_start":755,"line_end":755,"column_start":1,"column_end":17}},{"value":"/     #[serde(with = \"::serde_with::rust::maps_first_key_wins\")]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":35996,"byte_end":36062,"line_start":756,"line_end":756,"column_start":1,"column_end":67}},{"value":"/     map: HashMap<usize, usize>,","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":36063,"byte_end":36098,"line_start":757,"line_end":757,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":36099,"byte_end":36104,"line_start":758,"line_end":758,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":36105,"byte_end":36108,"line_start":759,"line_end":759,"column_start":1,"column_end":4}},{"value":"/ // Maps are serialized normally,","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":36109,"byte_end":36145,"line_start":760,"line_end":760,"column_start":1,"column_end":37}},{"value":"/ let s = r#\"{\"map\": {\"1\": 1, \"2\": 2, \"3\": 3}}\"#;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":36146,"byte_end":36197,"line_start":761,"line_end":761,"column_start":1,"column_end":52}},{"value":"/ let mut v = Doc {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":36198,"byte_end":36219,"line_start":762,"line_end":762,"column_start":1,"column_end":22}},{"value":"/     map: HashMap::new(),","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":36220,"byte_end":36248,"line_start":763,"line_end":763,"column_start":1,"column_end":29}},{"value":"/ };","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":36249,"byte_end":36255,"line_start":764,"line_end":764,"column_start":1,"column_end":7}},{"value":"/ v.map.insert(1, 1);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":36256,"byte_end":36279,"line_start":765,"line_end":765,"column_start":1,"column_end":24}},{"value":"/ v.map.insert(2, 2);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":36280,"byte_end":36303,"line_start":766,"line_end":766,"column_start":1,"column_end":24}},{"value":"/ v.map.insert(3, 3);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":36304,"byte_end":36327,"line_start":767,"line_end":767,"column_start":1,"column_end":24}},{"value":"/ assert_eq!(v, serde_json::from_str(s).unwrap());","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":36328,"byte_end":36380,"line_start":768,"line_end":768,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":36381,"byte_end":36384,"line_start":769,"line_end":769,"column_start":1,"column_end":4}},{"value":"/ // but create an error if duplicate keys, like the `1`, exist.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":36385,"byte_end":36451,"line_start":770,"line_end":770,"column_start":1,"column_end":67}},{"value":"/ let s = r#\"{\"map\": {\"1\": 1, \"2\": 2, \"1\": 3}}\"#;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":36452,"byte_end":36503,"line_start":771,"line_end":771,"column_start":1,"column_end":52}},{"value":"/ let mut v = Doc {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":36504,"byte_end":36525,"line_start":772,"line_end":772,"column_start":1,"column_end":22}},{"value":"/     map: HashMap::new(),","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":36526,"byte_end":36554,"line_start":773,"line_end":773,"column_start":1,"column_end":29}},{"value":"/ };","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":36555,"byte_end":36561,"line_start":774,"line_end":774,"column_start":1,"column_end":7}},{"value":"/ v.map.insert(1, 1);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":36562,"byte_end":36585,"line_start":775,"line_end":775,"column_start":1,"column_end":24}},{"value":"/ v.map.insert(2, 2);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":36586,"byte_end":36609,"line_start":776,"line_end":776,"column_start":1,"column_end":24}},{"value":"/ assert_eq!(v, serde_json::from_str(s).unwrap());","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":36610,"byte_end":36662,"line_start":777,"line_end":777,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":36663,"byte_end":36670,"line_start":778,"line_end":778,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":285},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":36854,"byte_end":36865,"line_start":784,"line_end":784,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::maps_first_key_wins::deserialize","value":"fn <'de, D, T, K, V> (deserializer: D) -> Result<T, D::Error>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a map and return an error on duplicate keys\n","sig":null,"attributes":[{"value":"/ Deserialize a map and return an error on duplicate keys","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":36783,"byte_end":36842,"line_start":783,"line_end":783,"column_start":5,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":307},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":39449,"byte_end":39469,"line_start":874,"line_end":874,"column_start":9,"column_end":29},"name":"string_empty_as_none","qualname":"::rust::string_empty_as_none","value":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","parent":null,"children":[{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":328}],"decl_id":null,"docs":" De/Serialize a [`Option`]`<String>` type while transforming the empty string to [`None`]","sig":null,"attributes":[{"value":"/ De/Serialize a [`Option`]`<String>` type while transforming the empty string to [`None`]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":38265,"byte_end":38357,"line_start":833,"line_end":833,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":38358,"byte_end":38361,"line_start":834,"line_end":834,"column_start":1,"column_end":4}},{"value":"/ Convert an [`Option`]`<T>` from/to string using [`FromStr`] and [`AsRef`]`<str>` implementations.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":38362,"byte_end":38463,"line_start":835,"line_end":835,"column_start":1,"column_end":102}},{"value":"/ An empty string is deserialized as [`None`] and a [`None`] vice versa.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":38464,"byte_end":38538,"line_start":836,"line_end":836,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":38539,"byte_end":38542,"line_start":837,"line_end":837,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":38543,"byte_end":38557,"line_start":838,"line_end":838,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":38558,"byte_end":38561,"line_start":839,"line_end":839,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":38562,"byte_end":38569,"line_start":840,"line_end":840,"column_start":1,"column_end":8}},{"value":"/ # extern crate serde;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":38570,"byte_end":38595,"line_start":841,"line_end":841,"column_start":1,"column_end":26}},{"value":"/ # extern crate serde_derive;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":38596,"byte_end":38628,"line_start":842,"line_end":842,"column_start":1,"column_end":33}},{"value":"/ # extern crate serde_json;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":38629,"byte_end":38659,"line_start":843,"line_end":843,"column_start":1,"column_end":31}},{"value":"/ # extern crate serde_with;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":38660,"byte_end":38690,"line_start":844,"line_end":844,"column_start":1,"column_end":31}},{"value":"/ #","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":38691,"byte_end":38696,"line_start":845,"line_end":845,"column_start":1,"column_end":6}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":38697,"byte_end":38746,"line_start":846,"line_end":846,"column_start":1,"column_end":50}},{"value":"/ #","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":38747,"byte_end":38752,"line_start":847,"line_end":847,"column_start":1,"column_end":6}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":38753,"byte_end":38790,"line_start":848,"line_end":848,"column_start":1,"column_end":38}},{"value":"/ struct A {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":38791,"byte_end":38805,"line_start":849,"line_end":849,"column_start":1,"column_end":15}},{"value":"/     #[serde(with = \"serde_with::rust::string_empty_as_none\")]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":38806,"byte_end":38871,"line_start":850,"line_end":850,"column_start":1,"column_end":66}},{"value":"/     tags: Option<String>,","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":38872,"byte_end":38901,"line_start":851,"line_end":851,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":38902,"byte_end":38907,"line_start":852,"line_end":852,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":38908,"byte_end":38911,"line_start":853,"line_end":853,"column_start":1,"column_end":4}},{"value":"/ let v: A = serde_json::from_str(r##\"{","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":38912,"byte_end":38953,"line_start":854,"line_end":854,"column_start":1,"column_end":42}},{"value":"/     \"tags\": \"\"","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":38954,"byte_end":38972,"line_start":855,"line_end":855,"column_start":1,"column_end":19}},{"value":"/ }\"##).unwrap();","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":38973,"byte_end":38992,"line_start":856,"line_end":856,"column_start":1,"column_end":20}},{"value":"/ assert!(v.tags.is_none());","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":38993,"byte_end":39023,"line_start":857,"line_end":857,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":39024,"byte_end":39027,"line_start":858,"line_end":858,"column_start":1,"column_end":4}},{"value":"/ let v: A = serde_json::from_str(r##\"{","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":39028,"byte_end":39069,"line_start":859,"line_end":859,"column_start":1,"column_end":42}},{"value":"/     \"tags\": \"Hi\"","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":39070,"byte_end":39090,"line_start":860,"line_end":860,"column_start":1,"column_end":21}},{"value":"/ }\"##).unwrap();","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":39091,"byte_end":39110,"line_start":861,"line_end":861,"column_start":1,"column_end":20}},{"value":"/ assert_eq!(Some(\"Hi\".to_string()), v.tags);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":39111,"byte_end":39158,"line_start":862,"line_end":862,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":39159,"byte_end":39162,"line_start":863,"line_end":863,"column_start":1,"column_end":4}},{"value":"/ let x = A {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":39163,"byte_end":39178,"line_start":864,"line_end":864,"column_start":1,"column_end":16}},{"value":"/     tags: Some(\"This is text\".to_string()),","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":39179,"byte_end":39226,"line_start":865,"line_end":865,"column_start":1,"column_end":48}},{"value":"/ };","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":39227,"byte_end":39233,"line_start":866,"line_end":866,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(r#\"{\"tags\":\"This is text\"}\"#, serde_json::to_string(&x).unwrap());","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":39234,"byte_end":39315,"line_start":867,"line_end":867,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":39316,"byte_end":39319,"line_start":868,"line_end":868,"column_start":1,"column_end":4}},{"value":"/ let x = A {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":39320,"byte_end":39335,"line_start":869,"line_end":869,"column_start":1,"column_end":16}},{"value":"/     tags: None,","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":39336,"byte_end":39355,"line_start":870,"line_end":870,"column_start":1,"column_end":20}},{"value":"/ };","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":39356,"byte_end":39362,"line_start":871,"line_end":871,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(r#\"{\"tags\":\"\"}\"#, serde_json::to_string(&x).unwrap());","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":39363,"byte_end":39432,"line_start":872,"line_end":872,"column_start":1,"column_end":70}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":39433,"byte_end":39440,"line_start":873,"line_end":873,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":309},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":39567,"byte_end":39578,"line_start":878,"line_end":878,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::string_empty_as_none::deserialize","value":"fn <'de, D, S> (deserializer: D) -> Result<Option<S>, D::Error>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize an `Option<T>` from a string using `FromStr`\n","sig":null,"attributes":[{"value":"/ Deserialize an `Option<T>` from a string using `FromStr`","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":39495,"byte_end":39555,"line_start":877,"line_end":877,"column_start":5,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":328},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":41123,"byte_end":41132,"line_start":929,"line_end":929,"column_start":12,"column_end":21},"name":"serialize","qualname":"::rust::string_empty_as_none::serialize","value":"fn <T, S> (option: &Option<T>, serializer: S) -> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Serialize a string from `Option<T>` using `AsRef<str>` or using the empty string if `None`.\n","sig":null,"attributes":[{"value":"/ Serialize a string from `Option<T>` using `AsRef<str>` or using the empty string if `None`.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":41016,"byte_end":41111,"line_start":928,"line_end":928,"column_start":5,"column_end":100}}]},{"kind":"Mod","id":{"krate":0,"index":331},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":43391,"byte_end":43412,"line_start":1011,"line_end":1011,"column_start":9,"column_end":30},"name":"hashmap_as_tuple_list","qualname":"::rust::hashmap_as_tuple_list","value":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","parent":null,"children":[{"krate":0,"index":332},{"krate":0,"index":335},{"krate":0,"index":340},{"krate":0,"index":346},{"krate":0,"index":352}],"decl_id":null,"docs":" De/Serialize a [`HashMap`] into a list of tuples","sig":null,"attributes":[{"value":"/ De/Serialize a [`HashMap`] into a list of tuples","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":41423,"byte_end":41475,"line_start":942,"line_end":942,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":41476,"byte_end":41479,"line_start":943,"line_end":943,"column_start":1,"column_end":4}},{"value":"/ Some formats, like JSON, have limitations on the type of keys for maps.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":41480,"byte_end":41555,"line_start":944,"line_end":944,"column_start":1,"column_end":76}},{"value":"/ In case of JSON, keys are restricted to strings.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":41556,"byte_end":41608,"line_start":945,"line_end":945,"column_start":1,"column_end":53}},{"value":"/ Rust features more powerfull keys, for example tuple, which can not be serialized to JSON.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":41609,"byte_end":41703,"line_start":946,"line_end":946,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":41704,"byte_end":41707,"line_start":947,"line_end":947,"column_start":1,"column_end":4}},{"value":"/ This helper serializes the [`HashMap`] into a list of tuples, which does not have the same type restrictions.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":41708,"byte_end":41821,"line_start":948,"line_end":948,"column_start":1,"column_end":114}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":41822,"byte_end":41825,"line_start":949,"line_end":949,"column_start":1,"column_end":4}},{"value":"/ If you need to de/serialize a [`BTreeMap`] then use [`btreemap_as_tuple_list`].","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":41826,"byte_end":41909,"line_start":950,"line_end":950,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":41910,"byte_end":41913,"line_start":951,"line_end":951,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":41914,"byte_end":41928,"line_start":952,"line_end":952,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":41929,"byte_end":41932,"line_start":953,"line_end":953,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":41933,"byte_end":41940,"line_start":954,"line_end":954,"column_start":1,"column_end":8}},{"value":"/ # extern crate serde;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":41941,"byte_end":41966,"line_start":955,"line_end":955,"column_start":1,"column_end":26}},{"value":"/ # extern crate serde_derive;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":41967,"byte_end":41999,"line_start":956,"line_end":956,"column_start":1,"column_end":33}},{"value":"/ # extern crate serde_json;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":42000,"byte_end":42030,"line_start":957,"line_end":957,"column_start":1,"column_end":31}},{"value":"/ # extern crate serde_with;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":42031,"byte_end":42061,"line_start":958,"line_end":958,"column_start":1,"column_end":31}},{"value":"/ #","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":42062,"byte_end":42067,"line_start":959,"line_end":959,"column_start":1,"column_end":6}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":42068,"byte_end":42117,"line_start":960,"line_end":960,"column_start":1,"column_end":50}},{"value":"/ # use serde_json::json;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":42118,"byte_end":42145,"line_start":961,"line_end":961,"column_start":1,"column_end":28}},{"value":"/ # use std::collections::HashMap;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":42146,"byte_end":42182,"line_start":962,"line_end":962,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":42183,"byte_end":42188,"line_start":963,"line_end":963,"column_start":1,"column_end":6}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":42189,"byte_end":42226,"line_start":964,"line_end":964,"column_start":1,"column_end":38}},{"value":"/ struct A {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":42227,"byte_end":42241,"line_start":965,"line_end":965,"column_start":1,"column_end":15}},{"value":"/     #[serde(with = \"serde_with::rust::hashmap_as_tuple_list\")]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":42242,"byte_end":42308,"line_start":966,"line_end":966,"column_start":1,"column_end":67}},{"value":"/     s: HashMap<(String, u32), u32>,","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":42309,"byte_end":42348,"line_start":967,"line_end":967,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":42349,"byte_end":42354,"line_start":968,"line_end":968,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":42355,"byte_end":42358,"line_start":969,"line_end":969,"column_start":1,"column_end":4}},{"value":"/ let v: A = serde_json::from_value(json!({","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":42359,"byte_end":42404,"line_start":970,"line_end":970,"column_start":1,"column_end":46}},{"value":"/     \"s\": [","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":42405,"byte_end":42419,"line_start":971,"line_end":971,"column_start":1,"column_end":15}},{"value":"/         [[\"Hello\", 123], 0],","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":42420,"byte_end":42452,"line_start":972,"line_end":972,"column_start":1,"column_end":33}},{"value":"/         [[\"World\", 456], 1]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":42453,"byte_end":42484,"line_start":973,"line_end":973,"column_start":1,"column_end":32}},{"value":"/     ]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":42485,"byte_end":42494,"line_start":974,"line_end":974,"column_start":1,"column_end":10}},{"value":"/ })).unwrap();","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":42495,"byte_end":42512,"line_start":975,"line_end":975,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":42513,"byte_end":42516,"line_start":976,"line_end":976,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(2, v.s.len());","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":42517,"byte_end":42546,"line_start":977,"line_end":977,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(1, v.s[&(\"World\".to_string(), 456)]);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":42547,"byte_end":42599,"line_start":978,"line_end":978,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":42600,"byte_end":42607,"line_start":979,"line_end":979,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":42608,"byte_end":42611,"line_start":980,"line_end":980,"column_start":1,"column_end":4}},{"value":"/ The helper is generic over the hasher type of the [`HashMap`] and works with different variants, such as `FnvHashMap`.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":42612,"byte_end":42734,"line_start":981,"line_end":981,"column_start":1,"column_end":123}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":42735,"byte_end":42738,"line_start":982,"line_end":982,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":42739,"byte_end":42746,"line_start":983,"line_end":983,"column_start":1,"column_end":8}},{"value":"/ # extern crate fnv;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":42747,"byte_end":42770,"line_start":984,"line_end":984,"column_start":1,"column_end":24}},{"value":"/ # extern crate serde;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":42771,"byte_end":42796,"line_start":985,"line_end":985,"column_start":1,"column_end":26}},{"value":"/ # extern crate serde_derive;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":42797,"byte_end":42829,"line_start":986,"line_end":986,"column_start":1,"column_end":33}},{"value":"/ # extern crate serde_json;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":42830,"byte_end":42860,"line_start":987,"line_end":987,"column_start":1,"column_end":31}},{"value":"/ # extern crate serde_with;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":42861,"byte_end":42891,"line_start":988,"line_end":988,"column_start":1,"column_end":31}},{"value":"/ #","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":42892,"byte_end":42897,"line_start":989,"line_end":989,"column_start":1,"column_end":6}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":42898,"byte_end":42947,"line_start":990,"line_end":990,"column_start":1,"column_end":50}},{"value":"/ # use serde_json::json;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":42948,"byte_end":42975,"line_start":991,"line_end":991,"column_start":1,"column_end":28}},{"value":"/ #","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":42976,"byte_end":42981,"line_start":992,"line_end":992,"column_start":1,"column_end":6}},{"value":"/ use fnv::FnvHashMap;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":42982,"byte_end":43006,"line_start":993,"line_end":993,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":43007,"byte_end":43010,"line_start":994,"line_end":994,"column_start":1,"column_end":4}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":43011,"byte_end":43048,"line_start":995,"line_end":995,"column_start":1,"column_end":38}},{"value":"/ struct A {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":43049,"byte_end":43063,"line_start":996,"line_end":996,"column_start":1,"column_end":15}},{"value":"/     #[serde(with = \"serde_with::rust::hashmap_as_tuple_list\")]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":43064,"byte_end":43130,"line_start":997,"line_end":997,"column_start":1,"column_end":67}},{"value":"/     s: FnvHashMap<u32, bool>,","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":43131,"byte_end":43164,"line_start":998,"line_end":998,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":43165,"byte_end":43170,"line_start":999,"line_end":999,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":43171,"byte_end":43174,"line_start":1000,"line_end":1000,"column_start":1,"column_end":4}},{"value":"/ let v: A = serde_json::from_value(json!({","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":43175,"byte_end":43220,"line_start":1001,"line_end":1001,"column_start":1,"column_end":46}},{"value":"/     \"s\": [","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":43221,"byte_end":43235,"line_start":1002,"line_end":1002,"column_start":1,"column_end":15}},{"value":"/         [0, false],","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":43236,"byte_end":43259,"line_start":1003,"line_end":1003,"column_start":1,"column_end":24}},{"value":"/         [1, true]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":43260,"byte_end":43281,"line_start":1004,"line_end":1004,"column_start":1,"column_end":22}},{"value":"/     ]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":43282,"byte_end":43291,"line_start":1005,"line_end":1005,"column_start":1,"column_end":10}},{"value":"/ })).unwrap();","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":43292,"byte_end":43309,"line_start":1006,"line_end":1006,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":43310,"byte_end":43313,"line_start":1007,"line_end":1007,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(2, v.s.len());","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":43314,"byte_end":43343,"line_start":1008,"line_end":1008,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(true, v.s[&1]);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":43344,"byte_end":43374,"line_start":1009,"line_end":1009,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":43375,"byte_end":43382,"line_start":1010,"line_end":1010,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":335},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":43581,"byte_end":43590,"line_start":1015,"line_end":1015,"column_start":12,"column_end":21},"name":"serialize","qualname":"::rust::hashmap_as_tuple_list::serialize","value":"fn <K, V, S, BH> (map: &HashMap<K, V, BH>, serializer: S) -> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Serialize the [`HashMap`] as a list of tuples\n","sig":null,"attributes":[{"value":"/ Serialize the [`HashMap`] as a list of tuples","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":43520,"byte_end":43569,"line_start":1014,"line_end":1014,"column_start":5,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":340},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":44035,"byte_end":44046,"line_start":1030,"line_end":1030,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::hashmap_as_tuple_list::deserialize","value":"fn <'de, K, V, BH, D> (deserializer: D) -> Result<HashMap<K, V, BH>, D::Error>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a [`HashMap`] from a list of tuples\n","sig":null,"attributes":[{"value":"/ Deserialize a [`HashMap`] from a list of tuples","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":43972,"byte_end":44023,"line_start":1029,"line_end":1029,"column_start":5,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":361},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":46472,"byte_end":46494,"line_start":1107,"line_end":1107,"column_start":9,"column_end":31},"name":"btreemap_as_tuple_list","qualname":"::rust::btreemap_as_tuple_list","value":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","parent":null,"children":[{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":367},{"krate":0,"index":372},{"krate":0,"index":377}],"decl_id":null,"docs":" De/Serialize a [`BTreeMap`] into a list of tuples","sig":null,"attributes":[{"value":"/ De/Serialize a [`BTreeMap`] into a list of tuples","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":45276,"byte_end":45329,"line_start":1069,"line_end":1069,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":45330,"byte_end":45333,"line_start":1070,"line_end":1070,"column_start":1,"column_end":4}},{"value":"/ Some formats, like JSON, have limitations on the type of keys for maps.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":45334,"byte_end":45409,"line_start":1071,"line_end":1071,"column_start":1,"column_end":76}},{"value":"/ In case of JSON, keys are restricted to strings.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":45410,"byte_end":45462,"line_start":1072,"line_end":1072,"column_start":1,"column_end":53}},{"value":"/ Rust features more powerfull keys, for example tuple, which can not be serialized to JSON.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":45463,"byte_end":45557,"line_start":1073,"line_end":1073,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":45558,"byte_end":45561,"line_start":1074,"line_end":1074,"column_start":1,"column_end":4}},{"value":"/ This helper serializes the [`BTreeMap`] into a list of tuples, which does not have the same type restrictions.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":45562,"byte_end":45676,"line_start":1075,"line_end":1075,"column_start":1,"column_end":115}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":45677,"byte_end":45680,"line_start":1076,"line_end":1076,"column_start":1,"column_end":4}},{"value":"/ If you need to de/serialize a [`HashMap`] then use [`hashmap_as_tuple_list`].","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":45681,"byte_end":45762,"line_start":1077,"line_end":1077,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":45763,"byte_end":45766,"line_start":1078,"line_end":1078,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":45767,"byte_end":45781,"line_start":1079,"line_end":1079,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":45782,"byte_end":45785,"line_start":1080,"line_end":1080,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":45786,"byte_end":45793,"line_start":1081,"line_end":1081,"column_start":1,"column_end":8}},{"value":"/ # extern crate serde;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":45794,"byte_end":45819,"line_start":1082,"line_end":1082,"column_start":1,"column_end":26}},{"value":"/ # extern crate serde_derive;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":45820,"byte_end":45852,"line_start":1083,"line_end":1083,"column_start":1,"column_end":33}},{"value":"/ # extern crate serde_json;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":45853,"byte_end":45883,"line_start":1084,"line_end":1084,"column_start":1,"column_end":31}},{"value":"/ # extern crate serde_with;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":45884,"byte_end":45914,"line_start":1085,"line_end":1085,"column_start":1,"column_end":31}},{"value":"/ #","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":45915,"byte_end":45920,"line_start":1086,"line_end":1086,"column_start":1,"column_end":6}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":45921,"byte_end":45970,"line_start":1087,"line_end":1087,"column_start":1,"column_end":50}},{"value":"/ # use serde_json::json;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":45971,"byte_end":45998,"line_start":1088,"line_end":1088,"column_start":1,"column_end":28}},{"value":"/ # use std::collections::BTreeMap;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":45999,"byte_end":46036,"line_start":1089,"line_end":1089,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":46037,"byte_end":46042,"line_start":1090,"line_end":1090,"column_start":1,"column_end":6}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":46043,"byte_end":46080,"line_start":1091,"line_end":1091,"column_start":1,"column_end":38}},{"value":"/ struct A {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":46081,"byte_end":46095,"line_start":1092,"line_end":1092,"column_start":1,"column_end":15}},{"value":"/     #[serde(with = \"serde_with::rust::btreemap_as_tuple_list\")]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":46096,"byte_end":46163,"line_start":1093,"line_end":1093,"column_start":1,"column_end":68}},{"value":"/     s: BTreeMap<(String, u32), u32>,","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":46164,"byte_end":46204,"line_start":1094,"line_end":1094,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":46205,"byte_end":46210,"line_start":1095,"line_end":1095,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":46211,"byte_end":46214,"line_start":1096,"line_end":1096,"column_start":1,"column_end":4}},{"value":"/ let v: A = serde_json::from_value(json!({","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":46215,"byte_end":46260,"line_start":1097,"line_end":1097,"column_start":1,"column_end":46}},{"value":"/     \"s\": [","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":46261,"byte_end":46275,"line_start":1098,"line_end":1098,"column_start":1,"column_end":15}},{"value":"/         [[\"Hello\", 123], 0],","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":46276,"byte_end":46308,"line_start":1099,"line_end":1099,"column_start":1,"column_end":33}},{"value":"/         [[\"World\", 456], 1]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":46309,"byte_end":46340,"line_start":1100,"line_end":1100,"column_start":1,"column_end":32}},{"value":"/     ]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":46341,"byte_end":46350,"line_start":1101,"line_end":1101,"column_start":1,"column_end":10}},{"value":"/ })).unwrap();","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":46351,"byte_end":46368,"line_start":1102,"line_end":1102,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":46369,"byte_end":46372,"line_start":1103,"line_end":1103,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(2, v.s.len());","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":46373,"byte_end":46402,"line_start":1104,"line_end":1104,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(1, v.s[&(\"World\".to_string(), 456)]);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":46403,"byte_end":46455,"line_start":1105,"line_end":1105,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":46456,"byte_end":46463,"line_start":1106,"line_end":1106,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":363},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":46582,"byte_end":46591,"line_start":1111,"line_end":1111,"column_start":12,"column_end":21},"name":"serialize","qualname":"::rust::btreemap_as_tuple_list::serialize","value":"fn <K, V, S> (map: &BTreeMap<K, V>, serializer: S) -> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Serialize the [`BTreeMap`] as a list of tuples\n","sig":null,"attributes":[{"value":"/ Serialize the [`BTreeMap`] as a list of tuples","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":46520,"byte_end":46570,"line_start":1110,"line_end":1110,"column_start":5,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":367},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":47005,"byte_end":47016,"line_start":1125,"line_end":1125,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::btreemap_as_tuple_list::deserialize","value":"fn <'de, K, V, D> (deserializer: D) -> Result<BTreeMap<K, V>, D::Error>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a [`BTreeMap`] from a list of tuples\n","sig":null,"attributes":[{"value":"/ Deserialize a [`BTreeMap`] from a list of tuples","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":46941,"byte_end":46993,"line_start":1124,"line_end":1124,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":385},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":50956,"byte_end":50973,"line_start":1247,"line_end":1247,"column_start":9,"column_end":26},"name":"tuple_list_as_map","qualname":"::rust::tuple_list_as_map","value":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","parent":null,"children":[{"krate":0,"index":386},{"krate":0,"index":389},{"krate":0,"index":395},{"krate":0,"index":401},{"krate":0,"index":407},{"krate":0,"index":416},{"krate":0,"index":424}],"decl_id":null,"docs":" This serializes a list of tuples into a map and back","sig":null,"attributes":[{"value":"/ This serializes a list of tuples into a map and back","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":48067,"byte_end":48123,"line_start":1161,"line_end":1161,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":48124,"byte_end":48127,"line_start":1162,"line_end":1162,"column_start":1,"column_end":4}},{"value":"/ Normally, you want to use a [`HashMap`] or a [`BTreeMap`] when deserializing a map.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":48128,"byte_end":48215,"line_start":1163,"line_end":1163,"column_start":1,"column_end":88}},{"value":"/ However, sometimes this is not possible due to type contains, e.g., if the type implements neither [`Hash`] nor [`Ord`].","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":48216,"byte_end":48340,"line_start":1164,"line_end":1164,"column_start":1,"column_end":125}},{"value":"/ Another use case is deserializing a map with duplicate keys.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":48341,"byte_end":48405,"line_start":1165,"line_end":1165,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":48406,"byte_end":48409,"line_start":1166,"line_end":1166,"column_start":1,"column_end":4}},{"value":"/ The implementation is generic using the [`FromIterator`] and [`IntoIterator`] traits.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":48410,"byte_end":48499,"line_start":1167,"line_end":1167,"column_start":1,"column_end":90}},{"value":"/ Therefore, all of [`Vec`], [`VecDeque`](std::collections::VecDeque), and [`LinkedList`](std::collections::LinkedList) and anything which implements those are supported.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":48500,"byte_end":48672,"line_start":1168,"line_end":1168,"column_start":1,"column_end":173}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":48673,"byte_end":48676,"line_start":1169,"line_end":1169,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":48677,"byte_end":48691,"line_start":1170,"line_end":1170,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":48692,"byte_end":48695,"line_start":1171,"line_end":1171,"column_start":1,"column_end":4}},{"value":"/ `Wrapper` does not implement [`Hash`] nor [`Ord`], thus prohibiting the use [`HashMap`] or [`BTreeMap`].","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":48696,"byte_end":48804,"line_start":1172,"line_end":1172,"column_start":1,"column_end":109}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":48805,"byte_end":48808,"line_start":1173,"line_end":1173,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":48809,"byte_end":48816,"line_start":1174,"line_end":1174,"column_start":1,"column_end":8}},{"value":"/ # extern crate serde;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":48817,"byte_end":48842,"line_start":1175,"line_end":1175,"column_start":1,"column_end":26}},{"value":"/ # extern crate serde_derive;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":48843,"byte_end":48875,"line_start":1176,"line_end":1176,"column_start":1,"column_end":33}},{"value":"/ # extern crate serde_json;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":48876,"byte_end":48906,"line_start":1177,"line_end":1177,"column_start":1,"column_end":31}},{"value":"/ # extern crate serde_with;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":48907,"byte_end":48937,"line_start":1178,"line_end":1178,"column_start":1,"column_end":31}},{"value":"/ #","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":48938,"byte_end":48943,"line_start":1179,"line_end":1179,"column_start":1,"column_end":6}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":48944,"byte_end":48993,"line_start":1180,"line_end":1180,"column_start":1,"column_end":50}},{"value":"/ # use serde_json::json;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":48994,"byte_end":49021,"line_start":1181,"line_end":1181,"column_start":1,"column_end":28}},{"value":"/ #","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":49022,"byte_end":49027,"line_start":1182,"line_end":1182,"column_start":1,"column_end":6}},{"value":"/ #[derive(Debug, Deserialize, Serialize, Default)]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":49028,"byte_end":49081,"line_start":1183,"line_end":1183,"column_start":1,"column_end":54}},{"value":"/ struct S {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":49082,"byte_end":49096,"line_start":1184,"line_end":1184,"column_start":1,"column_end":15}},{"value":"/     #[serde(with = \"serde_with::rust::tuple_list_as_map\")]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":49097,"byte_end":49159,"line_start":1185,"line_end":1185,"column_start":1,"column_end":63}},{"value":"/     s: Vec<(Wrapper<i32>, Wrapper<String>)>,","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":49160,"byte_end":49208,"line_start":1186,"line_end":1186,"column_start":1,"column_end":49}},{"value":"/ }","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":49209,"byte_end":49214,"line_start":1187,"line_end":1187,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":49215,"byte_end":49218,"line_start":1188,"line_end":1188,"column_start":1,"column_end":4}},{"value":"/ #[derive(Clone, Debug, Serialize, Deserialize)]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":49219,"byte_end":49270,"line_start":1189,"line_end":1189,"column_start":1,"column_end":52}},{"value":"/ #[serde(transparent)]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":49271,"byte_end":49296,"line_start":1190,"line_end":1190,"column_start":1,"column_end":26}},{"value":"/ struct Wrapper<T>(T);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":49297,"byte_end":49322,"line_start":1191,"line_end":1191,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":49323,"byte_end":49326,"line_start":1192,"line_end":1192,"column_start":1,"column_end":4}},{"value":"/ let from = r#\"{","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":49327,"byte_end":49346,"line_start":1193,"line_end":1193,"column_start":1,"column_end":20}},{"value":"/   \"s\": {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":49347,"byte_end":49359,"line_start":1194,"line_end":1194,"column_start":1,"column_end":13}},{"value":"/     \"1\": \"Hi\",","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":49360,"byte_end":49378,"line_start":1195,"line_end":1195,"column_start":1,"column_end":19}},{"value":"/     \"2\": \"Cake\",","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":49379,"byte_end":49399,"line_start":1196,"line_end":1196,"column_start":1,"column_end":21}},{"value":"/     \"99\": \"Lie\"","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":49400,"byte_end":49419,"line_start":1197,"line_end":1197,"column_start":1,"column_end":20}},{"value":"/   }","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":49420,"byte_end":49427,"line_start":1198,"line_end":1198,"column_start":1,"column_end":8}},{"value":"/ }\"#;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":49428,"byte_end":49436,"line_start":1199,"line_end":1199,"column_start":1,"column_end":9}},{"value":"/ let mut expected = S::default();","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":49437,"byte_end":49473,"line_start":1200,"line_end":1200,"column_start":1,"column_end":37}},{"value":"/ expected.s.push((Wrapper(1), Wrapper(\"Hi\".into())));","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":49474,"byte_end":49530,"line_start":1201,"line_end":1201,"column_start":1,"column_end":57}},{"value":"/ expected.s.push((Wrapper(2), Wrapper(\"Cake\".into())));","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":49531,"byte_end":49589,"line_start":1202,"line_end":1202,"column_start":1,"column_end":59}},{"value":"/ expected.s.push((Wrapper(99), Wrapper(\"Lie\".into())));","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":49590,"byte_end":49648,"line_start":1203,"line_end":1203,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":49649,"byte_end":49652,"line_start":1204,"line_end":1204,"column_start":1,"column_end":4}},{"value":"/ let res: S = serde_json::from_str(from).unwrap();","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":49653,"byte_end":49706,"line_start":1205,"line_end":1205,"column_start":1,"column_end":54}},{"value":"/ for ((exp_k, exp_v), (res_k, res_v)) in expected.s.iter().zip(&res.s) {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":49707,"byte_end":49782,"line_start":1206,"line_end":1206,"column_start":1,"column_end":76}},{"value":"/     assert_eq!(exp_k.0, res_k.0);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":49783,"byte_end":49820,"line_start":1207,"line_end":1207,"column_start":1,"column_end":38}},{"value":"/     assert_eq!(exp_v.0, res_v.0);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":49821,"byte_end":49858,"line_start":1208,"line_end":1208,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":49859,"byte_end":49864,"line_start":1209,"line_end":1209,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(from, serde_json::to_string_pretty(&expected).unwrap());","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":49865,"byte_end":49936,"line_start":1210,"line_end":1210,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":49937,"byte_end":49944,"line_start":1211,"line_end":1211,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":49945,"byte_end":49948,"line_start":1212,"line_end":1212,"column_start":1,"column_end":4}},{"value":"/ In this example, the serialized format contains duplicate keys, which is not supported with [`HashMap`] or [`BTreeMap`].","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":49949,"byte_end":50073,"line_start":1213,"line_end":1213,"column_start":1,"column_end":125}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":50074,"byte_end":50077,"line_start":1214,"line_end":1214,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":50078,"byte_end":50085,"line_start":1215,"line_end":1215,"column_start":1,"column_end":8}},{"value":"/ # extern crate serde;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":50086,"byte_end":50111,"line_start":1216,"line_end":1216,"column_start":1,"column_end":26}},{"value":"/ # extern crate serde_derive;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":50112,"byte_end":50144,"line_start":1217,"line_end":1217,"column_start":1,"column_end":33}},{"value":"/ # extern crate serde_json;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":50145,"byte_end":50175,"line_start":1218,"line_end":1218,"column_start":1,"column_end":31}},{"value":"/ # extern crate serde_with;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":50176,"byte_end":50206,"line_start":1219,"line_end":1219,"column_start":1,"column_end":31}},{"value":"/ #","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":50207,"byte_end":50212,"line_start":1220,"line_end":1220,"column_start":1,"column_end":6}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":50213,"byte_end":50262,"line_start":1221,"line_end":1221,"column_start":1,"column_end":50}},{"value":"/ # use serde_json::json;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":50263,"byte_end":50290,"line_start":1222,"line_end":1222,"column_start":1,"column_end":28}},{"value":"/ #","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":50291,"byte_end":50296,"line_start":1223,"line_end":1223,"column_start":1,"column_end":6}},{"value":"/ #[derive(Debug, Deserialize, Serialize, PartialEq, Default)]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":50297,"byte_end":50361,"line_start":1224,"line_end":1224,"column_start":1,"column_end":65}},{"value":"/ struct S {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":50362,"byte_end":50376,"line_start":1225,"line_end":1225,"column_start":1,"column_end":15}},{"value":"/     #[serde(with = \"serde_with::rust::tuple_list_as_map\")]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":50377,"byte_end":50439,"line_start":1226,"line_end":1226,"column_start":1,"column_end":63}},{"value":"/     s: Vec<(i32, String)>,","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":50440,"byte_end":50470,"line_start":1227,"line_end":1227,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":50471,"byte_end":50476,"line_start":1228,"line_end":1228,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":50477,"byte_end":50480,"line_start":1229,"line_end":1229,"column_start":1,"column_end":4}},{"value":"/ let from = r#\"{","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":50481,"byte_end":50500,"line_start":1230,"line_end":1230,"column_start":1,"column_end":20}},{"value":"/   \"s\": {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":50501,"byte_end":50513,"line_start":1231,"line_end":1231,"column_start":1,"column_end":13}},{"value":"/     \"1\": \"Hi\",","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":50514,"byte_end":50532,"line_start":1232,"line_end":1232,"column_start":1,"column_end":19}},{"value":"/     \"1\": \"Cake\",","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":50533,"byte_end":50553,"line_start":1233,"line_end":1233,"column_start":1,"column_end":21}},{"value":"/     \"1\": \"Lie\"","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":50554,"byte_end":50572,"line_start":1234,"line_end":1234,"column_start":1,"column_end":19}},{"value":"/   }","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":50573,"byte_end":50580,"line_start":1235,"line_end":1235,"column_start":1,"column_end":8}},{"value":"/ }\"#;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":50581,"byte_end":50589,"line_start":1236,"line_end":1236,"column_start":1,"column_end":9}},{"value":"/ let mut expected = S::default();","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":50590,"byte_end":50626,"line_start":1237,"line_end":1237,"column_start":1,"column_end":37}},{"value":"/ expected.s.push((1, \"Hi\".into()));","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":50627,"byte_end":50665,"line_start":1238,"line_end":1238,"column_start":1,"column_end":39}},{"value":"/ expected.s.push((1, \"Cake\".into()));","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":50666,"byte_end":50706,"line_start":1239,"line_end":1239,"column_start":1,"column_end":41}},{"value":"/ expected.s.push((1, \"Lie\".into()));","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":50707,"byte_end":50746,"line_start":1240,"line_end":1240,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":50747,"byte_end":50750,"line_start":1241,"line_end":1241,"column_start":1,"column_end":4}},{"value":"/ let res: S = serde_json::from_str(from).unwrap();","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":50751,"byte_end":50804,"line_start":1242,"line_end":1242,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(3, res.s.len());","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":50805,"byte_end":50836,"line_start":1243,"line_end":1243,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(expected, res);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":50837,"byte_end":50867,"line_start":1244,"line_end":1244,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(from, serde_json::to_string_pretty(&expected).unwrap());","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":50868,"byte_end":50939,"line_start":1245,"line_end":1245,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":50940,"byte_end":50947,"line_start":1246,"line_end":1246,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":389},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":51142,"byte_end":51151,"line_start":1251,"line_end":1251,"column_start":12,"column_end":21},"name":"serialize","qualname":"::rust::tuple_list_as_map::serialize","value":"fn <'a, I, K, V, S> (iter: I, serializer: S) -> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Serialize any iteration of tuples into a map.\n","sig":null,"attributes":[{"value":"/ Serialize any iteration of tuples into a map.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":51081,"byte_end":51130,"line_start":1250,"line_end":1250,"column_start":5,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":395},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":51683,"byte_end":51694,"line_start":1268,"line_end":1268,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::tuple_list_as_map::deserialize","value":"fn <'de, I, K, V, D> (deserializer: D) -> Result<I, D::Error>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a map into an iterator of tuples.\n","sig":null,"attributes":[{"value":"/ Deserialize a map into an iterator of tuples.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":51622,"byte_end":51671,"line_start":1267,"line_end":1267,"column_start":5,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":431},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":54553,"byte_end":54568,"line_start":1374,"line_end":1374,"column_start":9,"column_end":24},"name":"bytes_or_string","qualname":"::rust::bytes_or_string","value":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","parent":null,"children":[{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":436},{"krate":0,"index":438}],"decl_id":null,"docs":" Deserialize from bytes or String","sig":null,"attributes":[{"value":"/ Deserialize from bytes or String","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":53153,"byte_end":53189,"line_start":1322,"line_end":1322,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":53190,"byte_end":53193,"line_start":1323,"line_end":1323,"column_start":1,"column_end":4}},{"value":"/ Any Rust [`String`] can be converted into bytes ([`Vec`]`<u8>`).","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":53194,"byte_end":53262,"line_start":1324,"line_end":1324,"column_start":1,"column_end":69}},{"value":"/ Accepting both as formats while deserializing can be helpful while interacting with language","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":53263,"byte_end":53359,"line_start":1325,"line_end":1325,"column_start":1,"column_end":97}},{"value":"/ which have a looser definition of string than Rust.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":53360,"byte_end":53415,"line_start":1326,"line_end":1326,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":53416,"byte_end":53419,"line_start":1327,"line_end":1327,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":53420,"byte_end":53433,"line_start":1328,"line_end":1328,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":53434,"byte_end":53445,"line_start":1329,"line_end":1329,"column_start":1,"column_end":12}},{"value":"/ # extern crate serde;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":53446,"byte_end":53471,"line_start":1330,"line_end":1330,"column_start":1,"column_end":26}},{"value":"/ # extern crate serde_derive;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":53472,"byte_end":53504,"line_start":1331,"line_end":1331,"column_start":1,"column_end":33}},{"value":"/ # extern crate serde_json;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":53505,"byte_end":53535,"line_start":1332,"line_end":1332,"column_start":1,"column_end":31}},{"value":"/ # extern crate serde_with;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":53536,"byte_end":53566,"line_start":1333,"line_end":1333,"column_start":1,"column_end":31}},{"value":"/ #","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":53567,"byte_end":53572,"line_start":1334,"line_end":1334,"column_start":1,"column_end":6}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":53573,"byte_end":53622,"line_start":1335,"line_end":1335,"column_start":1,"column_end":50}},{"value":"/ # use serde_json::json;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":53623,"byte_end":53650,"line_start":1336,"line_end":1336,"column_start":1,"column_end":28}},{"value":"/ #","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":53651,"byte_end":53656,"line_start":1337,"line_end":1337,"column_start":1,"column_end":6}},{"value":"/ #[derive(Debug, Deserialize, Serialize, PartialEq, Default)]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":53657,"byte_end":53721,"line_start":1338,"line_end":1338,"column_start":1,"column_end":65}},{"value":"/ struct S {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":53722,"byte_end":53736,"line_start":1339,"line_end":1339,"column_start":1,"column_end":15}},{"value":"/     #[serde(deserialize_with = \"serde_with::rust::bytes_or_string::deserialize\")]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":53737,"byte_end":53822,"line_start":1340,"line_end":1340,"column_start":1,"column_end":86}},{"value":"/     bos: Vec<u8>,","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":53823,"byte_end":53844,"line_start":1341,"line_end":1341,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":53845,"byte_end":53850,"line_start":1342,"line_end":1342,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":53851,"byte_end":53854,"line_start":1343,"line_end":1343,"column_start":1,"column_end":4}},{"value":"/ // Here we deserialize from a byte array ...","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":53855,"byte_end":53903,"line_start":1344,"line_end":1344,"column_start":1,"column_end":49}},{"value":"/ let from = r#\"{","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":53904,"byte_end":53923,"line_start":1345,"line_end":1345,"column_start":1,"column_end":20}},{"value":"/   \"bos\": [","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":53924,"byte_end":53938,"line_start":1346,"line_end":1346,"column_start":1,"column_end":15}},{"value":"/     0,","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":53939,"byte_end":53949,"line_start":1347,"line_end":1347,"column_start":1,"column_end":11}},{"value":"/     1,","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":53950,"byte_end":53960,"line_start":1348,"line_end":1348,"column_start":1,"column_end":11}},{"value":"/     2,","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":53961,"byte_end":53971,"line_start":1349,"line_end":1349,"column_start":1,"column_end":11}},{"value":"/     3","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":53972,"byte_end":53981,"line_start":1350,"line_end":1350,"column_start":1,"column_end":10}},{"value":"/   ]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":53982,"byte_end":53989,"line_start":1351,"line_end":1351,"column_start":1,"column_end":8}},{"value":"/ }\"#;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":53990,"byte_end":53998,"line_start":1352,"line_end":1352,"column_start":1,"column_end":9}},{"value":"/ let expected = S {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":53999,"byte_end":54021,"line_start":1353,"line_end":1353,"column_start":1,"column_end":23}},{"value":"/     bos: vec![0, 1, 2, 3],","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":54022,"byte_end":54052,"line_start":1354,"line_end":1354,"column_start":1,"column_end":31}},{"value":"/ };","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":54053,"byte_end":54059,"line_start":1355,"line_end":1355,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":54060,"byte_end":54063,"line_start":1356,"line_end":1356,"column_start":1,"column_end":4}},{"value":"/ let res: S = serde_json::from_str(from).unwrap();","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":54064,"byte_end":54117,"line_start":1357,"line_end":1357,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(expected, res);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":54118,"byte_end":54148,"line_start":1358,"line_end":1358,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":54149,"byte_end":54152,"line_start":1359,"line_end":1359,"column_start":1,"column_end":4}},{"value":"/ // and serialization works too.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":54153,"byte_end":54188,"line_start":1360,"line_end":1360,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(from, serde_json::to_string_pretty(&expected).unwrap());","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":54189,"byte_end":54260,"line_start":1361,"line_end":1361,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":54261,"byte_end":54264,"line_start":1362,"line_end":1362,"column_start":1,"column_end":4}},{"value":"/ // But we also support deserializing from String","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":54265,"byte_end":54317,"line_start":1363,"line_end":1363,"column_start":1,"column_end":53}},{"value":"/ let from = r#\"{","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":54318,"byte_end":54337,"line_start":1364,"line_end":1364,"column_start":1,"column_end":20}},{"value":"/   \"bos\": \"✨Works!\"","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":54338,"byte_end":54362,"line_start":1365,"line_end":1365,"column_start":1,"column_end":23}},{"value":"/ }\"#;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":54363,"byte_end":54371,"line_start":1366,"line_end":1366,"column_start":1,"column_end":9}},{"value":"/ let expected = S {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":54372,"byte_end":54394,"line_start":1367,"line_end":1367,"column_start":1,"column_end":23}},{"value":"/     bos: \"✨Works!\".as_bytes().to_vec(),","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":54395,"byte_end":54440,"line_start":1368,"line_end":1368,"column_start":1,"column_end":44}},{"value":"/ };","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":54441,"byte_end":54447,"line_start":1369,"line_end":1369,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":54448,"byte_end":54451,"line_start":1370,"line_end":1370,"column_start":1,"column_end":4}},{"value":"/ let res: S = serde_json::from_str(from).unwrap();","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":54452,"byte_end":54505,"line_start":1371,"line_end":1371,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(expected, res);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":54506,"byte_end":54536,"line_start":1372,"line_end":1372,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":54537,"byte_end":54544,"line_start":1373,"line_end":1373,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":433},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":54665,"byte_end":54676,"line_start":1378,"line_end":1378,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::bytes_or_string::deserialize","value":"fn <'de, D> (deserializer: D) -> Result<Vec<u8>, D::Error>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a [`Vec`]`<u8>` from either bytes or string\n","sig":null,"attributes":[{"value":"/ Deserialize a [`Vec`]`<u8>` from either bytes or string","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":54594,"byte_end":54653,"line_start":1377,"line_end":1377,"column_start":5,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":452},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":57611,"byte_end":57627,"line_start":1480,"line_end":1480,"column_start":9,"column_end":25},"name":"default_on_error","qualname":"::rust::default_on_error","value":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","parent":null,"children":[{"krate":0,"index":453},{"krate":0,"index":454}],"decl_id":null,"docs":" Deserialize value and return [`Default`] on error","sig":null,"attributes":[{"value":"/ Deserialize value and return [`Default`] on error","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":55905,"byte_end":55958,"line_start":1423,"line_end":1423,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":55959,"byte_end":55962,"line_start":1424,"line_end":1424,"column_start":1,"column_end":4}},{"value":"/ The main use case is ignoring error while deserializing.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":55963,"byte_end":56023,"line_start":1425,"line_end":1425,"column_start":1,"column_end":61}},{"value":"/ Instead of erroring, it simply deserializes the [`Default`] variant of the type.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":56024,"byte_end":56108,"line_start":1426,"line_end":1426,"column_start":1,"column_end":85}},{"value":"/ It is not possible to find the error location, i.e., which field had a deserialization error, with this method.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":56109,"byte_end":56224,"line_start":1427,"line_end":1427,"column_start":1,"column_end":116}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":56225,"byte_end":56228,"line_start":1428,"line_end":1428,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":56229,"byte_end":56243,"line_start":1429,"line_end":1429,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":56244,"byte_end":56247,"line_start":1430,"line_end":1430,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":56248,"byte_end":56255,"line_start":1431,"line_end":1431,"column_start":1,"column_end":8}},{"value":"/ # extern crate serde;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":56256,"byte_end":56281,"line_start":1432,"line_end":1432,"column_start":1,"column_end":26}},{"value":"/ # extern crate serde_derive;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":56282,"byte_end":56314,"line_start":1433,"line_end":1433,"column_start":1,"column_end":33}},{"value":"/ # extern crate serde_json;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":56315,"byte_end":56345,"line_start":1434,"line_end":1434,"column_start":1,"column_end":31}},{"value":"/ # extern crate serde_with;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":56346,"byte_end":56376,"line_start":1435,"line_end":1435,"column_start":1,"column_end":31}},{"value":"/ #","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":56377,"byte_end":56382,"line_start":1436,"line_end":1436,"column_start":1,"column_end":6}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":56383,"byte_end":56419,"line_start":1437,"line_end":1437,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":56420,"byte_end":56425,"line_start":1438,"line_end":1438,"column_start":1,"column_end":6}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":56426,"byte_end":56452,"line_start":1439,"line_end":1439,"column_start":1,"column_end":27}},{"value":"/ struct A {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":56453,"byte_end":56467,"line_start":1440,"line_end":1440,"column_start":1,"column_end":15}},{"value":"/     #[serde(deserialize_with = \"serde_with::rust::default_on_error::deserialize\")]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":56468,"byte_end":56554,"line_start":1441,"line_end":1441,"column_start":1,"column_end":87}},{"value":"/     value: u32,","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":56555,"byte_end":56574,"line_start":1442,"line_end":1442,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":56575,"byte_end":56580,"line_start":1443,"line_end":1443,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":56581,"byte_end":56584,"line_start":1444,"line_end":1444,"column_start":1,"column_end":4}},{"value":"/ let a: A = serde_json::from_str(r#\"{\"value\": 123}\"#).unwrap();","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":56585,"byte_end":56651,"line_start":1445,"line_end":1445,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(123, a.value);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":56652,"byte_end":56681,"line_start":1446,"line_end":1446,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":56682,"byte_end":56685,"line_start":1447,"line_end":1447,"column_start":1,"column_end":4}},{"value":"/ // null is of invalid type","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":56686,"byte_end":56716,"line_start":1448,"line_end":1448,"column_start":1,"column_end":31}},{"value":"/ let a: A = serde_json::from_str(r#\"{\"value\": null}\"#).unwrap();","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":56717,"byte_end":56784,"line_start":1449,"line_end":1449,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(0, a.value);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":56785,"byte_end":56812,"line_start":1450,"line_end":1450,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":56813,"byte_end":56816,"line_start":1451,"line_end":1451,"column_start":1,"column_end":4}},{"value":"/ // String is of invalid type","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":56817,"byte_end":56849,"line_start":1452,"line_end":1452,"column_start":1,"column_end":33}},{"value":"/ let a: A = serde_json::from_str(r#\"{\"value\": \"123\"}\"#).unwrap();","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":56850,"byte_end":56918,"line_start":1453,"line_end":1453,"column_start":1,"column_end":69}},{"value":"/ assert_eq!(0, a.value);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":56919,"byte_end":56946,"line_start":1454,"line_end":1454,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":56947,"byte_end":56950,"line_start":1455,"line_end":1455,"column_start":1,"column_end":4}},{"value":"/ // Missing entries still cause errors","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":56951,"byte_end":56992,"line_start":1456,"line_end":1456,"column_start":1,"column_end":42}},{"value":"/ assert!(serde_json::from_str::<A>(r#\"{  }\"#).is_err());","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":56993,"byte_end":57052,"line_start":1457,"line_end":1457,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":57053,"byte_end":57060,"line_start":1458,"line_end":1458,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":57061,"byte_end":57064,"line_start":1459,"line_end":1459,"column_start":1,"column_end":4}},{"value":"/ Deserializing missing values can be supported by adding the `default` field attribute:","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":57065,"byte_end":57155,"line_start":1460,"line_end":1460,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":57156,"byte_end":57159,"line_start":1461,"line_end":1461,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":57160,"byte_end":57167,"line_start":1462,"line_end":1462,"column_start":1,"column_end":8}},{"value":"/ # extern crate serde;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":57168,"byte_end":57193,"line_start":1463,"line_end":1463,"column_start":1,"column_end":26}},{"value":"/ # extern crate serde_derive;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":57194,"byte_end":57226,"line_start":1464,"line_end":1464,"column_start":1,"column_end":33}},{"value":"/ # extern crate serde_json;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":57227,"byte_end":57257,"line_start":1465,"line_end":1465,"column_start":1,"column_end":31}},{"value":"/ # extern crate serde_with;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":57258,"byte_end":57288,"line_start":1466,"line_end":1466,"column_start":1,"column_end":31}},{"value":"/ #","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":57289,"byte_end":57294,"line_start":1467,"line_end":1467,"column_start":1,"column_end":6}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":57295,"byte_end":57331,"line_start":1468,"line_end":1468,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":57332,"byte_end":57337,"line_start":1469,"line_end":1469,"column_start":1,"column_end":6}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":57338,"byte_end":57364,"line_start":1470,"line_end":1470,"column_start":1,"column_end":27}},{"value":"/ struct B {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":57365,"byte_end":57379,"line_start":1471,"line_end":1471,"column_start":1,"column_end":15}},{"value":"/     #[serde(default, deserialize_with = \"serde_with::rust::default_on_error::deserialize\")]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":57380,"byte_end":57475,"line_start":1472,"line_end":1472,"column_start":1,"column_end":96}},{"value":"/     value: u32,","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":57476,"byte_end":57495,"line_start":1473,"line_end":1473,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":57496,"byte_end":57501,"line_start":1474,"line_end":1474,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":57502,"byte_end":57505,"line_start":1475,"line_end":1475,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":57506,"byte_end":57509,"line_start":1476,"line_end":1476,"column_start":1,"column_end":4}},{"value":"/ let b: B = serde_json::from_str(r#\"{  }\"#).unwrap();","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":57510,"byte_end":57566,"line_start":1477,"line_end":1477,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(0, b.value);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":57567,"byte_end":57594,"line_start":1478,"line_end":1478,"column_start":1,"column_end":28}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":57595,"byte_end":57602,"line_start":1479,"line_end":1479,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":454},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":57724,"byte_end":57735,"line_start":1484,"line_end":1484,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::default_on_error::deserialize","value":"fn <'de, D, T> (deserializer: D) -> Result<T, D::Error>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize T and return the [`Default`] value on error\n","sig":null,"attributes":[{"value":"/ Deserialize T and return the [`Default`] value on error","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":57653,"byte_end":57712,"line_start":1483,"line_end":1483,"column_start":5,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":459},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":58870,"byte_end":58885,"line_start":1523,"line_end":1523,"column_start":9,"column_end":24},"name":"default_on_null","qualname":"::rust::default_on_null","value":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","parent":null,"children":[{"krate":0,"index":460},{"krate":0,"index":461}],"decl_id":null,"docs":" Deserialize default value if encountering `null`.","sig":null,"attributes":[{"value":"/ Deserialize default value if encountering `null`.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":57954,"byte_end":58007,"line_start":1493,"line_end":1493,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":58008,"byte_end":58011,"line_start":1494,"line_end":1494,"column_start":1,"column_end":4}},{"value":"/ One use case are JSON APIs in which the `null` value represents some default state.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":58012,"byte_end":58099,"line_start":1495,"line_end":1495,"column_start":1,"column_end":88}},{"value":"/ This adapter allows to turn the `null` directly into the [`Default`] value of the type.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":58100,"byte_end":58191,"line_start":1496,"line_end":1496,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":58192,"byte_end":58195,"line_start":1497,"line_end":1497,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":58196,"byte_end":58210,"line_start":1498,"line_end":1498,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":58211,"byte_end":58214,"line_start":1499,"line_end":1499,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":58215,"byte_end":58222,"line_start":1500,"line_end":1500,"column_start":1,"column_end":8}},{"value":"/ # extern crate serde;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":58223,"byte_end":58248,"line_start":1501,"line_end":1501,"column_start":1,"column_end":26}},{"value":"/ # extern crate serde_derive;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":58249,"byte_end":58281,"line_start":1502,"line_end":1502,"column_start":1,"column_end":33}},{"value":"/ # extern crate serde_json;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":58282,"byte_end":58312,"line_start":1503,"line_end":1503,"column_start":1,"column_end":31}},{"value":"/ # extern crate serde_with;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":58313,"byte_end":58343,"line_start":1504,"line_end":1504,"column_start":1,"column_end":31}},{"value":"/ #","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":58344,"byte_end":58349,"line_start":1505,"line_end":1505,"column_start":1,"column_end":6}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":58350,"byte_end":58386,"line_start":1506,"line_end":1506,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":58387,"byte_end":58392,"line_start":1507,"line_end":1507,"column_start":1,"column_end":6}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":58393,"byte_end":58419,"line_start":1508,"line_end":1508,"column_start":1,"column_end":27}},{"value":"/ struct A {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":58420,"byte_end":58434,"line_start":1509,"line_end":1509,"column_start":1,"column_end":15}},{"value":"/     #[serde(deserialize_with = \"serde_with::rust::default_on_null::deserialize\")]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":58435,"byte_end":58520,"line_start":1510,"line_end":1510,"column_start":1,"column_end":86}},{"value":"/     value: u32,","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":58521,"byte_end":58540,"line_start":1511,"line_end":1511,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":58541,"byte_end":58546,"line_start":1512,"line_end":1512,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":58547,"byte_end":58550,"line_start":1513,"line_end":1513,"column_start":1,"column_end":4}},{"value":"/ let a: A = serde_json::from_str(r#\"{\"value\": 123}\"#).unwrap();","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":58551,"byte_end":58617,"line_start":1514,"line_end":1514,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(123, a.value);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":58618,"byte_end":58647,"line_start":1515,"line_end":1515,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":58648,"byte_end":58651,"line_start":1516,"line_end":1516,"column_start":1,"column_end":4}},{"value":"/ let a: A = serde_json::from_str(r#\"{\"value\": null}\"#).unwrap();","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":58652,"byte_end":58719,"line_start":1517,"line_end":1517,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(0, a.value);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":58720,"byte_end":58747,"line_start":1518,"line_end":1518,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":58748,"byte_end":58751,"line_start":1519,"line_end":1519,"column_start":1,"column_end":4}},{"value":"/ // String is invalid type","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":58752,"byte_end":58781,"line_start":1520,"line_end":1520,"column_start":1,"column_end":30}},{"value":"/ assert!(serde_json::from_str::<A>(r#\"{\"value\": \"123\"}\"#).is_err());","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":58782,"byte_end":58853,"line_start":1521,"line_end":1521,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":58854,"byte_end":58861,"line_start":1522,"line_end":1522,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":461},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":59001,"byte_end":59012,"line_start":1527,"line_end":1527,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::default_on_null::deserialize","value":"fn <'de, D, T> (deserializer: D) -> Result<T, D::Error>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize T and return the [`Default`] value if original value is `null`\n","sig":null,"attributes":[{"value":"/ Deserialize T and return the [`Default`] value if original value is `null`","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":58911,"byte_end":58989,"line_start":1526,"line_end":1526,"column_start":5,"column_end":83}}]},{"kind":"Mod","id":{"krate":0,"index":465},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\with_prefix.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"with_prefix","qualname":"::with_prefix","value":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\with_prefix.rs","parent":null,"children":[{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":490},{"krate":0,"index":495},{"krate":0,"index":538},{"krate":0,"index":551},{"krate":0,"index":559},{"krate":0,"index":566},{"krate":0,"index":577},{"krate":0,"index":585},{"krate":0,"index":594},{"krate":0,"index":600},{"krate":0,"index":610},{"krate":0,"index":617}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":485},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\with_prefix.rs","byte_start":63383,"byte_end":63393,"line_start":144,"line_end":144,"column_start":12,"column_end":22},"name":"WithPrefix","qualname":"::with_prefix::WithPrefix","value":"WithPrefix { delegate, prefix }","parent":null,"children":[{"krate":0,"index":488},{"krate":0,"index":489}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\with_prefix.rs","byte_start":63332,"byte_end":63371,"line_start":143,"line_end":143,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":488},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\with_prefix.rs","byte_start":63411,"byte_end":63419,"line_start":145,"line_end":145,"column_start":9,"column_end":17},"name":"delegate","qualname":"::with_prefix::WithPrefix::delegate","value":"T","parent":{"krate":0,"index":485},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":489},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\with_prefix.rs","byte_start":63432,"byte_end":63438,"line_start":146,"line_end":146,"column_start":9,"column_end":15},"name":"prefix","qualname":"::with_prefix::WithPrefix::prefix","value":"&'a str","parent":{"krate":0,"index":485},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":594},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\with_prefix.rs","byte_start":73603,"byte_end":73619,"line_start":516,"line_end":516,"column_start":12,"column_end":28},"name":"WithPrefixOption","qualname":"::with_prefix::WithPrefixOption","value":"WithPrefixOption {  }","parent":null,"children":[{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\with_prefix.rs","byte_start":73552,"byte_end":73591,"line_start":515,"line_end":515,"column_start":1,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":627},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":3838,"byte_end":3847,"line_start":115,"line_end":115,"column_start":11,"column_end":20},"name":"Separator","qualname":"::Separator","value":"Separator","parent":null,"children":[{"krate":0,"index":628}],"decl_id":null,"docs":" Separator for string-based collection de/serialization\n","sig":null,"attributes":[{"value":"/ Separator for string-based collection de/serialization","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":3769,"byte_end":3827,"line_start":114,"line_end":114,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":3938,"byte_end":3947,"line_start":117,"line_end":117,"column_start":8,"column_end":17},"name":"separator","qualname":"::Separator::separator","value":"fn () -> &'static str","parent":{"krate":0,"index":627},"children":[],"decl_id":null,"docs":" Return the string delimiting two elements in the string-based collection\n","sig":null,"attributes":[{"value":"/ Return the string delimiting two elements in the string-based collection","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":3854,"byte_end":3930,"line_start":116,"line_end":116,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":789},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":4104,"byte_end":4118,"line_start":122,"line_end":122,"column_start":12,"column_end":26},"name":"SpaceSeparator","qualname":"::SpaceSeparator","value":"","parent":null,"children":[],"decl_id":null,"docs":" Predefined separator using a single space\n","sig":null,"attributes":[{"value":"/ Predefined separator using a single space","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":3970,"byte_end":4015,"line_start":120,"line_end":120,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":811},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":4363,"byte_end":4377,"line_start":133,"line_end":133,"column_start":12,"column_end":26},"name":"CommaSeparator","qualname":"::CommaSeparator","value":"","parent":null,"children":[],"decl_id":null,"docs":" Predefined separator using a single comma\n","sig":null,"attributes":[{"value":"/ Predefined separator using a single comma","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":4229,"byte_end":4274,"line_start":131,"line_end":131,"column_start":1,"column_end":46}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\duplicate_key_impls\\error_on_duplicate.rs","byte_start":5326,"byte_end":5333,"line_start":20,"line_end":20,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":28},{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\duplicate_key_impls\\error_on_duplicate.rs","byte_start":5768,"byte_end":5776,"line_start":39,"line_end":39,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\duplicate_key_impls\\error_on_duplicate.rs","byte_start":6035,"byte_end":6042,"line_start":54,"line_end":54,"column_start":52,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":38},{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\duplicate_key_impls\\error_on_duplicate.rs","byte_start":6509,"byte_end":6517,"line_start":73,"line_end":73,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\duplicate_key_impls\\first_value_wins.rs","byte_start":7334,"byte_end":7341,"line_start":20,"line_end":20,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":67},{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\duplicate_key_impls\\first_value_wins.rs","byte_start":7853,"byte_end":7861,"line_start":40,"line_end":40,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\duplicate_key_impls\\first_value_wins.rs","byte_start":8198,"byte_end":8205,"line_start":56,"line_end":56,"column_start":54,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\duplicate_key_impls\\first_value_wins.rs","byte_start":8904,"byte_end":8912,"line_start":83,"line_end":83,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":14094,"byte_end":14100,"line_start":69,"line_end":69,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":17250,"byte_end":17256,"line_start":170,"line_end":170,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":20266,"byte_end":20285,"line_start":264,"line_end":264,"column_start":11,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":188},{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":29079,"byte_end":29089,"line_start":535,"line_end":535,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":32223,"byte_end":32233,"line_start":635,"line_end":635,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":34314,"byte_end":34324,"line_start":698,"line_end":698,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":37289,"byte_end":37299,"line_start":797,"line_end":797,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":39824,"byte_end":39845,"line_start":885,"line_end":885,"column_start":39,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":324},{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":44530,"byte_end":44544,"line_start":1043,"line_end":1043,"column_start":42,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":47443,"byte_end":47458,"line_start":1137,"line_end":1137,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":52129,"byte_end":52139,"line_start":1281,"line_end":1281,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":52737,"byte_end":52744,"line_start":1304,"line_end":1304,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":429},{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":54908,"byte_end":54928,"line_start":1387,"line_end":1387,"column_start":32,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":444},{"krate":0,"index":446},{"krate":0,"index":448},{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\with_prefix.rs","byte_start":63478,"byte_end":63488,"line_start":149,"line_end":149,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\with_prefix.rs","byte_start":63789,"byte_end":63799,"line_start":164,"line_end":164,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":529},{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\with_prefix.rs","byte_start":69340,"byte_end":69350,"line_start":342,"line_end":342,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":545},{"krate":0,"index":547},{"krate":0,"index":550}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\with_prefix.rs","byte_start":70326,"byte_end":70336,"line_start":385,"line_end":385,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":558}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\with_prefix.rs","byte_start":70795,"byte_end":70805,"line_start":405,"line_end":405,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\with_prefix.rs","byte_start":71177,"byte_end":71187,"line_start":422,"line_end":422,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":573},{"krate":0,"index":575},{"krate":0,"index":673},{"krate":0,"index":675},{"krate":0,"index":677},{"krate":0,"index":679},{"krate":0,"index":681},{"krate":0,"index":683},{"krate":0,"index":685},{"krate":0,"index":687},{"krate":0,"index":689},{"krate":0,"index":691},{"krate":0,"index":693},{"krate":0,"index":695},{"krate":0,"index":697},{"krate":0,"index":699},{"krate":0,"index":701},{"krate":0,"index":703},{"krate":0,"index":705},{"krate":0,"index":707},{"krate":0,"index":709},{"krate":0,"index":711},{"krate":0,"index":713},{"krate":0,"index":715},{"krate":0,"index":717},{"krate":0,"index":719},{"krate":0,"index":721},{"krate":0,"index":723},{"krate":0,"index":725},{"krate":0,"index":727}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\with_prefix.rs","byte_start":72330,"byte_end":72340,"line_start":466,"line_end":466,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\with_prefix.rs","byte_start":72799,"byte_end":72809,"line_start":487,"line_end":487,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":592}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\with_prefix.rs","byte_start":73735,"byte_end":73751,"line_start":522,"line_end":522,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":608}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\with_prefix.rs","byte_start":74641,"byte_end":74657,"line_start":557,"line_end":557,"column_start":40,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":729},{"krate":0,"index":731},{"krate":0,"index":733},{"krate":0,"index":735},{"krate":0,"index":737},{"krate":0,"index":739},{"krate":0,"index":741},{"krate":0,"index":743},{"krate":0,"index":745},{"krate":0,"index":747},{"krate":0,"index":749},{"krate":0,"index":751},{"krate":0,"index":753},{"krate":0,"index":755},{"krate":0,"index":757},{"krate":0,"index":759},{"krate":0,"index":761},{"krate":0,"index":763},{"krate":0,"index":765},{"krate":0,"index":767},{"krate":0,"index":769},{"krate":0,"index":771},{"krate":0,"index":773},{"krate":0,"index":775},{"krate":0,"index":777},{"krate":0,"index":779},{"krate":0,"index":781},{"krate":0,"index":783},{"krate":0,"index":785},{"krate":0,"index":787}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\with_prefix.rs","byte_start":75169,"byte_end":75185,"line_start":577,"line_end":577,"column_start":37,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":621},{"krate":0,"index":622},{"krate":0,"index":624}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":4140,"byte_end":4154,"line_start":124,"line_end":124,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":630}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":4399,"byte_end":4413,"line_start":135,"line_end":135,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":632}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":3567,"byte_end":3571,"line_start":105,"line_end":105,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":95}},{"kind":"Mod","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":3596,"byte_end":3607,"line_start":107,"line_end":107,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":465}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\duplicate_key_impls\\error_on_duplicate.rs","byte_start":5326,"byte_end":5333,"line_start":20,"line_end":20,"column_start":46,"column_end":53},"kind":{"Impl":{"id":0}},"from":{"krate":1,"index":6239},"to":{"krate":0,"index":16}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\duplicate_key_impls\\error_on_duplicate.rs","byte_start":5768,"byte_end":5776,"line_start":39,"line_end":39,"column_start":43,"column_end":51},"kind":{"Impl":{"id":1}},"from":{"krate":5,"index":4727},"to":{"krate":0,"index":16}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\duplicate_key_impls\\error_on_duplicate.rs","byte_start":6035,"byte_end":6042,"line_start":54,"line_end":54,"column_start":52,"column_end":59},"kind":{"Impl":{"id":2}},"from":{"krate":1,"index":6213},"to":{"krate":0,"index":20}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\duplicate_key_impls\\error_on_duplicate.rs","byte_start":6509,"byte_end":6517,"line_start":73,"line_end":73,"column_start":49,"column_end":57},"kind":{"Impl":{"id":3}},"from":{"krate":5,"index":692},"to":{"krate":0,"index":20}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\duplicate_key_impls\\first_value_wins.rs","byte_start":7334,"byte_end":7341,"line_start":20,"line_end":20,"column_start":48,"column_end":55},"kind":{"Impl":{"id":4}},"from":{"krate":1,"index":6239},"to":{"krate":0,"index":55}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\duplicate_key_impls\\first_value_wins.rs","byte_start":7853,"byte_end":7861,"line_start":40,"line_end":40,"column_start":45,"column_end":53},"kind":{"Impl":{"id":5}},"from":{"krate":5,"index":4727},"to":{"krate":0,"index":55}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\duplicate_key_impls\\first_value_wins.rs","byte_start":8198,"byte_end":8205,"line_start":56,"line_end":56,"column_start":54,"column_end":61},"kind":{"Impl":{"id":6}},"from":{"krate":1,"index":6213},"to":{"krate":0,"index":59}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\duplicate_key_impls\\first_value_wins.rs","byte_start":8904,"byte_end":8912,"line_start":83,"line_end":83,"column_start":51,"column_end":59},"kind":{"Impl":{"id":7}},"from":{"krate":5,"index":692},"to":{"krate":0,"index":59}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":14094,"byte_end":14100,"line_start":69,"line_end":69,"column_start":39,"column_end":45},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":132},"to":{"krate":14,"index":1276}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":17250,"byte_end":17256,"line_start":170,"line_end":170,"column_start":39,"column_end":45},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":170},"to":{"krate":14,"index":1276}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":20266,"byte_end":20285,"line_start":264,"line_end":264,"column_start":11,"column_end":30},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":633},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":29079,"byte_end":29089,"line_start":535,"line_end":535,"column_start":42,"column_end":52},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":223},"to":{"krate":14,"index":1276}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":32223,"byte_end":32233,"line_start":635,"line_end":635,"column_start":45,"column_end":55},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":245},"to":{"krate":14,"index":1276}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":34314,"byte_end":34324,"line_start":698,"line_end":698,"column_start":42,"column_end":52},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":269},"to":{"krate":14,"index":1276}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":37289,"byte_end":37299,"line_start":797,"line_end":797,"column_start":45,"column_end":55},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":291},"to":{"krate":14,"index":1276}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":39824,"byte_end":39845,"line_start":885,"line_end":885,"column_start":39,"column_end":60},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":313},"to":{"krate":14,"index":1276}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":44530,"byte_end":44544,"line_start":1043,"line_end":1043,"column_start":42,"column_end":56},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":346},"to":{"krate":14,"index":1276}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":47443,"byte_end":47458,"line_start":1137,"line_end":1137,"column_start":38,"column_end":53},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":372},"to":{"krate":14,"index":1276}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":52129,"byte_end":52139,"line_start":1281,"line_end":1281,"column_start":41,"column_end":51},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":401},"to":{"krate":14,"index":1276}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":52737,"byte_end":52744,"line_start":1304,"line_end":1304,"column_start":37,"column_end":44},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":416},"to":{"krate":2,"index":4972}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\rust.rs","byte_start":54908,"byte_end":54928,"line_start":1387,"line_end":1387,"column_start":32,"column_end":52},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":436},"to":{"krate":14,"index":1276}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\with_prefix.rs","byte_start":63478,"byte_end":63488,"line_start":149,"line_end":149,"column_start":27,"column_end":37},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":485},"to":{"krate":14,"index":1680}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\with_prefix.rs","byte_start":63789,"byte_end":63799,"line_start":164,"line_end":164,"column_start":28,"column_end":38},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":485},"to":{"krate":14,"index":1683}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\with_prefix.rs","byte_start":69340,"byte_end":69350,"line_start":342,"line_end":342,"column_start":30,"column_end":40},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":485},"to":{"krate":14,"index":1757}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\with_prefix.rs","byte_start":70326,"byte_end":70336,"line_start":385,"line_end":385,"column_start":33,"column_end":43},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":485},"to":{"krate":14,"index":1768}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\with_prefix.rs","byte_start":70795,"byte_end":70805,"line_start":405,"line_end":405,"column_start":43,"column_end":53},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":485},"to":{"krate":14,"index":1203}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\with_prefix.rs","byte_start":71177,"byte_end":71187,"line_start":422,"line_end":422,"column_start":40,"column_end":50},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":485},"to":{"krate":14,"index":1214}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\with_prefix.rs","byte_start":72330,"byte_end":72340,"line_start":466,"line_end":466,"column_start":35,"column_end":45},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":485},"to":{"krate":14,"index":1276}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\with_prefix.rs","byte_start":72799,"byte_end":72809,"line_start":487,"line_end":487,"column_start":37,"column_end":47},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":485},"to":{"krate":14,"index":1350}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\with_prefix.rs","byte_start":73735,"byte_end":73751,"line_start":522,"line_end":522,"column_start":35,"column_end":51},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":594},"to":{"krate":14,"index":1276}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\with_prefix.rs","byte_start":74641,"byte_end":74657,"line_start":557,"line_end":557,"column_start":40,"column_end":56},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":594},"to":{"krate":14,"index":1214}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\with_prefix.rs","byte_start":75169,"byte_end":75185,"line_start":577,"line_end":577,"column_start":37,"column_end":53},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":594},"to":{"krate":14,"index":1350}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":4140,"byte_end":4154,"line_start":124,"line_end":124,"column_start":20,"column_end":34},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":789},"to":{"krate":0,"index":627}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.4.0\\src\\lib.rs","byte_start":4399,"byte_end":4413,"line_start":135,"line_end":135,"column_start":20,"column_end":34},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":811},"to":{"krate":0,"index":627}}]}