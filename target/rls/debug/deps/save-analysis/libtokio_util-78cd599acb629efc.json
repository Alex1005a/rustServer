{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0","program":"C:\\Users\\79211\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","tokio_util","--edition=2018","C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"codec\"","-C","metadata=78cd599acb629efc","-C","extra-filename=-78cd599acb629efc","--out-dir","c:\\Users\\79211\\Documents\\MyCode\\rustServer\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\79211\\Documents\\MyCode\\rustServer\\target\\rls\\debug\\deps","--extern","bytes=c:\\Users\\79211\\Documents\\MyCode\\rustServer\\target\\rls\\debug\\deps\\libbytes-1a1885068f3ba899.rmeta","--extern","futures_core=c:\\Users\\79211\\Documents\\MyCode\\rustServer\\target\\rls\\debug\\deps\\libfutures_core-1e062b716d33ed55.rmeta","--extern","futures_sink=c:\\Users\\79211\\Documents\\MyCode\\rustServer\\target\\rls\\debug\\deps\\libfutures_sink-4964663e07fa9c84.rmeta","--extern","log=c:\\Users\\79211\\Documents\\MyCode\\rustServer\\target\\rls\\debug\\deps\\liblog-485323b00fc30183.rmeta","--extern","pin_project_lite=c:\\Users\\79211\\Documents\\MyCode\\rustServer\\target\\rls\\debug\\deps\\libpin_project_lite-6f3dfdbc51be2a50.rmeta","--extern","tokio=c:\\Users\\79211\\Documents\\MyCode\\rustServer\\target\\rls\\debug\\deps\\libtokio-ecf9e8765e84fe5c.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\79211\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\79211\\Documents\\MyCode\\rustServer\\target\\rls\\debug\\deps\\libtokio_util-78cd599acb629efc.rmeta"},"prelude":{"crate_id":{"name":"tokio_util","disambiguator":[1056457579082259368,17452710798604976488]},"crate_root":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src","external_crates":[{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[12374408497437733202,6492056007108846167]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[2290045538748334120,9614494007960750338]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15512757571249680579,12574991579126166983]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[17123206265898570674,6623867072543366863]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9295367743284037777,362479726688110916]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[9577042658642913717,6283816297099158970]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9211776128286668424,8590800287841478331]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[761442209400273500,2318016978487880907]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[9619839731531435865,7305872285662454983]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[9022773486214233476,13211195617945869214]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[12418999252224835617,8433212072856927403]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15106747134913048427,4886671886298966434]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[303194902276108962,17442566137036092759]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\bytes_codec.rs","num":14,"id":{"name":"bytes","disambiguator":[7379114380326894344,14186406876503252226]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","num":15,"id":{"name":"tokio","disambiguator":[5349577723644643569,17241083011469177470]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","num":16,"id":{"name":"pin_project_lite","disambiguator":[16746432398072813008,16613859276292678455]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","num":17,"id":{"name":"futures_core","disambiguator":[1043916710383482101,14186492276972013345]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","num":18,"id":{"name":"mio","disambiguator":[6972163073007127246,15722421057832637316]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","num":19,"id":{"name":"net2","disambiguator":[14031685692990568082,1183650051184536417]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","num":20,"id":{"name":"winapi","disambiguator":[515642717400556939,14831488282601185026]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","num":21,"id":{"name":"cfg_if","disambiguator":[17450997194065472978,17865286164272324672]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","num":22,"id":{"name":"iovec","disambiguator":[6744332754858904455,5530480897455056137]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","num":23,"id":{"name":"slab","disambiguator":[16398186582236668731,10091049662508376456]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","num":24,"id":{"name":"miow","disambiguator":[4735193488242740110,12235307635892493700]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","num":25,"id":{"name":"kernel32","disambiguator":[2719592042706174906,1786216650812938977]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","num":26,"id":{"name":"winapi","disambiguator":[7568390259383258330,17511371790024068020]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","num":27,"id":{"name":"ws2_32","disambiguator":[5213769657748233096,9297640480704941005]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_read.rs","num":28,"id":{"name":"log","disambiguator":[5506183650477552280,3545112655544017182]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","num":29,"id":{"name":"lazy_static","disambiguator":[15407661558441707805,858831805933295499]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","num":30,"id":{"name":"fnv","disambiguator":[1599018188953737541,5745003166681870242]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","num":31,"id":{"name":"tokio_macros","disambiguator":[17936593881096944861,5788224218795022191]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","num":32,"id":{"name":"memchr","disambiguator":[14442352664706637651,4829041608514628157]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","num":33,"id":{"name":"num_cpus","disambiguator":[15011481336696265801,3211785236610746689]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","num":34,"id":{"name":"futures_sink","disambiguator":[17801033674899442680,10271694015180957366]}}],"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\lib.rs","byte_start":0,"byte_end":494,"line_start":1,"line_end":26,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":453},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\mod.rs","byte_start":6850213,"byte_end":6850223,"line_start":13,"line_end":13,"column_start":28,"column_end":38},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\mod.rs","byte_start":6850262,"byte_end":6850269,"line_start":16,"line_end":16,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":45},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\mod.rs","byte_start":6850308,"byte_end":6850315,"line_start":19,"line_end":19,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":772},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\mod.rs","byte_start":6850353,"byte_end":6850359,"line_start":22,"line_end":22,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":481},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\mod.rs","byte_start":6850361,"byte_end":6850372,"line_start":22,"line_end":22,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":686},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\mod.rs","byte_start":6850420,"byte_end":6850430,"line_start":25,"line_end":25,"column_start":28,"column_end":38},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":600},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\mod.rs","byte_start":6850479,"byte_end":6850490,"line_start":28,"line_end":28,"column_start":29,"column_end":40},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":505},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\mod.rs","byte_start":6850552,"byte_end":6850572,"line_start":31,"line_end":31,"column_start":34,"column_end":54},"alias_span":null,"name":"LengthDelimitedCodec","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":364},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\mod.rs","byte_start":6850574,"byte_end":6850599,"line_start":31,"line_end":31,"column_start":56,"column_end":81},"alias_span":null,"name":"LengthDelimitedCodecError","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":521},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\mod.rs","byte_start":6850648,"byte_end":6850658,"line_start":34,"line_end":34,"column_start":29,"column_end":39},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":555},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\mod.rs","byte_start":6850660,"byte_end":6850675,"line_start":34,"line_end":34,"column_start":41,"column_end":56},"alias_span":null,"name":"LinesCodecError","value":"","parent":{"krate":0,"index":6}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\lib.rs","byte_start":0,"byte_end":494,"line_start":1,"line_end":26,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6}],"decl_id":null,"docs":" Utilities for working with Tokio.\n","sig":null,"attributes":[{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\lib.rs","byte_start":60,"byte_end":166,"line_start":2,"line_end":7,"column_start":1,"column_end":3}},{"value":"deny(intra_doc_link_resolution_failure)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\lib.rs","byte_start":167,"byte_end":210,"line_start":8,"line_end":8,"column_start":1,"column_end":44}},{"value":"! Utilities for working with Tokio.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\lib.rs","byte_start":368,"byte_end":405,"line_start":15,"line_end":15,"column_start":1,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":6},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\mod.rs","parent":null,"children":[{"krate":0,"index":7},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":170},{"krate":0,"index":173},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":410},{"krate":0,"index":413},{"krate":0,"index":450}],"decl_id":null,"docs":" Utilities for encoding and decoding frames.","sig":null,"attributes":[{"value":"cfg(feature = \"codec\")","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\cfg.rs","byte_start":570,"byte_end":595,"line_start":4,"line_end":4,"column_start":13,"column_end":38}},{"value":"! Utilities for encoding and decoding frames.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\mod.rs","byte_start":6849611,"byte_end":6849658,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\mod.rs","byte_start":6849659,"byte_end":6849662,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\mod.rs","byte_start":6849663,"byte_end":6849731,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"! [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\mod.rs","byte_start":6849732,"byte_end":6849807,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"! Framed streams are also known as transports.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\mod.rs","byte_start":6849808,"byte_end":6849856,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\mod.rs","byte_start":6849857,"byte_end":6849860,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! [`AsyncRead`]: https://docs.rs/tokio/*/tokio/io/trait.AsyncRead.html","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\mod.rs","byte_start":6849861,"byte_end":6849933,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"! [`AsyncWrite`]: https://docs.rs/tokio/*/tokio/io/trait.AsyncWrite.html","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\mod.rs","byte_start":6849934,"byte_end":6850008,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"! [`Sink`]: https://docs.rs/futures-sink/*/futures_sink/trait.Sink.html","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\mod.rs","byte_start":6850009,"byte_end":6850082,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"! [`Stream`]: https://docs.rs/futures-core/*/futures_core/stream/trait.Stream.html","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\mod.rs","byte_start":6850083,"byte_end":6850167,"line_start":10,"line_end":10,"column_start":1,"column_end":85}}]},{"kind":"Struct","id":{"krate":0,"index":453},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\bytes_codec.rs","byte_start":6850958,"byte_end":6850968,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes_codec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple `Codec` implementation that just ships bytes around.\n","sig":null,"attributes":[{"value":"/ A simple `Codec` implementation that just ships bytes around.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\bytes_codec.rs","byte_start":6850804,"byte_end":6850869,"line_start":7,"line_end":7,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\bytes_codec.rs","byte_start":6851070,"byte_end":6851073,"line_start":13,"line_end":13,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesCodec>::new","value":"fn () -> BytesCodec","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesCodec` for shipping around raw bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesCodec` for shipping around raw bytes.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\bytes_codec.rs","byte_start":6850997,"byte_end":6851058,"line_start":12,"line_end":12,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6852347,"byte_end":6852354,"line_start":19,"line_end":19,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39}],"decl_id":null,"docs":" Decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6851840,"byte_end":6851875,"line_start":9,"line_end":9,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6851876,"byte_end":6851879,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of `Framed` or","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6851880,"byte_end":6851947,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/ `FramedRead`. An implementation of `Decoder` takes a byte stream that has","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6851948,"byte_end":6852025,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ already been buffered in `src` and decodes the data into a stream of","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6852026,"byte_end":6852098,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/ `Self::Item` frames.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6852099,"byte_end":6852123,"line_start":14,"line_end":14,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6852124,"byte_end":6852127,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Implementations are able to track state on `self`, which enables","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6852128,"byte_end":6852196,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/ implementing stateful streaming parsers. In many cases, though, this type","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6852197,"byte_end":6852274,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ will simply be a unit struct (e.g. `struct HttpDecoder`).","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6852275,"byte_end":6852336,"line_start":18,"line_end":18,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":35},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6852402,"byte_end":6852406,"line_start":21,"line_end":21,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6852361,"byte_end":6852392,"line_start":20,"line_end":20,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":36},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6853113,"byte_end":6853118,"line_start":36,"line_end":36,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::decoder::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6852413,"byte_end":6852465,"line_start":23,"line_end":23,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6852470,"byte_end":6852473,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ If an individual message is ill-formed but can be ignored without","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6852478,"byte_end":6852547,"line_start":25,"line_end":25,"column_start":5,"column_end":74}},{"value":"/ interfering with the processing of future messages, it may be more","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6852552,"byte_end":6852622,"line_start":26,"line_end":26,"column_start":5,"column_end":75}},{"value":"/ useful to report the failure as an `Item`.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6852627,"byte_end":6852673,"line_start":27,"line_end":27,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6852678,"byte_end":6852681,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ `From<io::Error>` is required in the interest of making `Error` suitable","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6852686,"byte_end":6852762,"line_start":29,"line_end":29,"column_start":5,"column_end":81}},{"value":"/ for returning directly from a `FramedRead`, and to enable the default","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6852767,"byte_end":6852840,"line_start":30,"line_end":30,"column_start":5,"column_end":78}},{"value":"/ implementation of `decode_eof` to yield an `io::Error` when the decoder","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6852845,"byte_end":6852920,"line_start":31,"line_end":31,"column_start":5,"column_end":80}},{"value":"/ fails to consume all available data.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6852925,"byte_end":6852965,"line_start":32,"line_end":32,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6852970,"byte_end":6852973,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Note that implementors of this trait can simply indicate `type Error =","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6852978,"byte_end":6853052,"line_start":34,"line_end":34,"column_start":5,"column_end":79}},{"value":"/ io::Error` to use I/O errors as this type.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6853057,"byte_end":6853103,"line_start":35,"line_end":35,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6855951,"byte_end":6855957,"line_start":103,"line_end":103,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::decoder::Decoder::decode","value":"fn (&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6853142,"byte_end":6853207,"line_start":38,"line_end":38,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6853212,"byte_end":6853215,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ This method is called by `FramedRead` whenever bytes are ready to be","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6853220,"byte_end":6853292,"line_start":40,"line_end":40,"column_start":5,"column_end":77}},{"value":"/ parsed.  The provided buffer of bytes is what's been read so far, and","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6853297,"byte_end":6853370,"line_start":41,"line_end":41,"column_start":5,"column_end":78}},{"value":"/ this instance of `Decode` can determine whether an entire frame is in","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6853375,"byte_end":6853448,"line_start":42,"line_end":42,"column_start":5,"column_end":78}},{"value":"/ the buffer and is ready to be returned.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6853453,"byte_end":6853496,"line_start":43,"line_end":43,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6853501,"byte_end":6853504,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6853509,"byte_end":6853582,"line_start":45,"line_end":45,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6853587,"byte_end":6853650,"line_start":46,"line_end":46,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6853655,"byte_end":6853730,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6853735,"byte_end":6853810,"line_start":48,"line_end":48,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6853815,"byte_end":6853838,"line_start":49,"line_end":49,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6853843,"byte_end":6853846,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6853851,"byte_end":6853923,"line_start":51,"line_end":51,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the `Framed` instance that","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6853928,"byte_end":6854000,"line_start":52,"line_end":52,"column_start":5,"column_end":77}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6854005,"byte_end":6854075,"line_start":53,"line_end":53,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6854080,"byte_end":6854083,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that the bytes provided may be empty. If a previous call to","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6854088,"byte_end":6854156,"line_start":55,"line_end":55,"column_start":5,"column_end":73}},{"value":"/ `decode` consumed all the bytes in the buffer then `decode` will be","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6854161,"byte_end":6854232,"line_start":56,"line_end":56,"column_start":5,"column_end":76}},{"value":"/ called again until it returns `Ok(None)`, indicating that more bytes need to","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6854237,"byte_end":6854317,"line_start":57,"line_end":57,"column_start":5,"column_end":85}},{"value":"/ be read.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6854322,"byte_end":6854334,"line_start":58,"line_end":58,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6854339,"byte_end":6854342,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6854347,"byte_end":6854417,"line_start":60,"line_end":60,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs `Framed` that the stream is now","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6854422,"byte_end":6854495,"line_start":61,"line_end":61,"column_start":5,"column_end":78}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6854500,"byte_end":6854537,"line_start":62,"line_end":62,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6854542,"byte_end":6854545,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Buffer management","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6854550,"byte_end":6854573,"line_start":64,"line_end":64,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6854578,"byte_end":6854581,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ Before returning from the function, implementations should ensure that","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6854586,"byte_end":6854660,"line_start":66,"line_end":66,"column_start":5,"column_end":79}},{"value":"/ the buffer has appropriate capacity in anticipation of future calls to","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6854665,"byte_end":6854739,"line_start":67,"line_end":67,"column_start":5,"column_end":79}},{"value":"/ `decode`. Failing to do so leads to inefficiency.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6854744,"byte_end":6854797,"line_start":68,"line_end":68,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6854802,"byte_end":6854805,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ For example, if frames have a fixed length, or if the length of the","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6854810,"byte_end":6854881,"line_start":70,"line_end":70,"column_start":5,"column_end":76}},{"value":"/ current frame is known from a header, a possible buffer management","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6854886,"byte_end":6854956,"line_start":71,"line_end":71,"column_start":5,"column_end":75}},{"value":"/ strategy is:","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6854961,"byte_end":6854977,"line_start":72,"line_end":72,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6854982,"byte_end":6854985,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6854990,"byte_end":6855003,"line_start":74,"line_end":74,"column_start":5,"column_end":18}},{"value":"/ # use std::io;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6855008,"byte_end":6855026,"line_start":75,"line_end":75,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6855031,"byte_end":6855036,"line_start":76,"line_end":76,"column_start":5,"column_end":10}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6855041,"byte_end":6855067,"line_start":77,"line_end":77,"column_start":5,"column_end":31}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6855072,"byte_end":6855109,"line_start":78,"line_end":78,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6855114,"byte_end":6855119,"line_start":79,"line_end":79,"column_start":5,"column_end":10}},{"value":"/ # struct MyCodec;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6855124,"byte_end":6855145,"line_start":80,"line_end":80,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6855150,"byte_end":6855155,"line_start":81,"line_end":81,"column_start":5,"column_end":10}},{"value":"/ impl Decoder for MyCodec {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6855160,"byte_end":6855190,"line_start":82,"line_end":82,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6855195,"byte_end":6855209,"line_start":83,"line_end":83,"column_start":5,"column_end":19}},{"value":"/     # type Item = BytesMut;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6855214,"byte_end":6855245,"line_start":84,"line_end":84,"column_start":5,"column_end":36}},{"value":"/     # type Error = io::Error;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6855250,"byte_end":6855283,"line_start":85,"line_end":85,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6855288,"byte_end":6855291,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/     fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6855296,"byte_end":6855389,"line_start":87,"line_end":87,"column_start":5,"column_end":98}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6855394,"byte_end":6855412,"line_start":88,"line_end":88,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6855417,"byte_end":6855420,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/         // Reserve enough to complete decoding of the current frame.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6855425,"byte_end":6855497,"line_start":90,"line_end":90,"column_start":5,"column_end":77}},{"value":"/         let current_frame_len: usize = 1000; // Example.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6855502,"byte_end":6855562,"line_start":91,"line_end":91,"column_start":5,"column_end":65}},{"value":"/         // And to start decoding the next frame.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6855567,"byte_end":6855619,"line_start":92,"line_end":92,"column_start":5,"column_end":57}},{"value":"/         let next_frame_header_len: usize = 10; // Example.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6855624,"byte_end":6855686,"line_start":93,"line_end":93,"column_start":5,"column_end":67}},{"value":"/         src.reserve(current_frame_len + next_frame_header_len);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6855691,"byte_end":6855758,"line_start":94,"line_end":94,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6855763,"byte_end":6855766,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/         return Ok(None);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6855771,"byte_end":6855799,"line_start":96,"line_end":96,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6855804,"byte_end":6855813,"line_start":97,"line_end":97,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6855818,"byte_end":6855823,"line_start":98,"line_end":98,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6855828,"byte_end":6855835,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6855840,"byte_end":6855843,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ An optimal buffer management strategy minimizes reallocations and","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6855848,"byte_end":6855917,"line_start":101,"line_end":101,"column_start":5,"column_end":74}},{"value":"/ over-allocations.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6855922,"byte_end":6855943,"line_start":102,"line_end":102,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6856816,"byte_end":6856826,"line_start":118,"line_end":118,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::codec::decoder::Decoder::decode_eof","value":"fn (&mut self, buf: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6856038,"byte_end":6856110,"line_start":105,"line_end":105,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6856115,"byte_end":6856164,"line_start":106,"line_end":106,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6856169,"byte_end":6856172,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6856177,"byte_end":6856245,"line_start":108,"line_end":108,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned while there is unconsumed data in `buf`.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6856250,"byte_end":6856317,"line_start":109,"line_end":109,"column_start":5,"column_end":72}},{"value":"/ Typically this doesn't need to be implemented unless the framing","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6856322,"byte_end":6856390,"line_start":110,"line_end":110,"column_start":5,"column_end":73}},{"value":"/ protocol differs near the end of the stream.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6856395,"byte_end":6856443,"line_start":111,"line_end":111,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6856448,"byte_end":6856451,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ Note that the `buf` argument may be empty. If a previous call to","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6856456,"byte_end":6856524,"line_start":113,"line_end":113,"column_start":5,"column_end":73}},{"value":"/ `decode_eof` consumed all the bytes in the buffer, `decode_eof` will be","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6856529,"byte_end":6856604,"line_start":114,"line_end":114,"column_start":5,"column_end":80}},{"value":"/ called again until it returns `None`, indicating that there are no more","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6856609,"byte_end":6856684,"line_start":115,"line_end":115,"column_start":5,"column_end":80}},{"value":"/ frames to yield. This behavior enables returning finalization frames","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6856689,"byte_end":6856761,"line_start":116,"line_end":116,"column_start":5,"column_end":77}},{"value":"/ that may not be based on inbound data.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6856766,"byte_end":6856808,"line_start":117,"line_end":117,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6858301,"byte_end":6858307,"line_start":148,"line_end":148,"column_start":8,"column_end":14},"name":"framed","qualname":"::codec::decoder::Decoder::framed","value":"fn <T> (self, io: T) -> Framed<T, Self>","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":" Provides a `Stream` and `Sink` interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a `Stream` and `Sink` interface for reading and writing to this","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6857244,"byte_end":6857320,"line_start":131,"line_end":131,"column_start":5,"column_end":81}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6857325,"byte_end":6857401,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6857406,"byte_end":6857409,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6857414,"byte_end":6857489,"line_start":134,"line_end":134,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6857494,"byte_end":6857564,"line_start":135,"line_end":135,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6857569,"byte_end":6857640,"line_start":136,"line_end":136,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6857645,"byte_end":6857717,"line_start":137,"line_end":137,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6857722,"byte_end":6857780,"line_start":138,"line_end":138,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6857785,"byte_end":6857788,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6857793,"byte_end":6857862,"line_start":140,"line_end":140,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6857867,"byte_end":6857942,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6857947,"byte_end":6858023,"line_start":142,"line_end":142,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6858028,"byte_end":6858050,"line_start":143,"line_end":143,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6858055,"byte_end":6858058,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6858063,"byte_end":6858136,"line_start":145,"line_end":145,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the `Framed` returned by this method, which will","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6858141,"byte_end":6858212,"line_start":146,"line_end":146,"column_start":5,"column_end":76}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\decoder.rs","byte_start":6858217,"byte_end":6858293,"line_start":147,"line_end":147,"column_start":5,"column_end":81}}]},{"kind":"Trait","id":{"krate":0,"index":45},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\encoder.rs","byte_start":6858598,"byte_end":6858605,"line_start":6,"line_end":6,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::encoder::Encoder","value":"Encoder","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48}],"decl_id":null,"docs":" Trait of helper objects to write out messages as bytes, for use with\n `FramedWrite`.\n","sig":null,"attributes":[{"value":"/ Trait of helper objects to write out messages as bytes, for use with","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\encoder.rs","byte_start":6858496,"byte_end":6858568,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ `FramedWrite`.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\encoder.rs","byte_start":6858569,"byte_end":6858587,"line_start":5,"line_end":5,"column_start":1,"column_end":19}}]},{"kind":"Type","id":{"krate":0,"index":46},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\encoder.rs","byte_start":6858669,"byte_end":6858673,"line_start":8,"line_end":8,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::encoder::Encoder::Item","value":"type Item;","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":" The type of items consumed by the `Encoder`\n","sig":null,"attributes":[{"value":"/ The type of items consumed by the `Encoder`","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\encoder.rs","byte_start":6858612,"byte_end":6858659,"line_start":7,"line_end":7,"column_start":5,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\encoder.rs","byte_start":6858871,"byte_end":6858876,"line_start":14,"line_end":14,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::encoder::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\encoder.rs","byte_start":6858680,"byte_end":6858712,"line_start":10,"line_end":10,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\encoder.rs","byte_start":6858717,"byte_end":6858720,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ `FramedWrite` requires `Encoder`s errors to implement `From<io::Error>`","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\encoder.rs","byte_start":6858725,"byte_end":6858800,"line_start":12,"line_end":12,"column_start":5,"column_end":80}},{"value":"/ in the interest letting it return `Error`s directly.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\encoder.rs","byte_start":6858805,"byte_end":6858861,"line_start":13,"line_end":13,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\encoder.rs","byte_start":6859161,"byte_end":6859167,"line_start":21,"line_end":21,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::encoder::Encoder::encode","value":"fn (&mut self, item: Self::Item, dst: &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\encoder.rs","byte_start":6858900,"byte_end":6858945,"line_start":16,"line_end":16,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\encoder.rs","byte_start":6858950,"byte_end":6858953,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ This method will encode `item` into the byte buffer provided by `dst`.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\encoder.rs","byte_start":6858958,"byte_end":6859032,"line_start":18,"line_end":18,"column_start":5,"column_end":79}},{"value":"/ The `dst` provided is an internal buffer of the `Framed` instance and","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\encoder.rs","byte_start":6859037,"byte_end":6859110,"line_start":19,"line_end":19,"column_start":5,"column_end":78}},{"value":"/ will be written out when possible.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\encoder.rs","byte_start":6859115,"byte_end":6859153,"line_start":20,"line_end":20,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":772},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6860072,"byte_end":6860078,"line_start":23,"line_end":23,"column_start":16,"column_end":22},"name":"Framed","qualname":"::codec::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":775}],"decl_id":null,"docs":" A unified `Stream` and `Sink` interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6860514,"byte_end":6860516,"line_start":40,"line_end":40,"column_start":10,"column_end":12},"name":"Io","qualname":"::codec::framed::ProjectFuse::Io","value":"type Io;","parent":{"krate":0,"index":80},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":82},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6860527,"byte_end":6860532,"line_start":41,"line_end":41,"column_start":10,"column_end":15},"name":"Codec","qualname":"::codec::framed::ProjectFuse::Codec","value":"type Codec;","parent":{"krate":0,"index":80},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6862067,"byte_end":6862070,"line_start":81,"line_end":81,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"fn (inner: T, codec: U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a `Stream` and `Sink` interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a `Stream` and `Sink` interface for reading and writing to this","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6861006,"byte_end":6861082,"line_start":64,"line_end":64,"column_start":5,"column_end":81}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6861087,"byte_end":6861163,"line_start":65,"line_end":65,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6861168,"byte_end":6861171,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6861176,"byte_end":6861251,"line_start":67,"line_end":67,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6861256,"byte_end":6861326,"line_start":68,"line_end":68,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6861331,"byte_end":6861402,"line_start":69,"line_end":69,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6861407,"byte_end":6861479,"line_start":70,"line_end":70,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6861484,"byte_end":6861542,"line_start":71,"line_end":71,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6861547,"byte_end":6861550,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6861555,"byte_end":6861624,"line_start":73,"line_end":73,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6861629,"byte_end":6861704,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6861709,"byte_end":6861785,"line_start":75,"line_end":75,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6861790,"byte_end":6861812,"line_start":76,"line_end":76,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6861817,"byte_end":6861820,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6861825,"byte_end":6861898,"line_start":78,"line_end":78,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the `Framed` returned by this method, which will","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6861903,"byte_end":6861974,"line_start":79,"line_end":79,"column_start":5,"column_end":76}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6861979,"byte_end":6862055,"line_start":80,"line_end":80,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6863483,"byte_end":6863493,"line_start":109,"line_end":109,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"fn (parts: FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a `Stream` and `Sink` interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a `Stream` and `Sink` interface for reading and writing to this","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6862250,"byte_end":6862326,"line_start":89,"line_end":89,"column_start":5,"column_end":81}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6862331,"byte_end":6862407,"line_start":90,"line_end":90,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6862412,"byte_end":6862415,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6862420,"byte_end":6862495,"line_start":92,"line_end":92,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6862500,"byte_end":6862570,"line_start":93,"line_end":93,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6862575,"byte_end":6862646,"line_start":94,"line_end":94,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6862651,"byte_end":6862723,"line_start":95,"line_end":95,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6862728,"byte_end":6862786,"line_start":96,"line_end":96,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6862791,"byte_end":6862794,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6862799,"byte_end":6862868,"line_start":98,"line_end":98,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6862873,"byte_end":6862948,"line_start":99,"line_end":99,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6862953,"byte_end":6863029,"line_start":100,"line_end":100,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6863034,"byte_end":6863056,"line_start":101,"line_end":101,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6863061,"byte_end":6863064,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6863069,"byte_end":6863148,"line_start":103,"line_end":103,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the `into_parts` method.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6863153,"byte_end":6863228,"line_start":104,"line_end":104,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6863233,"byte_end":6863236,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6863241,"byte_end":6863314,"line_start":106,"line_end":106,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the `Framed` returned by this method, which will","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6863319,"byte_end":6863390,"line_start":107,"line_end":107,"column_start":5,"column_end":76}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6863395,"byte_end":6863471,"line_start":108,"line_end":108,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6864181,"byte_end":6864188,"line_start":130,"line_end":130,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Frame`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6863899,"byte_end":6863962,"line_start":124,"line_end":124,"column_start":5,"column_end":68}},{"value":"/ `Frame`.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6863967,"byte_end":6863979,"line_start":125,"line_end":125,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6863984,"byte_end":6863987,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6863992,"byte_end":6864067,"line_start":127,"line_end":127,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6864072,"byte_end":6864142,"line_start":128,"line_end":128,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6864147,"byte_end":6864169,"line_start":129,"line_end":129,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6864548,"byte_end":6864555,"line_start":140,"line_end":140,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Frame`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6864258,"byte_end":6864329,"line_start":134,"line_end":134,"column_start":5,"column_end":76}},{"value":"/ `Frame`.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6864334,"byte_end":6864346,"line_start":135,"line_end":135,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6864351,"byte_end":6864354,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6864359,"byte_end":6864434,"line_start":137,"line_end":137,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6864439,"byte_end":6864509,"line_start":138,"line_end":138,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6864514,"byte_end":6864536,"line_start":139,"line_end":139,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6864887,"byte_end":6864892,"line_start":149,"line_end":149,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"fn (&self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Frame`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6864637,"byte_end":6864695,"line_start":144,"line_end":144,"column_start":5,"column_end":63}},{"value":"/ `Frame`.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6864700,"byte_end":6864712,"line_start":145,"line_end":145,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6864717,"byte_end":6864720,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6864725,"byte_end":6864799,"line_start":147,"line_end":147,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6864804,"byte_end":6864875,"line_start":148,"line_end":148,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6865223,"byte_end":6865232,"line_start":158,"line_end":158,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"fn (&mut self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Frame`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6864965,"byte_end":6865031,"line_start":153,"line_end":153,"column_start":5,"column_end":71}},{"value":"/ `Frame`.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6865036,"byte_end":6865048,"line_start":154,"line_end":154,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6865053,"byte_end":6865056,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6865061,"byte_end":6865135,"line_start":156,"line_end":156,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6865140,"byte_end":6865211,"line_start":157,"line_end":157,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6865372,"byte_end":6865383,"line_start":163,"line_end":163,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<Framed<T, U>>::read_buffer","value":"fn (&self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6865317,"byte_end":6865360,"line_start":162,"line_end":162,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6865709,"byte_end":6865719,"line_start":172,"line_end":172,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Frame`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Frame`, returning its underlying I/O stream.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6865445,"byte_end":6865507,"line_start":167,"line_end":167,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6865512,"byte_end":6865515,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6865520,"byte_end":6865595,"line_start":169,"line_end":169,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6865600,"byte_end":6865670,"line_start":170,"line_end":170,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6865675,"byte_end":6865697,"line_start":171,"line_end":171,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6866113,"byte_end":6866123,"line_start":182,"line_end":182,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"fn (self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Frame`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Frame`, returning its underlying I/O stream, the buffer","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6865792,"byte_end":6865865,"line_start":176,"line_end":176,"column_start":5,"column_end":78}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6865870,"byte_end":6865911,"line_start":177,"line_end":177,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6865916,"byte_end":6865919,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6865924,"byte_end":6865999,"line_start":179,"line_end":179,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6866004,"byte_end":6866074,"line_start":180,"line_end":180,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6866079,"byte_end":6866101,"line_start":181,"line_end":181,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":481},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6870474,"byte_end":6870485,"line_start":342,"line_end":342,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::codec::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new `Framed` with a different codec.\n It contains all current buffers and the inner transport.\n","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6870242,"byte_end":6870313,"line_start":338,"line_end":338,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new `Framed` with a different codec.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6870314,"byte_end":6870384,"line_start":339,"line_end":339,"column_start":1,"column_end":71}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6870385,"byte_end":6870445,"line_start":340,"line_end":340,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":484},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6870571,"byte_end":6870573,"line_start":344,"line_end":344,"column_start":9,"column_end":11},"name":"io","qualname":"::codec::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6870498,"byte_end":6870562,"line_start":343,"line_end":343,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":485},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6870605,"byte_end":6870610,"line_start":347,"line_end":347,"column_start":9,"column_end":14},"name":"codec","qualname":"::codec::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6870583,"byte_end":6870596,"line_start":346,"line_end":346,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":486},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6870675,"byte_end":6870683,"line_start":350,"line_end":350,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::codec::framed::FramedParts::read_buf","value":"bytes::bytes_mut::BytesMut","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6870620,"byte_end":6870666,"line_start":349,"line_end":349,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":487},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6870770,"byte_end":6870779,"line_start":353,"line_end":353,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::codec::framed::FramedParts::write_buf","value":"bytes::bytes_mut::BytesMut","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6870700,"byte_end":6870761,"line_start":352,"line_end":352,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6871012,"byte_end":6871015,"line_start":362,"line_end":362,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"fn (io: T, codec: U) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6870960,"byte_end":6871000,"line_start":361,"line_end":361,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":686},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_read.rs","byte_start":6871614,"byte_end":6871624,"line_start":17,"line_end":17,"column_start":16,"column_end":26},"name":"FramedRead","qualname":"::codec::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":689}],"decl_id":null,"docs":" A `Stream` of messages decoded from an `AsyncRead`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_read.rs","byte_start":6872082,"byte_end":6872085,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"fn (inner: T, decoder: D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_read.rs","byte_start":6872014,"byte_end":6872070,"line_start":42,"line_end":42,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_read.rs","byte_start":6872605,"byte_end":6872612,"line_start":60,"line_end":60,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_read.rs","byte_start":6872318,"byte_end":6872381,"line_start":54,"line_end":54,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_read.rs","byte_start":6872386,"byte_end":6872403,"line_start":55,"line_end":55,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_read.rs","byte_start":6872408,"byte_end":6872411,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_read.rs","byte_start":6872416,"byte_end":6872491,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_read.rs","byte_start":6872496,"byte_end":6872566,"line_start":58,"line_end":58,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_read.rs","byte_start":6872571,"byte_end":6872593,"line_start":59,"line_end":59,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_read.rs","byte_start":6872963,"byte_end":6872970,"line_start":70,"line_end":70,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_read.rs","byte_start":6872668,"byte_end":6872739,"line_start":64,"line_end":64,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_read.rs","byte_start":6872744,"byte_end":6872761,"line_start":65,"line_end":65,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_read.rs","byte_start":6872766,"byte_end":6872769,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_read.rs","byte_start":6872774,"byte_end":6872849,"line_start":67,"line_end":67,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_read.rs","byte_start":6872854,"byte_end":6872924,"line_start":68,"line_end":68,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_read.rs","byte_start":6872929,"byte_end":6872951,"line_start":69,"line_end":69,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_read.rs","byte_start":6873307,"byte_end":6873317,"line_start":79,"line_end":79,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_read.rs","byte_start":6873038,"byte_end":6873105,"line_start":74,"line_end":74,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_read.rs","byte_start":6873110,"byte_end":6873113,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_read.rs","byte_start":6873118,"byte_end":6873193,"line_start":76,"line_end":76,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_read.rs","byte_start":6873198,"byte_end":6873268,"line_start":77,"line_end":77,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_read.rs","byte_start":6873273,"byte_end":6873295,"line_start":78,"line_end":78,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_read.rs","byte_start":6873432,"byte_end":6873439,"line_start":84,"line_end":84,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"fn (&self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_read.rs","byte_start":6873370,"byte_end":6873420,"line_start":83,"line_end":83,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_read.rs","byte_start":6873568,"byte_end":6873579,"line_start":89,"line_end":89,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"fn (&mut self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_read.rs","byte_start":6873498,"byte_end":6873556,"line_start":88,"line_end":88,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_read.rs","byte_start":6873705,"byte_end":6873716,"line_start":94,"line_end":94,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<FramedRead<T, D>>::read_buffer","value":"fn (&self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_read.rs","byte_start":6873650,"byte_end":6873693,"line_start":93,"line_end":93,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":600},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_write.rs","byte_start":6879559,"byte_end":6879570,"line_start":20,"line_end":20,"column_start":16,"column_end":27},"name":"FramedWrite","qualname":"::codec::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":603}],"decl_id":null,"docs":" A `Sink` of frames encoded to an `AsyncWrite`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_write.rs","byte_start":6880010,"byte_end":6880013,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"fn (inner: T, encoder: E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_write.rs","byte_start":6879941,"byte_end":6879998,"line_start":42,"line_end":42,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_write.rs","byte_start":6880538,"byte_end":6880545,"line_start":60,"line_end":60,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_write.rs","byte_start":6880250,"byte_end":6880313,"line_start":54,"line_end":54,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_write.rs","byte_start":6880318,"byte_end":6880336,"line_start":55,"line_end":55,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_write.rs","byte_start":6880341,"byte_end":6880344,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_write.rs","byte_start":6880349,"byte_end":6880424,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_write.rs","byte_start":6880429,"byte_end":6880499,"line_start":58,"line_end":58,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_write.rs","byte_start":6880504,"byte_end":6880526,"line_start":59,"line_end":59,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_write.rs","byte_start":6880897,"byte_end":6880904,"line_start":70,"line_end":70,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_write.rs","byte_start":6880601,"byte_end":6880672,"line_start":64,"line_end":64,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_write.rs","byte_start":6880677,"byte_end":6880695,"line_start":65,"line_end":65,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_write.rs","byte_start":6880700,"byte_end":6880703,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_write.rs","byte_start":6880708,"byte_end":6880783,"line_start":67,"line_end":67,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_write.rs","byte_start":6880788,"byte_end":6880858,"line_start":68,"line_end":68,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_write.rs","byte_start":6880863,"byte_end":6880885,"line_start":69,"line_end":69,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_write.rs","byte_start":6881242,"byte_end":6881252,"line_start":79,"line_end":79,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_write.rs","byte_start":6880972,"byte_end":6881040,"line_start":74,"line_end":74,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_write.rs","byte_start":6881045,"byte_end":6881048,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_write.rs","byte_start":6881053,"byte_end":6881128,"line_start":76,"line_end":76,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_write.rs","byte_start":6881133,"byte_end":6881203,"line_start":77,"line_end":77,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_write.rs","byte_start":6881208,"byte_end":6881230,"line_start":78,"line_end":78,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_write.rs","byte_start":6881367,"byte_end":6881374,"line_start":84,"line_end":84,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"fn (&self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_write.rs","byte_start":6881305,"byte_end":6881355,"line_start":83,"line_end":83,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_write.rs","byte_start":6881503,"byte_end":6881514,"line_start":89,"line_end":89,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"fn (&mut self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_write.rs","byte_start":6881433,"byte_end":6881491,"line_start":88,"line_end":88,"column_start":5,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":342},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"length_delimited","qualname":"::codec::length_delimited","value":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","parent":null,"children":[{"krate":0,"index":343},{"krate":0,"index":349},{"krate":0,"index":352},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":361},{"krate":0,"index":493},{"krate":0,"index":503},{"krate":0,"index":501},{"krate":0,"index":500},{"krate":0,"index":364},{"krate":0,"index":505},{"krate":0,"index":508},{"krate":0,"index":510},{"krate":0,"index":519},{"krate":0,"index":517},{"krate":0,"index":516},{"krate":0,"index":366},{"krate":0,"index":373},{"krate":0,"index":377},{"krate":0,"index":382},{"krate":0,"index":384},{"krate":0,"index":403},{"krate":0,"index":405},{"krate":0,"index":407},{"krate":0,"index":409}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"! Frame a stream of bytes based on a length prefix","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6887954,"byte_end":6888006,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6888007,"byte_end":6888010,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6888011,"byte_end":6888081,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"! frame head that specifies the length of the frame. The","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6888082,"byte_end":6888140,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"! `length_delimited` module provides utilities for handling the length","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6888141,"byte_end":6888213,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"! based framing. This allows the consumer to work with entire frames","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6888214,"byte_end":6888284,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"! without having to worry about buffering or other framing logic.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6888285,"byte_end":6888352,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6888353,"byte_end":6888356,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! # Getting started","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6888357,"byte_end":6888378,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6888379,"byte_end":6888382,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6888383,"byte_end":6888458,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"! is an easy way to get started. [`LengthDelimitedCodec::new()`] will","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6888459,"byte_end":6888530,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"! return a length delimited codec using default configuration values.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6888531,"byte_end":6888602,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"! This can then be used to construct a framer to adapt a full-duplex","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6888603,"byte_end":6888673,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"! byte stream into a stream of frames.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6888674,"byte_end":6888714,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6888715,"byte_end":6888718,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6888719,"byte_end":6888726,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"! use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6888727,"byte_end":6888770,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"! use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6888771,"byte_end":6888829,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6888830,"byte_end":6888833,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6888834,"byte_end":6888889,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"!     -> Framed<T, LengthDelimitedCodec>","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6888890,"byte_end":6888932,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"! {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6888933,"byte_end":6888938,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"!     Framed::new(io, LengthDelimitedCodec::new())","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6888939,"byte_end":6888991,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"! }","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6888992,"byte_end":6888997,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"! # pub fn main() {}","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6888998,"byte_end":6889020,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"! ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6889021,"byte_end":6889028,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6889029,"byte_end":6889032,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6889033,"byte_end":6889105,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"! encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6889106,"byte_end":6889177,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"! payload length:","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6889178,"byte_end":6889197,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6889198,"byte_end":6889201,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6889202,"byte_end":6889213,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"! +----------+--------------------------------+","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6889214,"byte_end":6889263,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"! | len: u32 |          frame payload         |","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6889264,"byte_end":6889313,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"! +----------+--------------------------------+","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6889314,"byte_end":6889363,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"! ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6889364,"byte_end":6889371,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6889372,"byte_end":6889375,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! Specifically, given the following:","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6889376,"byte_end":6889414,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6889415,"byte_end":6889418,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6889419,"byte_end":6889426,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"! use tokio::prelude::*;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6889427,"byte_end":6889453,"line_start":42,"line_end":42,"column_start":1,"column_end":27}},{"value":"! use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6889454,"byte_end":6889512,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6889513,"byte_end":6889516,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! use futures::SinkExt;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6889517,"byte_end":6889542,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"! use bytes::Bytes;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6889543,"byte_end":6889564,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6889565,"byte_end":6889568,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"! async fn write_frame<T>(io: T) -> Result<(), Box<dyn std::error::Error>>","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6889569,"byte_end":6889645,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"! where","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6889646,"byte_end":6889655,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"!     T: AsyncRead + AsyncWrite + Unpin,","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6889656,"byte_end":6889698,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"! {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6889699,"byte_end":6889704,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"!     let mut transport = Framed::new(io, LengthDelimitedCodec::new());","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6889705,"byte_end":6889778,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"!     let frame = Bytes::from(\"hello world\");","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6889779,"byte_end":6889826,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6889827,"byte_end":6889830,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"!     transport.send(frame).await?;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6889831,"byte_end":6889868,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"!     Ok(())","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6889869,"byte_end":6889883,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6889884,"byte_end":6889889,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6889890,"byte_end":6889897,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6889898,"byte_end":6889901,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"! The encoded frame will look like this:","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6889902,"byte_end":6889944,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6889945,"byte_end":6889948,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6889949,"byte_end":6889960,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"! +---- len: u32 ----+---- data ----+","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6889961,"byte_end":6890000,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"! | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6890001,"byte_end":6890040,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"! +------------------+--------------+","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6890041,"byte_end":6890080,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"! ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6890081,"byte_end":6890088,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6890089,"byte_end":6890092,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"! # Decoding","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6890093,"byte_end":6890107,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6890108,"byte_end":6890111,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"! [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6890112,"byte_end":6890187,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"! such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6890188,"byte_end":6890261,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"! entire frame. There are many configuration parameters enabling","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6890262,"byte_end":6890328,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"! [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6890329,"byte_end":6890398,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"! examples that will cover the various options at a high level.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6890399,"byte_end":6890464,"line_start":74,"line_end":74,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6890465,"byte_end":6890468,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"! ## Example 1","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6890469,"byte_end":6890485,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6890486,"byte_end":6890489,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"! The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6890490,"byte_end":6890566,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"! frame head in the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6890567,"byte_end":6890608,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6890609,"byte_end":6890612,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6890613,"byte_end":6890620,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"! # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6890621,"byte_end":6890652,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"! # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6890653,"byte_end":6890703,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"! # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6890704,"byte_end":6890745,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"! LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6890746,"byte_end":6890781,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"!     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6890782,"byte_end":6890830,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"!     .length_field_length(2)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6890831,"byte_end":6890862,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"!     .length_adjustment(0)   // default value","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6890863,"byte_end":6890911,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"!     .num_skip(0) // Do not strip frame header","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6890912,"byte_end":6890961,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"!     .new_read(io);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6890962,"byte_end":6890984,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"! # }","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6890985,"byte_end":6890992,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"! # pub fn main() {}","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6890993,"byte_end":6891015,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"! ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6891016,"byte_end":6891023,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6891024,"byte_end":6891027,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"! The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6891028,"byte_end":6891076,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6891077,"byte_end":6891080,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6891081,"byte_end":6891092,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"!          INPUT                           DECODED","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6891093,"byte_end":6891145,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"! +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6891146,"byte_end":6891211,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"! | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6891212,"byte_end":6891277,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"! +----------+---------------+     +----------+---------------+","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6891278,"byte_end":6891343,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"! ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6891344,"byte_end":6891351,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6891352,"byte_end":6891355,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"! The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6891356,"byte_end":6891432,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"! of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6891433,"byte_end":6891507,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"! the length field represents the number of bytes that **follows** the","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6891508,"byte_end":6891580,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"! length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6891581,"byte_end":6891657,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"! frame head + 11 bytes for the payload.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6891658,"byte_end":6891700,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6891701,"byte_end":6891704,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"! ## Example 2","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6891705,"byte_end":6891721,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6891722,"byte_end":6891725,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"! The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6891726,"byte_end":6891801,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"! frame head in the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6891802,"byte_end":6891843,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6891844,"byte_end":6891847,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6891848,"byte_end":6891855,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"! # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6891856,"byte_end":6891887,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"! # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6891888,"byte_end":6891938,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"! # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6891939,"byte_end":6891980,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"! LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6891981,"byte_end":6892016,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"!     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6892017,"byte_end":6892065,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"!     .length_field_length(2)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6892066,"byte_end":6892097,"line_start":121,"line_end":121,"column_start":1,"column_end":32}},{"value":"!     .length_adjustment(0)   // default value","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6892098,"byte_end":6892146,"line_start":122,"line_end":122,"column_start":1,"column_end":49}},{"value":"!     // `num_skip` is not needed, the default is to skip","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6892147,"byte_end":6892206,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"!     .new_read(io);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6892207,"byte_end":6892229,"line_start":124,"line_end":124,"column_start":1,"column_end":23}},{"value":"! # }","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6892230,"byte_end":6892237,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"! # pub fn main() {}","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6892238,"byte_end":6892260,"line_start":126,"line_end":126,"column_start":1,"column_end":23}},{"value":"! ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6892261,"byte_end":6892268,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6892269,"byte_end":6892272,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"! The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6892273,"byte_end":6892321,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6892322,"byte_end":6892325,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6892326,"byte_end":6892337,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"!          INPUT                        DECODED","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6892338,"byte_end":6892387,"line_start":132,"line_end":132,"column_start":1,"column_end":50}},{"value":"! +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6892388,"byte_end":6892442,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"! | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6892443,"byte_end":6892497,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"! +----------+---------------+     +---------------+","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6892498,"byte_end":6892552,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"! ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6892553,"byte_end":6892560,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6892561,"byte_end":6892564,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"! This is similar to the first example, the only difference is that the","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6892565,"byte_end":6892638,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"! frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6892639,"byte_end":6892706,"line_start":139,"line_end":139,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6892707,"byte_end":6892710,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"! ## Example 3","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6892711,"byte_end":6892727,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6892728,"byte_end":6892731,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"! The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6892732,"byte_end":6892808,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"! frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6892809,"byte_end":6892881,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"! **includes** the frame head length.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6892882,"byte_end":6892921,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6892922,"byte_end":6892925,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6892926,"byte_end":6892933,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"! # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6892934,"byte_end":6892965,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"! # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6892966,"byte_end":6893016,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"! # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6893017,"byte_end":6893058,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"! LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6893059,"byte_end":6893094,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"!     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6893095,"byte_end":6893143,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"!     .length_field_length(2)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6893144,"byte_end":6893175,"line_start":153,"line_end":153,"column_start":1,"column_end":32}},{"value":"!     .length_adjustment(-2)  // size of head","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6893176,"byte_end":6893223,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"!     .num_skip(0)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6893224,"byte_end":6893244,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"!     .new_read(io);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6893245,"byte_end":6893267,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"! # }","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6893268,"byte_end":6893275,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"! # pub fn main() {}","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6893276,"byte_end":6893298,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"! ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6893299,"byte_end":6893306,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6893307,"byte_end":6893310,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"! The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6893311,"byte_end":6893359,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6893360,"byte_end":6893363,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6893364,"byte_end":6893375,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"!          INPUT                           DECODED","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6893376,"byte_end":6893428,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"! +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6893429,"byte_end":6893494,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"! | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6893495,"byte_end":6893560,"line_start":166,"line_end":166,"column_start":1,"column_end":66}},{"value":"! +----------+---------------+     +----------+---------------+","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6893561,"byte_end":6893626,"line_start":167,"line_end":167,"column_start":1,"column_end":66}},{"value":"! ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6893627,"byte_end":6893634,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6893635,"byte_end":6893638,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"! In most cases, the length field represents the length of the payload","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6893639,"byte_end":6893711,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"! only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6893712,"byte_end":6893787,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"! length field represents the length of the whole frame, including the","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6893788,"byte_end":6893860,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"! head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6893861,"byte_end":6893937,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"! the value provided in the frame head to represent the payload length.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6893938,"byte_end":6894011,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6894012,"byte_end":6894015,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"! ## Example 4","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6894016,"byte_end":6894032,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6894033,"byte_end":6894036,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"! The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6894037,"byte_end":6894111,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"! frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6894112,"byte_end":6894179,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6894180,"byte_end":6894183,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6894184,"byte_end":6894191,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"! # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6894192,"byte_end":6894223,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"! # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6894224,"byte_end":6894274,"line_start":183,"line_end":183,"column_start":1,"column_end":51}},{"value":"! # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6894275,"byte_end":6894316,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"! LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6894317,"byte_end":6894352,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"!     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6894353,"byte_end":6894401,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"!     .length_field_length(3)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6894402,"byte_end":6894433,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"!     .length_adjustment(2)  // remaining head","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6894434,"byte_end":6894482,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"!     .num_skip(0)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6894483,"byte_end":6894503,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"!     .new_read(io);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6894504,"byte_end":6894526,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"! # }","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6894527,"byte_end":6894534,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"! # pub fn main() {}","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6894535,"byte_end":6894557,"line_start":192,"line_end":192,"column_start":1,"column_end":23}},{"value":"! ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6894558,"byte_end":6894565,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6894566,"byte_end":6894569,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"! The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6894570,"byte_end":6894618,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6894619,"byte_end":6894622,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6894623,"byte_end":6894634,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"!                  INPUT","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6894635,"byte_end":6894661,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"! +---- len -----+- head -+--- Payload ---+","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6894662,"byte_end":6894707,"line_start":199,"line_end":199,"column_start":1,"column_end":46}},{"value":"! | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6894708,"byte_end":6894753,"line_start":200,"line_end":200,"column_start":1,"column_end":46}},{"value":"! +--------------+--------+---------------+","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6894754,"byte_end":6894799,"line_start":201,"line_end":201,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6894800,"byte_end":6894803,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"!                  DECODED","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6894804,"byte_end":6894832,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"! +---- len -----+- head -+--- Payload ---+","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6894833,"byte_end":6894878,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"! | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6894879,"byte_end":6894924,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"! +--------------+--------+---------------+","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6894925,"byte_end":6894970,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"! ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6894971,"byte_end":6894978,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6894979,"byte_end":6894982,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"! A more advanced example that shows a case where there is extra frame","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6894983,"byte_end":6895055,"line_start":209,"line_end":209,"column_start":1,"column_end":73}},{"value":"! head data between the length field and the payload. In such cases, it is","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6895056,"byte_end":6895132,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"! usually desirable to include the frame head as part of the yielded","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6895133,"byte_end":6895203,"line_start":211,"line_end":211,"column_start":1,"column_end":71}},{"value":"! `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6895204,"byte_end":6895273,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"! process the frame head as needed.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6895274,"byte_end":6895311,"line_start":213,"line_end":213,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6895312,"byte_end":6895315,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"! The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6895316,"byte_end":6895390,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"! additional head into the frame length calculation.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6895391,"byte_end":6895445,"line_start":216,"line_end":216,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6895446,"byte_end":6895449,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"! ## Example 5","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6895450,"byte_end":6895466,"line_start":218,"line_end":218,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6895467,"byte_end":6895470,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"! The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6895471,"byte_end":6895544,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"! frame head. The first byte and the length field will be omitted from the","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6895545,"byte_end":6895621,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"! yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6895622,"byte_end":6895696,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"! included.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6895697,"byte_end":6895710,"line_start":223,"line_end":223,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6895711,"byte_end":6895714,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6895715,"byte_end":6895722,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"! # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6895723,"byte_end":6895754,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"! # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6895755,"byte_end":6895805,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"! # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6895806,"byte_end":6895847,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"! LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6895848,"byte_end":6895883,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"!     .length_field_offset(1) // length of hdr1","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6895884,"byte_end":6895933,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"!     .length_field_length(2)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6895934,"byte_end":6895965,"line_start":231,"line_end":231,"column_start":1,"column_end":32}},{"value":"!     .length_adjustment(1)  // length of hdr2","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6895966,"byte_end":6896014,"line_start":232,"line_end":232,"column_start":1,"column_end":49}},{"value":"!     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6896015,"byte_end":6896059,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"!     .new_read(io);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6896060,"byte_end":6896082,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"! # }","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6896083,"byte_end":6896090,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"! # pub fn main() {}","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6896091,"byte_end":6896113,"line_start":236,"line_end":236,"column_start":1,"column_end":23}},{"value":"! ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6896114,"byte_end":6896121,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6896122,"byte_end":6896125,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"! The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6896126,"byte_end":6896174,"line_start":239,"line_end":239,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6896175,"byte_end":6896178,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6896179,"byte_end":6896190,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"!                  INPUT","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6896191,"byte_end":6896217,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"! +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6896218,"byte_end":6896268,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"! |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6896269,"byte_end":6896319,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"! +--------+----------+--------+---------------+","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6896320,"byte_end":6896370,"line_start":245,"line_end":245,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6896371,"byte_end":6896374,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"!          DECODED","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6896375,"byte_end":6896395,"line_start":247,"line_end":247,"column_start":1,"column_end":21}},{"value":"! +- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6896396,"byte_end":6896426,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"! |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6896427,"byte_end":6896457,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"! +--------+---------------+","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6896458,"byte_end":6896488,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"! ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6896489,"byte_end":6896496,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6896497,"byte_end":6896500,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"! The length field is situated in the middle of the frame head. In this","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6896501,"byte_end":6896574,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"! case, the first byte in the frame head could be a version or some other","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6896575,"byte_end":6896650,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"! identifier that is not needed for processing. On the other hand, the","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6896651,"byte_end":6896723,"line_start":255,"line_end":255,"column_start":1,"column_end":73}},{"value":"! second half of the head is needed.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6896724,"byte_end":6896762,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6896763,"byte_end":6896766,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"! `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6896767,"byte_end":6896841,"line_start":258,"line_end":258,"column_start":1,"column_end":75}},{"value":"! to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6896842,"byte_end":6896918,"line_start":259,"line_end":259,"column_start":1,"column_end":77}},{"value":"! skip starting at the end of the length field. In this case, it is the","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6896919,"byte_end":6896992,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"! second half of the head.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6896993,"byte_end":6897021,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6897022,"byte_end":6897025,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"! ## Example 6","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6897026,"byte_end":6897042,"line_start":263,"line_end":263,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6897043,"byte_end":6897046,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"! The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6897047,"byte_end":6897120,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"! frame head. The first byte and the length field will be omitted from the","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6897121,"byte_end":6897197,"line_start":266,"line_end":266,"column_start":1,"column_end":77}},{"value":"! yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6897198,"byte_end":6897272,"line_start":267,"line_end":267,"column_start":1,"column_end":75}},{"value":"! included. In this case, the length field **includes** the frame head","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6897273,"byte_end":6897345,"line_start":268,"line_end":268,"column_start":1,"column_end":73}},{"value":"! length.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6897346,"byte_end":6897357,"line_start":269,"line_end":269,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6897358,"byte_end":6897361,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6897362,"byte_end":6897369,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"! # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6897370,"byte_end":6897401,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"! # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6897402,"byte_end":6897452,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"! # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6897453,"byte_end":6897494,"line_start":274,"line_end":274,"column_start":1,"column_end":42}},{"value":"! LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6897495,"byte_end":6897530,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"!     .length_field_offset(1) // length of hdr1","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6897531,"byte_end":6897580,"line_start":276,"line_end":276,"column_start":1,"column_end":50}},{"value":"!     .length_field_length(2)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6897581,"byte_end":6897612,"line_start":277,"line_end":277,"column_start":1,"column_end":32}},{"value":"!     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6897613,"byte_end":6897678,"line_start":278,"line_end":278,"column_start":1,"column_end":66}},{"value":"!     .num_skip(3)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6897679,"byte_end":6897699,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"!     .new_read(io);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6897700,"byte_end":6897722,"line_start":280,"line_end":280,"column_start":1,"column_end":23}},{"value":"! # }","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6897723,"byte_end":6897730,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6897731,"byte_end":6897738,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6897739,"byte_end":6897742,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"! The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6897743,"byte_end":6897791,"line_start":284,"line_end":284,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6897792,"byte_end":6897795,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6897796,"byte_end":6897807,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"!                  INPUT","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6897808,"byte_end":6897834,"line_start":287,"line_end":287,"column_start":1,"column_end":27}},{"value":"! +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6897835,"byte_end":6897885,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"! |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6897886,"byte_end":6897936,"line_start":289,"line_end":289,"column_start":1,"column_end":51}},{"value":"! +--------+----------+--------+---------------+","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6897937,"byte_end":6897987,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6897988,"byte_end":6897991,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"!          DECODED","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6897992,"byte_end":6898012,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"! +- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6898013,"byte_end":6898043,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"! |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6898044,"byte_end":6898074,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"! +--------+---------------+","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6898075,"byte_end":6898105,"line_start":295,"line_end":295,"column_start":1,"column_end":31}},{"value":"! ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6898106,"byte_end":6898113,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6898114,"byte_end":6898117,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"! Similar to the example above, the difference is that the length field","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6898118,"byte_end":6898191,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"! represents the length of the entire frame instead of just the payload.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6898192,"byte_end":6898266,"line_start":299,"line_end":299,"column_start":1,"column_end":75}},{"value":"! The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6898267,"byte_end":6898341,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"! Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6898342,"byte_end":6898415,"line_start":301,"line_end":301,"column_start":1,"column_end":74}},{"value":"! anywhere because it already is factored into the total frame length that","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6898416,"byte_end":6898492,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"! is read from the byte stream.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6898493,"byte_end":6898526,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6898527,"byte_end":6898530,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"! # Encoding","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6898531,"byte_end":6898545,"line_start":305,"line_end":305,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6898546,"byte_end":6898549,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"! [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6898550,"byte_end":6898625,"line_start":307,"line_end":307,"column_start":1,"column_end":76}},{"value":"! such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6898626,"byte_end":6898698,"line_start":308,"line_end":308,"column_start":1,"column_end":73}},{"value":"! There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6898699,"byte_end":6898767,"line_start":309,"line_end":309,"column_start":1,"column_end":69}},{"value":"! protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6898768,"byte_end":6898844,"line_start":310,"line_end":310,"column_start":1,"column_end":77}},{"value":"! be written by hand using [`Encoder`].","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6898845,"byte_end":6898886,"line_start":311,"line_end":311,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6898887,"byte_end":6898890,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"! Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6898891,"byte_end":6898961,"line_start":313,"line_end":313,"column_start":1,"column_end":71}},{"value":"! configuration:","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6898962,"byte_end":6898980,"line_start":314,"line_end":314,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6898981,"byte_end":6898984,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6898985,"byte_end":6898992,"line_start":316,"line_end":316,"column_start":1,"column_end":8}},{"value":"! # use tokio::io::AsyncWrite;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6898993,"byte_end":6899025,"line_start":317,"line_end":317,"column_start":1,"column_end":33}},{"value":"! # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6899026,"byte_end":6899076,"line_start":318,"line_end":318,"column_start":1,"column_end":51}},{"value":"! # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6899077,"byte_end":6899121,"line_start":319,"line_end":319,"column_start":1,"column_end":45}},{"value":"! # let _ =","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6899122,"byte_end":6899135,"line_start":320,"line_end":320,"column_start":1,"column_end":14}},{"value":"! LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6899136,"byte_end":6899171,"line_start":321,"line_end":321,"column_start":1,"column_end":36}},{"value":"!     .length_field_length(2)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6899172,"byte_end":6899203,"line_start":322,"line_end":322,"column_start":1,"column_end":32}},{"value":"!     .new_write(io);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6899204,"byte_end":6899227,"line_start":323,"line_end":323,"column_start":1,"column_end":24}},{"value":"! # }","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6899228,"byte_end":6899235,"line_start":324,"line_end":324,"column_start":1,"column_end":8}},{"value":"! # pub fn main() {}","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6899236,"byte_end":6899258,"line_start":325,"line_end":325,"column_start":1,"column_end":23}},{"value":"! ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6899259,"byte_end":6899266,"line_start":326,"line_end":326,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6899267,"byte_end":6899270,"line_start":327,"line_end":327,"column_start":1,"column_end":4}},{"value":"! A payload of `hello world` will be encoded as:","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6899271,"byte_end":6899321,"line_start":328,"line_end":328,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6899322,"byte_end":6899325,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6899326,"byte_end":6899337,"line_start":330,"line_end":330,"column_start":1,"column_end":12}},{"value":"! +- len: u16 -+---- data ----+","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6899338,"byte_end":6899371,"line_start":331,"line_end":331,"column_start":1,"column_end":34}},{"value":"! |  \\x00\\x0b  |  hello world |","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6899372,"byte_end":6899405,"line_start":332,"line_end":332,"column_start":1,"column_end":34}},{"value":"! +------------+--------------+","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6899406,"byte_end":6899439,"line_start":333,"line_end":333,"column_start":1,"column_end":34}},{"value":"! ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6899440,"byte_end":6899447,"line_start":334,"line_end":334,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6899448,"byte_end":6899451,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"! [`LengthDelimitedCodec::new()`]: struct.LengthDelimitedCodec.html#method.new","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6899452,"byte_end":6899532,"line_start":336,"line_end":336,"column_start":1,"column_end":81}},{"value":"! [`FramedRead`]: struct.FramedRead.html","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6899533,"byte_end":6899575,"line_start":337,"line_end":337,"column_start":1,"column_end":43}},{"value":"! [`FramedWrite`]: struct.FramedWrite.html","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6899576,"byte_end":6899620,"line_start":338,"line_end":338,"column_start":1,"column_end":45}},{"value":"! [`AsyncRead`]: ../../trait.AsyncRead.html","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6899621,"byte_end":6899666,"line_start":339,"line_end":339,"column_start":1,"column_end":46}},{"value":"! [`AsyncWrite`]: ../../trait.AsyncWrite.html","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6899667,"byte_end":6899714,"line_start":340,"line_end":340,"column_start":1,"column_end":48}},{"value":"! [`Encoder`]: ../trait.Encoder.html","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6899715,"byte_end":6899753,"line_start":341,"line_end":341,"column_start":1,"column_end":39}},{"value":"! [`BytesMut`]: https://docs.rs/bytes/0.4/bytes/struct.BytesMut.html","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6899754,"byte_end":6899824,"line_start":342,"line_end":342,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":493},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6900386,"byte_end":6900393,"line_start":359,"line_end":359,"column_start":12,"column_end":19},"name":"Builder","qualname":"::codec::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499}],"decl_id":null,"docs":" Configure length delimited `LengthDelimitedCodec`s.","sig":null,"attributes":[{"value":"/ Configure length delimited `LengthDelimitedCodec`s.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6900068,"byte_end":6900123,"line_start":353,"line_end":353,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6900124,"byte_end":6900127,"line_start":354,"line_end":354,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited codecs. Note","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6900128,"byte_end":6900203,"line_start":355,"line_end":355,"column_start":1,"column_end":76}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6900204,"byte_end":6900284,"line_start":356,"line_end":356,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6900285,"byte_end":6900344,"line_start":357,"line_end":357,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":364},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6901064,"byte_end":6901089,"line_start":381,"line_end":381,"column_start":12,"column_end":37},"name":"LengthDelimitedCodecError","qualname":"::codec::length_delimited::LengthDelimitedCodecError","value":"LengthDelimitedCodecError {  }","parent":null,"children":[{"krate":0,"index":365}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6900979,"byte_end":6901052,"line_start":380,"line_end":380,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":505},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6901434,"byte_end":6901454,"line_start":394,"line_end":394,"column_start":12,"column_end":32},"name":"LengthDelimitedCodec","qualname":"::codec::length_delimited::LengthDelimitedCodec","value":"LengthDelimitedCodec {  }","parent":null,"children":[{"krate":0,"index":506},{"krate":0,"index":507}],"decl_id":null,"docs":" A codec for frames delimited by a frame head specifying their lengths.","sig":null,"attributes":[{"value":"/ A codec for frames delimited by a frame head specifying their lengths.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6901110,"byte_end":6901184,"line_start":385,"line_end":385,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6901185,"byte_end":6901188,"line_start":386,"line_end":386,"column_start":1,"column_end":4}},{"value":"/ This allows the consumer to work with entire frames without having to worry","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6901189,"byte_end":6901268,"line_start":387,"line_end":387,"column_start":1,"column_end":80}},{"value":"/ about buffering or other framing logic.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6901269,"byte_end":6901312,"line_start":388,"line_end":388,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6901313,"byte_end":6901316,"line_start":389,"line_end":389,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6901317,"byte_end":6901370,"line_start":390,"line_end":390,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6901371,"byte_end":6901374,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6901375,"byte_end":6901405,"line_start":392,"line_end":392,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6901798,"byte_end":6901801,"line_start":412,"line_end":412,"column_start":12,"column_end":15},"name":"new","qualname":"<LengthDelimitedCodec>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LengthDelimitedCodec` with the default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `LengthDelimitedCodec` with the default configuration values.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6901707,"byte_end":6901786,"line_start":411,"line_end":411,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6902028,"byte_end":6902035,"line_start":421,"line_end":421,"column_start":12,"column_end":19},"name":"builder","qualname":"<LengthDelimitedCodec>::builder","value":"fn () -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.\n","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6901925,"byte_end":6902000,"line_start":419,"line_end":419,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6902005,"byte_end":6902016,"line_start":420,"line_end":420,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6902257,"byte_end":6902273,"line_start":429,"line_end":429,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<LengthDelimitedCodec>::max_frame_length","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6902085,"byte_end":6902126,"line_start":425,"line_end":425,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6902131,"byte_end":6902134,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6902139,"byte_end":6902212,"line_start":427,"line_end":427,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6902217,"byte_end":6902245,"line_start":428,"line_end":428,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6902694,"byte_end":6902714,"line_start":439,"line_end":439,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<LengthDelimitedCodec>::set_max_frame_length","value":"fn (&mut self, val: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6902338,"byte_end":6902372,"line_start":433,"line_end":433,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6902377,"byte_end":6902380,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6902385,"byte_end":6902455,"line_start":435,"line_end":435,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6902460,"byte_end":6902535,"line_start":436,"line_end":436,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6902540,"byte_end":6902612,"line_start":437,"line_end":437,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6902617,"byte_end":6902682,"line_start":438,"line_end":438,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6908024,"byte_end":6908027,"line_start":622,"line_end":622,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"fn () -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6907482,"byte_end":6907557,"line_start":603,"line_end":603,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6907562,"byte_end":6907573,"line_start":604,"line_end":604,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6907578,"byte_end":6907581,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6907586,"byte_end":6907600,"line_start":606,"line_end":606,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6907605,"byte_end":6907608,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6907613,"byte_end":6907620,"line_start":608,"line_end":608,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6907625,"byte_end":6907656,"line_start":609,"line_end":609,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6907661,"byte_end":6907709,"line_start":610,"line_end":610,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6907714,"byte_end":6907717,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6907722,"byte_end":6907763,"line_start":612,"line_end":612,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6907768,"byte_end":6907803,"line_start":613,"line_end":613,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6907808,"byte_end":6907839,"line_start":614,"line_end":614,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6907844,"byte_end":6907875,"line_start":615,"line_end":615,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6907880,"byte_end":6907909,"line_start":616,"line_end":616,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6907914,"byte_end":6907934,"line_start":617,"line_end":617,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6907939,"byte_end":6907961,"line_start":618,"line_end":618,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6907966,"byte_end":6907973,"line_start":619,"line_end":619,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6907978,"byte_end":6908000,"line_start":620,"line_end":620,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6908005,"byte_end":6908012,"line_start":621,"line_end":621,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6909212,"byte_end":6909222,"line_start":663,"line_end":663,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6908691,"byte_end":6908740,"line_start":644,"line_end":644,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6908745,"byte_end":6908748,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6908753,"byte_end":6908785,"line_start":646,"line_end":646,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6908790,"byte_end":6908793,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6908798,"byte_end":6908866,"line_start":648,"line_end":648,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6908871,"byte_end":6908874,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6908879,"byte_end":6908893,"line_start":650,"line_end":650,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6908898,"byte_end":6908901,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6908906,"byte_end":6908913,"line_start":652,"line_end":652,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6908918,"byte_end":6908949,"line_start":653,"line_end":653,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6908954,"byte_end":6909002,"line_start":654,"line_end":654,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6909007,"byte_end":6909010,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6909015,"byte_end":6909056,"line_start":656,"line_end":656,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6909061,"byte_end":6909096,"line_start":657,"line_end":657,"column_start":5,"column_end":40}},{"value":"/     .big_endian()","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6909101,"byte_end":6909122,"line_start":658,"line_end":658,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6909127,"byte_end":6909149,"line_start":659,"line_end":659,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6909154,"byte_end":6909161,"line_start":660,"line_end":660,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6909166,"byte_end":6909188,"line_start":661,"line_end":661,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6909193,"byte_end":6909200,"line_start":662,"line_end":662,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6909854,"byte_end":6909867,"line_start":687,"line_end":687,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6909321,"byte_end":6909373,"line_start":668,"line_end":668,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6909378,"byte_end":6909381,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6909386,"byte_end":6909424,"line_start":670,"line_end":670,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6909429,"byte_end":6909432,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6909437,"byte_end":6909505,"line_start":672,"line_end":672,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6909510,"byte_end":6909513,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6909518,"byte_end":6909532,"line_start":674,"line_end":674,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6909537,"byte_end":6909540,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6909545,"byte_end":6909552,"line_start":676,"line_end":676,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6909557,"byte_end":6909588,"line_start":677,"line_end":677,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6909593,"byte_end":6909641,"line_start":678,"line_end":678,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6909646,"byte_end":6909649,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6909654,"byte_end":6909695,"line_start":680,"line_end":680,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6909700,"byte_end":6909735,"line_start":681,"line_end":681,"column_start":5,"column_end":40}},{"value":"/     .little_endian()","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6909740,"byte_end":6909764,"line_start":682,"line_end":682,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6909769,"byte_end":6909791,"line_start":683,"line_end":683,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6909796,"byte_end":6909803,"line_start":684,"line_end":684,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6909808,"byte_end":6909830,"line_start":685,"line_end":685,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6909835,"byte_end":6909842,"line_start":686,"line_end":686,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6910500,"byte_end":6910513,"line_start":711,"line_end":711,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6909967,"byte_end":6910019,"line_start":692,"line_end":692,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6910024,"byte_end":6910027,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6910032,"byte_end":6910070,"line_start":694,"line_end":694,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6910075,"byte_end":6910078,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6910083,"byte_end":6910151,"line_start":696,"line_end":696,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6910156,"byte_end":6910159,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6910164,"byte_end":6910178,"line_start":698,"line_end":698,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6910183,"byte_end":6910186,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6910191,"byte_end":6910198,"line_start":700,"line_end":700,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6910203,"byte_end":6910234,"line_start":701,"line_end":701,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6910239,"byte_end":6910287,"line_start":702,"line_end":702,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6910292,"byte_end":6910295,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6910300,"byte_end":6910341,"line_start":704,"line_end":704,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6910346,"byte_end":6910381,"line_start":705,"line_end":705,"column_start":5,"column_end":40}},{"value":"/     .native_endian()","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6910386,"byte_end":6910410,"line_start":706,"line_end":706,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6910415,"byte_end":6910437,"line_start":707,"line_end":707,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6910442,"byte_end":6910449,"line_start":708,"line_end":708,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6910454,"byte_end":6910476,"line_start":709,"line_end":709,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6910481,"byte_end":6910488,"line_start":710,"line_end":710,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6911594,"byte_end":6911610,"line_start":745,"line_end":745,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"fn (&mut self, val: usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length","sig":null,"attributes":[{"value":"/ Sets the max frame length","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6910682,"byte_end":6910711,"line_start":719,"line_end":719,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6910716,"byte_end":6910719,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6910724,"byte_end":6910796,"line_start":721,"line_end":721,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6910801,"byte_end":6910826,"line_start":722,"line_end":722,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6910831,"byte_end":6910834,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6910839,"byte_end":6910911,"line_start":724,"line_end":724,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6910916,"byte_end":6910985,"line_start":725,"line_end":725,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6910990,"byte_end":6911063,"line_start":726,"line_end":726,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6911068,"byte_end":6911080,"line_start":727,"line_end":727,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6911085,"byte_end":6911088,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6911093,"byte_end":6911168,"line_start":729,"line_end":729,"column_start":5,"column_end":80}},{"value":"/ of the `LengthDelimitedCodecError` type will be returned.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6911173,"byte_end":6911234,"line_start":730,"line_end":730,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6911239,"byte_end":6911242,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6911247,"byte_end":6911261,"line_start":732,"line_end":732,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6911266,"byte_end":6911269,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6911274,"byte_end":6911281,"line_start":734,"line_end":734,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6911286,"byte_end":6911317,"line_start":735,"line_end":735,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6911322,"byte_end":6911370,"line_start":736,"line_end":736,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6911375,"byte_end":6911378,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6911383,"byte_end":6911424,"line_start":738,"line_end":738,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6911429,"byte_end":6911464,"line_start":739,"line_end":739,"column_start":5,"column_end":40}},{"value":"/     .max_frame_length(8 * 1024)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6911469,"byte_end":6911504,"line_start":740,"line_end":740,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6911509,"byte_end":6911531,"line_start":741,"line_end":741,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6911536,"byte_end":6911543,"line_start":742,"line_end":742,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6911548,"byte_end":6911570,"line_start":743,"line_end":743,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6911575,"byte_end":6911582,"line_start":744,"line_end":744,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6912271,"byte_end":6912290,"line_start":769,"line_end":769,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"fn (&mut self, val: usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6911707,"byte_end":6911770,"line_start":750,"line_end":750,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6911775,"byte_end":6911778,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6911783,"byte_end":6911834,"line_start":752,"line_end":752,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6911839,"byte_end":6911842,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6911847,"byte_end":6911915,"line_start":754,"line_end":754,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6911920,"byte_end":6911923,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6911928,"byte_end":6911942,"line_start":756,"line_end":756,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6911947,"byte_end":6911950,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6911955,"byte_end":6911962,"line_start":758,"line_end":758,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6911967,"byte_end":6911998,"line_start":759,"line_end":759,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6912003,"byte_end":6912051,"line_start":760,"line_end":760,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6912056,"byte_end":6912059,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6912064,"byte_end":6912105,"line_start":762,"line_end":762,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6912110,"byte_end":6912145,"line_start":763,"line_end":763,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(4)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6912150,"byte_end":6912181,"line_start":764,"line_end":764,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6912186,"byte_end":6912208,"line_start":765,"line_end":765,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6912213,"byte_end":6912220,"line_start":766,"line_end":766,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6912225,"byte_end":6912247,"line_start":767,"line_end":767,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6912252,"byte_end":6912259,"line_start":768,"line_end":768,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6912949,"byte_end":6912968,"line_start":792,"line_end":792,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"fn (&mut self, val: usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6912459,"byte_end":6912525,"line_start":775,"line_end":775,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6912530,"byte_end":6912533,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6912538,"byte_end":6912593,"line_start":777,"line_end":777,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6912598,"byte_end":6912601,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6912606,"byte_end":6912620,"line_start":779,"line_end":779,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6912625,"byte_end":6912628,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6912633,"byte_end":6912640,"line_start":781,"line_end":781,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6912645,"byte_end":6912676,"line_start":782,"line_end":782,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6912681,"byte_end":6912729,"line_start":783,"line_end":783,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6912734,"byte_end":6912737,"line_start":784,"line_end":784,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6912742,"byte_end":6912783,"line_start":785,"line_end":785,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6912788,"byte_end":6912823,"line_start":786,"line_end":786,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(1)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6912828,"byte_end":6912859,"line_start":787,"line_end":787,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6912864,"byte_end":6912886,"line_start":788,"line_end":788,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6912891,"byte_end":6912898,"line_start":789,"line_end":789,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6912903,"byte_end":6912925,"line_start":790,"line_end":790,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6912930,"byte_end":6912937,"line_start":791,"line_end":791,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6913522,"byte_end":6913539,"line_start":813,"line_end":813,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"fn (&mut self, val: isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6913071,"byte_end":6913144,"line_start":797,"line_end":797,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6913149,"byte_end":6913167,"line_start":798,"line_end":798,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6913172,"byte_end":6913175,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6913180,"byte_end":6913194,"line_start":800,"line_end":800,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6913199,"byte_end":6913202,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6913207,"byte_end":6913214,"line_start":802,"line_end":802,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6913219,"byte_end":6913250,"line_start":803,"line_end":803,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6913255,"byte_end":6913303,"line_start":804,"line_end":804,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6913308,"byte_end":6913311,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6913316,"byte_end":6913357,"line_start":806,"line_end":806,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6913362,"byte_end":6913397,"line_start":807,"line_end":807,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6913402,"byte_end":6913432,"line_start":808,"line_end":808,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6913437,"byte_end":6913459,"line_start":809,"line_end":809,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6913464,"byte_end":6913471,"line_start":810,"line_end":810,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6913476,"byte_end":6913498,"line_start":811,"line_end":811,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6913503,"byte_end":6913510,"line_start":812,"line_end":812,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6914189,"byte_end":6914197,"line_start":837,"line_end":837,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"fn (&mut self, val: usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6913640,"byte_end":6913703,"line_start":818,"line_end":818,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6913708,"byte_end":6913711,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6913716,"byte_end":6913777,"line_start":820,"line_end":820,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6913782,"byte_end":6913785,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6913790,"byte_end":6913844,"line_start":822,"line_end":822,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6913849,"byte_end":6913852,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6913857,"byte_end":6913871,"line_start":824,"line_end":824,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6913876,"byte_end":6913879,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6913884,"byte_end":6913891,"line_start":826,"line_end":826,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6913896,"byte_end":6913927,"line_start":827,"line_end":827,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6913932,"byte_end":6913980,"line_start":828,"line_end":828,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6913985,"byte_end":6913988,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6913993,"byte_end":6914034,"line_start":830,"line_end":830,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6914039,"byte_end":6914074,"line_start":831,"line_end":831,"column_start":5,"column_end":40}},{"value":"/     .num_skip(4)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6914079,"byte_end":6914099,"line_start":832,"line_end":832,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6914104,"byte_end":6914126,"line_start":833,"line_end":833,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6914131,"byte_end":6914138,"line_start":834,"line_end":834,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6914143,"byte_end":6914165,"line_start":835,"line_end":835,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6914170,"byte_end":6914177,"line_start":836,"line_end":836,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6914717,"byte_end":6914726,"line_start":857,"line_end":857,"column_start":12,"column_end":21},"name":"new_codec","qualname":"<Builder>::new_codec","value":"fn (&self) -> LengthDelimitedCodec","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `LengthDelimitedCodec`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `LengthDelimitedCodec`","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6914295,"byte_end":6914358,"line_start":842,"line_end":842,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6914363,"byte_end":6914366,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6914371,"byte_end":6914385,"line_start":844,"line_end":844,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6914390,"byte_end":6914393,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6914398,"byte_end":6914405,"line_start":846,"line_end":846,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6914410,"byte_end":6914458,"line_start":847,"line_end":847,"column_start":5,"column_end":53}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6914463,"byte_end":6914484,"line_start":848,"line_end":848,"column_start":5,"column_end":26}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6914489,"byte_end":6914524,"line_start":849,"line_end":849,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6914529,"byte_end":6914560,"line_start":850,"line_end":850,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6914565,"byte_end":6914596,"line_start":851,"line_end":851,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6914601,"byte_end":6914630,"line_start":852,"line_end":852,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6914635,"byte_end":6914655,"line_start":853,"line_end":853,"column_start":5,"column_end":25}},{"value":"/     .new_codec();","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6914660,"byte_end":6914681,"line_start":854,"line_end":854,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6914686,"byte_end":6914693,"line_start":855,"line_end":855,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6914698,"byte_end":6914705,"line_start":856,"line_end":856,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6915382,"byte_end":6915390,"line_start":882,"line_end":882,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"fn <T> (&self, upstream: T) -> FramedRead<T, LengthDelimitedCodec>","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6914878,"byte_end":6914931,"line_start":864,"line_end":864,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6914936,"byte_end":6914939,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6914944,"byte_end":6914958,"line_start":866,"line_end":866,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6914963,"byte_end":6914966,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6914971,"byte_end":6914978,"line_start":868,"line_end":868,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6914983,"byte_end":6915014,"line_start":869,"line_end":869,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6915019,"byte_end":6915067,"line_start":870,"line_end":870,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6915072,"byte_end":6915075,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6915080,"byte_end":6915121,"line_start":872,"line_end":872,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6915126,"byte_end":6915161,"line_start":873,"line_end":873,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6915166,"byte_end":6915197,"line_start":874,"line_end":874,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6915202,"byte_end":6915233,"line_start":875,"line_end":875,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6915238,"byte_end":6915267,"line_start":876,"line_end":876,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6915272,"byte_end":6915292,"line_start":877,"line_end":877,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6915297,"byte_end":6915319,"line_start":878,"line_end":878,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6915324,"byte_end":6915331,"line_start":879,"line_end":879,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6915336,"byte_end":6915358,"line_start":880,"line_end":880,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6915363,"byte_end":6915370,"line_start":881,"line_end":881,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6915963,"byte_end":6915972,"line_start":903,"line_end":903,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"fn <T> (&self, inner: T) -> FramedWrite<T, LengthDelimitedCodec>","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6915554,"byte_end":6915608,"line_start":889,"line_end":889,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6915613,"byte_end":6915616,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6915621,"byte_end":6915635,"line_start":891,"line_end":891,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6915640,"byte_end":6915643,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6915648,"byte_end":6915655,"line_start":893,"line_end":893,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6915660,"byte_end":6915692,"line_start":894,"line_end":894,"column_start":5,"column_end":37}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6915697,"byte_end":6915747,"line_start":895,"line_end":895,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6915752,"byte_end":6915796,"line_start":896,"line_end":896,"column_start":5,"column_end":49}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6915801,"byte_end":6915836,"line_start":897,"line_end":897,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6915841,"byte_end":6915872,"line_start":898,"line_end":898,"column_start":5,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6915877,"byte_end":6915900,"line_start":899,"line_end":899,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6915905,"byte_end":6915912,"line_start":900,"line_end":900,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6915917,"byte_end":6915939,"line_start":901,"line_end":901,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6915944,"byte_end":6915951,"line_start":902,"line_end":902,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6916581,"byte_end":6916591,"line_start":925,"line_end":925,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"fn <T> (&self, inner: T) -> Framed<T, LengthDelimitedCodec>","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6916133,"byte_end":6916182,"line_start":910,"line_end":910,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6916187,"byte_end":6916190,"line_start":911,"line_end":911,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6916195,"byte_end":6916209,"line_start":912,"line_end":912,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6916214,"byte_end":6916217,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6916222,"byte_end":6916229,"line_start":914,"line_end":914,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6916234,"byte_end":6916279,"line_start":915,"line_end":915,"column_start":5,"column_end":50}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6916284,"byte_end":6916334,"line_start":916,"line_end":916,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6916339,"byte_end":6916395,"line_start":917,"line_end":917,"column_start":5,"column_end":61}},{"value":"/ # let _ =","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6916400,"byte_end":6916413,"line_start":918,"line_end":918,"column_start":5,"column_end":18}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6916418,"byte_end":6916453,"line_start":919,"line_end":919,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6916458,"byte_end":6916489,"line_start":920,"line_end":920,"column_start":5,"column_end":36}},{"value":"/     .new_framed(io);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6916494,"byte_end":6916518,"line_start":921,"line_end":921,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6916523,"byte_end":6916530,"line_start":922,"line_end":922,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6916535,"byte_end":6916557,"line_start":923,"line_end":923,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6916562,"byte_end":6916569,"line_start":924,"line_end":924,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":521},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6917868,"byte_end":6917878,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines_codec::LinesCodec","value":"LinesCodec {  }","parent":null,"children":[{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524}],"decl_id":null,"docs":" A simple `Codec` implementation that splits up data into lines.\n","sig":null,"attributes":[{"value":"/ A simple `Codec` implementation that splits up data into lines.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6917727,"byte_end":6917794,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6918958,"byte_end":6918961,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesCodec>::new","value":"fn () -> LinesCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` for splitting up data into lines.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` for splitting up data into lines.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6918559,"byte_end":6918619,"line_start":28,"line_end":28,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6918624,"byte_end":6918627,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6918632,"byte_end":6918642,"line_start":30,"line_end":30,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6918647,"byte_end":6918650,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ The returned `LinesCodec` will not have an upper bound on the length","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6918655,"byte_end":6918727,"line_start":32,"line_end":32,"column_start":5,"column_end":77}},{"value":"/ of a buffered line. See the documentation for [`new_with_max_length`]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6918732,"byte_end":6918805,"line_start":33,"line_end":33,"column_start":5,"column_end":78}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6918810,"byte_end":6918877,"line_start":34,"line_end":34,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6918882,"byte_end":6918885,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: #method.new_with_max_length","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6918890,"byte_end":6918946,"line_start":36,"line_end":36,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6920076,"byte_end":6920095,"line_start":63,"line_end":63,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<LinesCodec>::new_with_max_length","value":"fn (max_length: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` with a maximum line length limit.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` with a maximum line length limit.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6919119,"byte_end":6919179,"line_start":45,"line_end":45,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6919184,"byte_end":6919187,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `LinesCodec::decode` will return a","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6919192,"byte_end":6919255,"line_start":47,"line_end":47,"column_start":5,"column_end":68}},{"value":"/ [`LengthError`] when a line exceeds the length limit. Subsequent calls","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6919260,"byte_end":6919334,"line_start":48,"line_end":48,"column_start":5,"column_end":79}},{"value":"/ will discard up to `limit` bytes from that line until a newline","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6919339,"byte_end":6919406,"line_start":49,"line_end":49,"column_start":5,"column_end":72}},{"value":"/ character is reached, returning `None` until the line over the limit","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6919411,"byte_end":6919483,"line_start":50,"line_end":50,"column_start":5,"column_end":77}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6919488,"byte_end":6919558,"line_start":51,"line_end":51,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6919563,"byte_end":6919586,"line_start":52,"line_end":52,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6919591,"byte_end":6919594,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6919599,"byte_end":6919609,"line_start":54,"line_end":54,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6919614,"byte_end":6919617,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `LinesCodec` which","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6919622,"byte_end":6919697,"line_start":56,"line_end":56,"column_start":5,"column_end":80}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6919702,"byte_end":6919775,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ that holds the line currently being read is unbounded. An attacker could","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6919780,"byte_end":6919856,"line_start":58,"line_end":58,"column_start":5,"column_end":81}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6919861,"byte_end":6919934,"line_start":59,"line_end":59,"column_start":5,"column_end":78}},{"value":"/ without any `\\n` characters, causing unbounded memory consumption.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6919939,"byte_end":6920009,"line_start":60,"line_end":60,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6920014,"byte_end":6920017,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ [`LengthError`]: ../struct.LengthError","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6920022,"byte_end":6920064,"line_start":62,"line_end":62,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6920661,"byte_end":6920671,"line_start":85,"line_end":85,"column_start":12,"column_end":22},"name":"max_length","qualname":"<LinesCodec>::max_length","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum line length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum line length when decoding.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6920223,"byte_end":6920273,"line_start":70,"line_end":70,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6920278,"byte_end":6920281,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6920286,"byte_end":6920293,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6920298,"byte_end":6920317,"line_start":73,"line_end":73,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6920322,"byte_end":6920360,"line_start":74,"line_end":74,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6920365,"byte_end":6920368,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new();","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6920373,"byte_end":6920407,"line_start":76,"line_end":76,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6920412,"byte_end":6920459,"line_start":77,"line_end":77,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6920464,"byte_end":6920471,"line_start":78,"line_end":78,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6920476,"byte_end":6920483,"line_start":79,"line_end":79,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6920488,"byte_end":6920526,"line_start":80,"line_end":80,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6920531,"byte_end":6920534,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new_with_max_length(256);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6920539,"byte_end":6920592,"line_start":82,"line_end":82,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6920597,"byte_end":6920637,"line_start":83,"line_end":83,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6920642,"byte_end":6920649,"line_start":84,"line_end":84,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":556},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6924995,"byte_end":6925016,"line_start":204,"line_end":204,"column_start":5,"column_end":26},"name":"MaxLineLengthExceeded","qualname":"::codec::lines_codec::LinesCodecError::MaxLineLengthExceeded","value":"LinesCodecError::MaxLineLengthExceeded","parent":{"krate":0,"index":555},"children":[],"decl_id":null,"docs":" The maximum line length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum line length was exceeded.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6924949,"byte_end":6924990,"line_start":203,"line_end":203,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":558},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6925051,"byte_end":6925053,"line_start":206,"line_end":206,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::lines_codec::LinesCodecError::Io","value":"LinesCodecError::Io(io::Error)","parent":{"krate":0,"index":555},"children":[],"decl_id":null,"docs":" An IO error occured.\n","sig":null,"attributes":[{"value":"/ An IO error occured.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6925022,"byte_end":6925046,"line_start":205,"line_end":205,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":555},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6924927,"byte_end":6924942,"line_start":202,"line_end":202,"column_start":10,"column_end":25},"name":"LinesCodecError","qualname":"::codec::lines_codec::LinesCodecError","value":"LinesCodecError::{MaxLineLengthExceeded, Io}","parent":null,"children":[{"krate":0,"index":556},{"krate":0,"index":558}],"decl_id":null,"docs":" An error occured while encoding or decoding a line.\n","sig":null,"attributes":[{"value":"/ An error occured while encoding or decoding a line.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6924845,"byte_end":6924900,"line_start":200,"line_end":200,"column_start":1,"column_end":56}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\bytes_codec.rs","byte_start":6850980,"byte_end":6850990,"line_start":11,"line_end":11,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":16}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\bytes_codec.rs","byte_start":6851141,"byte_end":6851151,"line_start":18,"line_end":18,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\bytes_codec.rs","byte_start":6851471,"byte_end":6851481,"line_start":32,"line_end":32,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6860649,"byte_end":6860653,"line_start":46,"line_end":46,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6860924,"byte_end":6860930,"line_start":59,"line_end":59,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6862231,"byte_end":6862237,"line_start":88,"line_end":88,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6866453,"byte_end":6866459,"line_start":196,"line_end":196,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6866721,"byte_end":6866727,"line_start":208,"line_end":208,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6867505,"byte_end":6867511,"line_start":233,"line_end":233,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6867871,"byte_end":6867875,"line_start":248,"line_end":248,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6868013,"byte_end":6868017,"line_start":254,"line_end":254,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6868224,"byte_end":6868228,"line_start":264,"line_end":264,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6868623,"byte_end":6868627,"line_start":278,"line_end":278,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6868908,"byte_end":6868912,"line_start":288,"line_end":288,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":145},{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6869129,"byte_end":6869133,"line_start":298,"line_end":298,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6869662,"byte_end":6869666,"line_start":316,"line_end":316,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6870038,"byte_end":6870042,"line_start":329,"line_end":329,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6870936,"byte_end":6870947,"line_start":360,"line_end":360,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_read.rs","byte_start":6871951,"byte_end":6871961,"line_start":37,"line_end":37,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_read.rs","byte_start":6872295,"byte_end":6872305,"line_start":53,"line_end":53,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_read.rs","byte_start":6873797,"byte_end":6873807,"line_start":99,"line_end":99,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":206},{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_read.rs","byte_start":6874120,"byte_end":6874130,"line_start":112,"line_end":112,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_read.rs","byte_start":6875220,"byte_end":6875230,"line_start":159,"line_end":159,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_read.rs","byte_start":6876286,"byte_end":6876297,"line_start":199,"line_end":199,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_read.rs","byte_start":6876815,"byte_end":6876826,"line_start":225,"line_end":225,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":235},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_write.rs","byte_start":6879876,"byte_end":6879887,"line_start":37,"line_end":37,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_write.rs","byte_start":6880226,"byte_end":6880237,"line_start":53,"line_end":53,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_write.rs","byte_start":6881665,"byte_end":6881676,"line_start":95,"line_end":95,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_write.rs","byte_start":6882394,"byte_end":6882405,"line_start":120,"line_end":120,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":291},{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_write.rs","byte_start":6882737,"byte_end":6882748,"line_start":137,"line_end":137,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_write.rs","byte_start":6883591,"byte_end":6883603,"line_start":168,"line_end":168,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_write.rs","byte_start":6883945,"byte_end":6883957,"line_start":186,"line_end":186,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_write.rs","byte_start":6886315,"byte_end":6886327,"line_start":258,"line_end":258,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_write.rs","byte_start":6886663,"byte_end":6886675,"line_start":271,"line_end":271,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_write.rs","byte_start":6886810,"byte_end":6886822,"line_start":277,"line_end":277,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":326},{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_write.rs","byte_start":6887029,"byte_end":6887041,"line_start":287,"line_end":287,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":330},{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_write.rs","byte_start":6887436,"byte_end":6887448,"line_start":301,"line_end":301,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":334},{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_write.rs","byte_start":6887728,"byte_end":6887740,"line_start":311,"line_end":311,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6901680,"byte_end":6901700,"line_start":410,"line_end":410,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6905062,"byte_end":6905082,"line_start":518,"line_end":518,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6905962,"byte_end":6905982,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6907355,"byte_end":6907375,"line_start":594,"line_end":594,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6907468,"byte_end":6907475,"line_start":602,"line_end":602,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":397},{"krate":0,"index":399},{"krate":0,"index":401},{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6917074,"byte_end":6917081,"line_start":943,"line_end":943,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6917207,"byte_end":6917232,"line_start":951,"line_end":951,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6917390,"byte_end":6917415,"line_start":957,"line_end":957,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6917550,"byte_end":6917575,"line_start":963,"line_end":963,"column_start":19,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6918542,"byte_end":6918552,"line_start":27,"line_end":27,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6921058,"byte_end":6921068,"line_start":103,"line_end":103,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6924473,"byte_end":6924483,"line_start":182,"line_end":182,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6924776,"byte_end":6924786,"line_start":194,"line_end":194,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6925091,"byte_end":6925106,"line_start":209,"line_end":209,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6925388,"byte_end":6925403,"line_start":218,"line_end":218,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6925520,"byte_end":6925535,"line_start":224,"line_end":224,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\lib.rs","byte_start":455,"byte_end":460,"line_start":21,"line_end":21,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":6}},{"kind":"Mod","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\mod.rs","byte_start":6850501,"byte_end":6850517,"line_start":30,"line_end":30,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":342}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\bytes_codec.rs","byte_start":6850980,"byte_end":6850990,"line_start":11,"line_end":11,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":453},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\bytes_codec.rs","byte_start":6851141,"byte_end":6851151,"line_start":18,"line_end":18,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":453},"to":{"krate":0,"index":34}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\bytes_codec.rs","byte_start":6851471,"byte_end":6851481,"line_start":32,"line_end":32,"column_start":18,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":453},"to":{"krate":0,"index":45}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6860649,"byte_end":6860653,"line_start":46,"line_end":46,"column_start":28,"column_end":32},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":727},"to":{"krate":0,"index":80}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6860924,"byte_end":6860930,"line_start":59,"line_end":59,"column_start":12,"column_end":18},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":772},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6862231,"byte_end":6862237,"line_start":88,"line_end":88,"column_start":12,"column_end":18},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":772},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6866453,"byte_end":6866459,"line_start":196,"line_end":196,"column_start":23,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":772},"to":{"krate":17,"index":68}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6866721,"byte_end":6866727,"line_start":208,"line_end":208,"column_start":27,"column_end":33},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":772},"to":{"krate":34,"index":9}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6867505,"byte_end":6867511,"line_start":233,"line_end":233,"column_start":27,"column_end":33},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":772},"to":{"krate":2,"index":6183}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6867871,"byte_end":6867875,"line_start":248,"line_end":248,"column_start":27,"column_end":31},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":727},"to":{"krate":1,"index":2932}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6868013,"byte_end":6868017,"line_start":254,"line_end":254,"column_start":33,"column_end":37},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":727},"to":{"krate":1,"index":3015}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6868224,"byte_end":6868228,"line_start":264,"line_end":264,"column_start":37,"column_end":41},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":727},"to":{"krate":15,"index":215}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6868623,"byte_end":6868627,"line_start":278,"line_end":278,"column_start":43,"column_end":47},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":727},"to":{"krate":15,"index":186}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6868908,"byte_end":6868912,"line_start":288,"line_end":288,"column_start":29,"column_end":33},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":727},"to":{"krate":1,"index":2991}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6869129,"byte_end":6869133,"line_start":298,"line_end":298,"column_start":39,"column_end":43},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":727},"to":{"krate":15,"index":271}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6869662,"byte_end":6869666,"line_start":316,"line_end":316,"column_start":33,"column_end":37},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":727},"to":{"krate":0,"index":34}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6870038,"byte_end":6870042,"line_start":329,"line_end":329,"column_start":33,"column_end":37},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":727},"to":{"krate":0,"index":45}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed.rs","byte_start":6870936,"byte_end":6870947,"line_start":360,"line_end":360,"column_start":12,"column_end":23},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":481},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_read.rs","byte_start":6871951,"byte_end":6871961,"line_start":37,"line_end":37,"column_start":12,"column_end":22},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_read.rs","byte_start":6872295,"byte_end":6872305,"line_start":53,"line_end":53,"column_start":12,"column_end":22},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_read.rs","byte_start":6873797,"byte_end":6873807,"line_start":99,"line_end":99,"column_start":23,"column_end":33},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":686},"to":{"krate":17,"index":68}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_read.rs","byte_start":6874120,"byte_end":6874130,"line_start":112,"line_end":112,"column_start":27,"column_end":37},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":686},"to":{"krate":34,"index":9}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_read.rs","byte_start":6875220,"byte_end":6875230,"line_start":159,"line_end":159,"column_start":27,"column_end":37},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":686},"to":{"krate":2,"index":6183}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_read.rs","byte_start":6876286,"byte_end":6876297,"line_start":199,"line_end":199,"column_start":9,"column_end":20},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":641},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_read.rs","byte_start":6876815,"byte_end":6876826,"line_start":225,"line_end":225,"column_start":20,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":641},"to":{"krate":17,"index":68}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_write.rs","byte_start":6879876,"byte_end":6879887,"line_start":37,"line_end":37,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":600},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_write.rs","byte_start":6880226,"byte_end":6880237,"line_start":53,"line_end":53,"column_start":12,"column_end":23},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":600},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_write.rs","byte_start":6881665,"byte_end":6881676,"line_start":95,"line_end":95,"column_start":27,"column_end":38},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":600},"to":{"krate":34,"index":9}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_write.rs","byte_start":6882394,"byte_end":6882405,"line_start":120,"line_end":120,"column_start":23,"column_end":34},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":600},"to":{"krate":17,"index":68}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_write.rs","byte_start":6882737,"byte_end":6882748,"line_start":137,"line_end":137,"column_start":27,"column_end":38},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":600},"to":{"krate":2,"index":6183}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_write.rs","byte_start":6883591,"byte_end":6883603,"line_start":168,"line_end":168,"column_start":9,"column_end":21},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":563},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_write.rs","byte_start":6883945,"byte_end":6883957,"line_start":186,"line_end":186,"column_start":24,"column_end":36},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":563},"to":{"krate":34,"index":9}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_write.rs","byte_start":6886315,"byte_end":6886327,"line_start":258,"line_end":258,"column_start":30,"column_end":42},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":563},"to":{"krate":0,"index":34}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_write.rs","byte_start":6886663,"byte_end":6886675,"line_start":271,"line_end":271,"column_start":24,"column_end":36},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":563},"to":{"krate":1,"index":2932}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_write.rs","byte_start":6886810,"byte_end":6886822,"line_start":277,"line_end":277,"column_start":30,"column_end":42},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":563},"to":{"krate":1,"index":3015}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_write.rs","byte_start":6887029,"byte_end":6887041,"line_start":287,"line_end":287,"column_start":34,"column_end":46},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":563},"to":{"krate":15,"index":215}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_write.rs","byte_start":6887436,"byte_end":6887448,"line_start":301,"line_end":301,"column_start":40,"column_end":52},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":563},"to":{"krate":15,"index":186}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\framed_write.rs","byte_start":6887728,"byte_end":6887740,"line_start":311,"line_end":311,"column_start":25,"column_end":37},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":563},"to":{"krate":0,"index":80}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6901680,"byte_end":6901700,"line_start":410,"line_end":410,"column_start":6,"column_end":26},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6905062,"byte_end":6905082,"line_start":518,"line_end":518,"column_start":18,"column_end":38},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":505},"to":{"krate":0,"index":34}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6905962,"byte_end":6905982,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":505},"to":{"krate":0,"index":45}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6907355,"byte_end":6907375,"line_start":594,"line_end":594,"column_start":18,"column_end":38},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":505},"to":{"krate":2,"index":1893}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6907468,"byte_end":6907475,"line_start":602,"line_end":602,"column_start":6,"column_end":13},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":493},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6917074,"byte_end":6917081,"line_start":943,"line_end":943,"column_start":18,"column_end":25},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":493},"to":{"krate":2,"index":1893}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6917207,"byte_end":6917232,"line_start":951,"line_end":951,"column_start":21,"column_end":46},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":364},"to":{"krate":2,"index":6183}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6917390,"byte_end":6917415,"line_start":957,"line_end":957,"column_start":23,"column_end":48},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":364},"to":{"krate":2,"index":6188}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\length_delimited.rs","byte_start":6917550,"byte_end":6917575,"line_start":963,"line_end":963,"column_start":19,"column_end":44},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":364},"to":{"krate":1,"index":1642}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6918542,"byte_end":6918552,"line_start":27,"line_end":27,"column_start":6,"column_end":16},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":521},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6921058,"byte_end":6921068,"line_start":103,"line_end":103,"column_start":18,"column_end":28},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":521},"to":{"krate":0,"index":34}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6924473,"byte_end":6924483,"line_start":182,"line_end":182,"column_start":18,"column_end":28},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":521},"to":{"krate":0,"index":45}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6924776,"byte_end":6924786,"line_start":194,"line_end":194,"column_start":18,"column_end":28},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":521},"to":{"krate":2,"index":1893}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6925091,"byte_end":6925106,"line_start":209,"line_end":209,"column_start":23,"column_end":38},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":555},"to":{"krate":2,"index":6188}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6925388,"byte_end":6925403,"line_start":218,"line_end":218,"column_start":26,"column_end":41},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":555},"to":{"krate":2,"index":1823}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.2.0\\src\\codec\\lines_codec.rs","byte_start":6925520,"byte_end":6925535,"line_start":224,"line_end":224,"column_start":28,"column_end":43},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":555},"to":{"krate":1,"index":1642}}]}