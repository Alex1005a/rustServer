{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0","program":"C:\\Users\\79211\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","bson","--edition=2018","C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=140a1803244195c5","-C","extra-filename=-140a1803244195c5","--out-dir","c:\\Users\\79211\\Documents\\MyCode\\rustServer\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\79211\\Documents\\MyCode\\rustServer\\target\\rls\\debug\\deps","--extern","base64=c:\\Users\\79211\\Documents\\MyCode\\rustServer\\target\\rls\\debug\\deps\\libbase64-7aca6a30d4ff5c8d.rmeta","--extern","byteorder=c:\\Users\\79211\\Documents\\MyCode\\rustServer\\target\\rls\\debug\\deps\\libbyteorder-850b98430929c530.rmeta","--extern","chrono=c:\\Users\\79211\\Documents\\MyCode\\rustServer\\target\\rls\\debug\\deps\\libchrono-c8e131caebbeae9f.rmeta","--extern","hex=c:\\Users\\79211\\Documents\\MyCode\\rustServer\\target\\rls\\debug\\deps\\libhex-91b96a3b5967348b.rmeta","--extern","libc=c:\\Users\\79211\\Documents\\MyCode\\rustServer\\target\\rls\\debug\\deps\\liblibc-af51d4e2a9f192fd.rmeta","--extern","linked_hash_map=c:\\Users\\79211\\Documents\\MyCode\\rustServer\\target\\rls\\debug\\deps\\liblinked_hash_map-19ae37b552754f6a.rmeta","--extern","md5=c:\\Users\\79211\\Documents\\MyCode\\rustServer\\target\\rls\\debug\\deps\\libmd5-8a36eb6810521adc.rmeta","--extern","rand=c:\\Users\\79211\\Documents\\MyCode\\rustServer\\target\\rls\\debug\\deps\\librand-bdf01fc807a1237b.rmeta","--extern","serde=c:\\Users\\79211\\Documents\\MyCode\\rustServer\\target\\rls\\debug\\deps\\libserde-086fa85985330fe9.rmeta","--extern","serde_json=c:\\Users\\79211\\Documents\\MyCode\\rustServer\\target\\rls\\debug\\deps\\libserde_json-32ca5e7b04804742.rmeta","--extern","time=c:\\Users\\79211\\Documents\\MyCode\\rustServer\\target\\rls\\debug\\deps\\libtime-2268c87fecdaafae.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\79211\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\79211\\Documents\\MyCode\\rustServer\\target\\rls\\debug\\deps\\libbson-140a1803244195c5.rmeta"},"prelude":{"crate_id":{"name":"bson","disambiguator":[12645629892522925989,1128558002017643009]},"crate_root":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src","external_crates":[{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[12374408497437733202,6492056007108846167]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[2290045538748334120,9614494007960750338]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15512757571249680579,12574991579126166983]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[17123206265898570674,6623867072543366863]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9295367743284037777,362479726688110916]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[9577042658642913717,6283816297099158970]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9211776128286668424,8590800287841478331]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[761442209400273500,2318016978487880907]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[9619839731531435865,7305872285662454983]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[9022773486214233476,13211195617945869214]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[12418999252224835617,8433212072856927403]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15106747134913048427,4886671886298966434]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[303194902276108962,17442566137036092759]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","num":14,"id":{"name":"chrono","disambiguator":[9486500680606206709,3365672866518555707]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\oid.rs","num":15,"id":{"name":"time","disambiguator":[9750321986035172949,1287713710218264002]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","num":16,"id":{"name":"winapi","disambiguator":[515642717400556939,14831488282601185026]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","num":17,"id":{"name":"num_integer","disambiguator":[11641004773198251863,17514229350881152694]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","num":18,"id":{"name":"num_traits","disambiguator":[2963044799203915916,15431026845277341005]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","num":19,"id":{"name":"serde_json","disambiguator":[12017359307515259947,13523942974016206357]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\models.rs","num":20,"id":{"name":"serde","disambiguator":[14807757036515809162,12709154796592939541]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\models.rs","num":21,"id":{"name":"serde_derive","disambiguator":[16449788495858409035,18046186087558075445]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","num":22,"id":{"name":"indexmap","disambiguator":[5614462095224486914,1179176801707936365]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","num":23,"id":{"name":"hashbrown","disambiguator":[15353626389434735059,3332706970677748125]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","num":24,"id":{"name":"itoa","disambiguator":[18139968239632673038,15912966762149998044]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","num":25,"id":{"name":"ryu","disambiguator":[10963954522762442880,1459874056615884341]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\mod.rs","num":26,"id":{"name":"byteorder","disambiguator":[12507303234481692071,8126376977899224744]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","num":27,"id":{"name":"linked_hash_map","disambiguator":[7873630024034267076,12120292968070868974]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\oid.rs","num":28,"id":{"name":"hex","disambiguator":[17414108003550532080,3833881206466155251]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\oid.rs","num":29,"id":{"name":"rand","disambiguator":[17683048714531335167,11301913437978030307]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\oid.rs","num":30,"id":{"name":"rand_core","disambiguator":[12270781039446863255,4460490072478488491]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\oid.rs","num":31,"id":{"name":"getrandom","disambiguator":[11785054512516489589,9347294265001151639]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\oid.rs","num":32,"id":{"name":"cfg_if","disambiguator":[17450997194065472978,17865286164272324672]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\oid.rs","num":33,"id":{"name":"rand_chacha","disambiguator":[10121684057212303658,14430630253610509570]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\oid.rs","num":34,"id":{"name":"ppv_lite86","disambiguator":[11334261074842145255,16383842225133890201]}},{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","num":35,"id":{"name":"base64","disambiguator":[14103117415942650001,549813191174771556]}}],"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":1148,"byte_end":8180,"line_start":22,"line_end":216,"column_start":1,"column_end":14}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":50},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":7758,"byte_end":7763,"line_start":191,"line_end":191,"column_start":9,"column_end":14},"alias_span":null,"name":"Array","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1191},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":7773,"byte_end":7779,"line_start":192,"line_end":192,"column_start":9,"column_end":15},"alias_span":null,"name":"Binary","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1045},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":7789,"byte_end":7793,"line_start":193,"line_end":193,"column_start":9,"column_end":13},"alias_span":null,"name":"Bson","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1143},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":7803,"byte_end":7811,"line_start":194,"line_end":194,"column_start":9,"column_end":17},"alias_span":null,"name":"DateTime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1202},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":7821,"byte_end":7830,"line_start":195,"line_end":195,"column_start":9,"column_end":18},"alias_span":null,"name":"DbPointer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1422},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":7840,"byte_end":7848,"line_start":196,"line_end":196,"column_start":9,"column_end":17},"alias_span":null,"name":"Document","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1180},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":7858,"byte_end":7881,"line_start":197,"line_end":197,"column_start":9,"column_end":32},"alias_span":null,"name":"JavaScriptCodeWithScope","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1169},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":7891,"byte_end":7896,"line_start":198,"line_end":198,"column_start":9,"column_end":14},"alias_span":null,"name":"Regex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1113},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":7906,"byte_end":7915,"line_start":199,"line_end":199,"column_start":9,"column_end":18},"alias_span":null,"name":"Timestamp","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":457},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":7933,"byte_end":7942,"line_start":201,"line_end":201,"column_start":10,"column_end":19},"alias_span":null,"name":"from_bson","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":303},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":7944,"byte_end":7956,"line_start":201,"line_end":201,"column_start":21,"column_end":33},"alias_span":null,"name":"Deserializer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1399},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":7975,"byte_end":7985,"line_start":202,"line_end":202,"column_start":17,"column_end":27},"alias_span":null,"name":"Decimal128","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1006},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":7997,"byte_end":8004,"line_start":203,"line_end":203,"column_start":11,"column_end":18},"alias_span":null,"name":"to_bson","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":847},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":8006,"byte_end":8016,"line_start":203,"line_end":203,"column_start":20,"column_end":30},"alias_span":null,"name":"Serializer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1213},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\mod.rs","byte_start":52721,"byte_end":52726,"line_start":28,"line_end":28,"column_start":13,"column_end":18},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":189}},{"kind":"Use","ref_id":{"krate":0,"index":212},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\mod.rs","byte_start":52728,"byte_end":52734,"line_start":28,"line_end":28,"column_start":20,"column_end":26},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":189}},{"kind":"Use","ref_id":{"krate":0,"index":303},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\mod.rs","byte_start":52748,"byte_end":52760,"line_start":29,"line_end":29,"column_start":12,"column_end":24},"alias_span":null,"name":"Deserializer","value":"","parent":{"krate":0,"index":189}},{"kind":"Use","ref_id":{"krate":0,"index":2237},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\mod.rs","byte_start":145532,"byte_end":145537,"line_start":28,"line_end":28,"column_start":13,"column_end":18},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":791}},{"kind":"Use","ref_id":{"krate":0,"index":809},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\mod.rs","byte_start":145539,"byte_end":145545,"line_start":28,"line_end":28,"column_start":20,"column_end":26},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":791}},{"kind":"Use","ref_id":{"krate":0,"index":847},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\mod.rs","byte_start":145559,"byte_end":145569,"line_start":29,"line_end":29,"column_start":12,"column_end":22},"alias_span":null,"name":"Serializer","value":"","parent":{"krate":0,"index":791}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":1148,"byte_end":8180,"line_start":22,"line_end":216,"column_start":1,"column_end":14},"name":"","qualname":"::","value":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":156},{"krate":0,"index":189},{"krate":0,"index":460},{"krate":0,"index":466},{"krate":0,"index":647},{"krate":0,"index":727},{"krate":0,"index":791},{"krate":0,"index":1008}],"decl_id":null,"docs":" BSON, short for Binary JSON, is a binary-encoded serialization of JSON-like documents.\n Like JSON, BSON supports the embedding of documents and arrays within other documents\n and arrays. BSON also contains extensions that allow representation of data types that\n are not part of the JSON spec. For example, BSON has a datetime type and a binary data type.","sig":null,"attributes":[{"value":"! BSON, short for Binary JSON, is a binary-encoded serialization of JSON-like documents.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":1148,"byte_end":1238,"line_start":22,"line_end":22,"column_start":1,"column_end":91}},{"value":"! Like JSON, BSON supports the embedding of documents and arrays within other documents","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":1239,"byte_end":1328,"line_start":23,"line_end":23,"column_start":1,"column_end":90}},{"value":"! and arrays. BSON also contains extensions that allow representation of data types that","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":1329,"byte_end":1419,"line_start":24,"line_end":24,"column_start":1,"column_end":91}},{"value":"! are not part of the JSON spec. For example, BSON has a datetime type and a binary data type.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":1420,"byte_end":1516,"line_start":25,"line_end":25,"column_start":1,"column_end":97}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":1517,"byte_end":1520,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":1521,"byte_end":1532,"line_start":27,"line_end":27,"column_start":1,"column_end":12}},{"value":"! // JSON equivalent","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":1533,"byte_end":1555,"line_start":28,"line_end":28,"column_start":1,"column_end":23}},{"value":"! {\"hello\": \"world\"}","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":1556,"byte_end":1578,"line_start":29,"line_end":29,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":1579,"byte_end":1582,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"! // BSON encoding","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":1583,"byte_end":1603,"line_start":31,"line_end":31,"column_start":1,"column_end":21}},{"value":"! \\x16\\x00\\x00\\x00                   // total document size","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":1604,"byte_end":1665,"line_start":32,"line_end":32,"column_start":1,"column_end":62}},{"value":"! \\x02                               // 0x02 = type String","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":1666,"byte_end":1726,"line_start":33,"line_end":33,"column_start":1,"column_end":61}},{"value":"! hello\\x00                          // field name","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":1727,"byte_end":1779,"line_start":34,"line_end":34,"column_start":1,"column_end":53}},{"value":"! \\x06\\x00\\x00\\x00world\\x00          // field value","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":1780,"byte_end":1833,"line_start":35,"line_end":35,"column_start":1,"column_end":54}},{"value":"! \\x00                               // 0x00 = type EOO ('end of object')","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":1834,"byte_end":1909,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"! ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":1910,"byte_end":1917,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":1918,"byte_end":1921,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! BSON is the primary data representation for [MongoDB](https://www.mongodb.com/), and this crate is used in the","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":1922,"byte_end":2036,"line_start":39,"line_end":39,"column_start":1,"column_end":115}},{"value":"! [`mongodb`](https://docs.rs/mongodb/0.10.0/mongodb/) driver crate in its API and implementation.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":2037,"byte_end":2137,"line_start":40,"line_end":40,"column_start":1,"column_end":101}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":2138,"byte_end":2141,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! For more information about BSON itself, see [bsonspec.org](http://bsonspec.org).","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":2142,"byte_end":2226,"line_start":42,"line_end":42,"column_start":1,"column_end":85}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":2227,"byte_end":2230,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"! ## BSON values","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":2231,"byte_end":2249,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":2250,"byte_end":2253,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"! Many different types can be represented as a BSON value, including 32-bit and 64-bit signed","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":2254,"byte_end":2349,"line_start":46,"line_end":46,"column_start":1,"column_end":96}},{"value":"! integers, 64 bit floating point numbers, strings, datetimes, embedded documents, and more. To","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":2350,"byte_end":2447,"line_start":47,"line_end":47,"column_start":1,"column_end":98}},{"value":"! see a full list of possible BSON values, see the [BSON specification](http://bsonspec.org/spec.html). The various","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":2448,"byte_end":2565,"line_start":48,"line_end":48,"column_start":1,"column_end":118}},{"value":"! possible BSON values are modeled in this crate by the [`Bson`](enum.Bson.html) enum.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":2566,"byte_end":2654,"line_start":49,"line_end":49,"column_start":1,"column_end":89}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":2655,"byte_end":2658,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"! ### Creating [`Bson`](enum.Bson.html) instances","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":2659,"byte_end":2710,"line_start":51,"line_end":51,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":2711,"byte_end":2714,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"! [`Bson`](enum.Bson.html) values can be instantiated directly or via the","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":2715,"byte_end":2790,"line_start":53,"line_end":53,"column_start":1,"column_end":76}},{"value":"! [`bson!`](macro.bson.html) macro:","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":2791,"byte_end":2828,"line_start":54,"line_end":54,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":2829,"byte_end":2832,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":2833,"byte_end":2844,"line_start":56,"line_end":56,"column_start":1,"column_end":12}},{"value":"! # use bson::{bson, Bson};","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":2845,"byte_end":2874,"line_start":57,"line_end":57,"column_start":1,"column_end":30}},{"value":"! let string = Bson::String(\"hello world\".to_string());","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":2875,"byte_end":2932,"line_start":58,"line_end":58,"column_start":1,"column_end":58}},{"value":"! let int = Bson::Int32(5);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":2933,"byte_end":2962,"line_start":59,"line_end":59,"column_start":1,"column_end":30}},{"value":"! let array = Bson::Array(vec![Bson::Int32(5), Bson::Boolean(false)]);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":2963,"byte_end":3035,"line_start":60,"line_end":60,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":3036,"byte_end":3039,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"! let string: Bson = \"hello world\".into();","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":3040,"byte_end":3084,"line_start":62,"line_end":62,"column_start":1,"column_end":45}},{"value":"! let int: Bson = 5i32.into();","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":3085,"byte_end":3117,"line_start":63,"line_end":63,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":3118,"byte_end":3121,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"! let string = bson!(\"hello world\");","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":3122,"byte_end":3160,"line_start":65,"line_end":65,"column_start":1,"column_end":39}},{"value":"! let int = bson!(5);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":3161,"byte_end":3184,"line_start":66,"line_end":66,"column_start":1,"column_end":24}},{"value":"! let array = bson!([5, false]);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":3185,"byte_end":3219,"line_start":67,"line_end":67,"column_start":1,"column_end":35}},{"value":"! ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":3220,"byte_end":3227,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"! [`bson!`](macro.bson.html) has supports both array and object literals, and it automatically","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":3228,"byte_end":3324,"line_start":69,"line_end":69,"column_start":1,"column_end":97}},{"value":"! converts any values specified to [`Bson`](enum.Bson.html), provided they are `Into<Bson>`.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":3325,"byte_end":3419,"line_start":70,"line_end":70,"column_start":1,"column_end":95}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":3420,"byte_end":3423,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"! ### [`Bson`](enum.Bson.html) value unwrapping","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":3424,"byte_end":3473,"line_start":72,"line_end":72,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":3474,"byte_end":3477,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"! [`Bson`](enum.Bson.html) has a number of helper methods for accessing the underlying native Rust","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":3478,"byte_end":3578,"line_start":74,"line_end":74,"column_start":1,"column_end":101}},{"value":"! types. These helpers can be useful in circumstances in which the specific type of a BSON value","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":3579,"byte_end":3677,"line_start":75,"line_end":75,"column_start":1,"column_end":99}},{"value":"! is known ahead of time.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":3678,"byte_end":3705,"line_start":76,"line_end":76,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":3706,"byte_end":3709,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"! e.g.:","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":3710,"byte_end":3719,"line_start":78,"line_end":78,"column_start":1,"column_end":10}},{"value":"! ```rust","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":3720,"byte_end":3731,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"! # use bson::{bson, Bson};","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":3732,"byte_end":3761,"line_start":80,"line_end":80,"column_start":1,"column_end":30}},{"value":"! let value = Bson::Int32(5);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":3762,"byte_end":3793,"line_start":81,"line_end":81,"column_start":1,"column_end":32}},{"value":"! let int = value.as_i32(); // Some(5)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":3794,"byte_end":3834,"line_start":82,"line_end":82,"column_start":1,"column_end":41}},{"value":"! let bool = value.as_bool(); // None","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":3835,"byte_end":3874,"line_start":83,"line_end":83,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":3875,"byte_end":3878,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"! let value = bson!([true]);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":3879,"byte_end":3909,"line_start":85,"line_end":85,"column_start":1,"column_end":31}},{"value":"! let array = value.as_array(); // Some(&Vec<Bson>)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":3910,"byte_end":3963,"line_start":86,"line_end":86,"column_start":1,"column_end":54}},{"value":"! ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":3964,"byte_end":3971,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":3972,"byte_end":3975,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"! ## BSON documents","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":3976,"byte_end":3997,"line_start":89,"line_end":89,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":3998,"byte_end":4001,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"! BSON documents are ordered maps of UTF-8 encoded strings to BSON values. They are logically","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":4002,"byte_end":4097,"line_start":91,"line_end":91,"column_start":1,"column_end":96}},{"value":"! similar to JSON objects in that they can contain subdocuments, arrays, and values of several","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":4098,"byte_end":4194,"line_start":92,"line_end":92,"column_start":1,"column_end":97}},{"value":"! different types. This crate models BSON documents via the","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":4195,"byte_end":4256,"line_start":93,"line_end":93,"column_start":1,"column_end":62}},{"value":"! [`Document`](document/struct.Document.html) struct.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":4257,"byte_end":4312,"line_start":94,"line_end":94,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":4313,"byte_end":4316,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"! ### Creating [`Document`](document/struct.Document.html)s","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":4317,"byte_end":4378,"line_start":96,"line_end":96,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":4379,"byte_end":4382,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"! [`Document`](document/struct.Document.html)s can be created directly either from a byte","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":4383,"byte_end":4474,"line_start":98,"line_end":98,"column_start":1,"column_end":92}},{"value":"! reader containing BSON data or via the `doc!` macro:","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":4475,"byte_end":4531,"line_start":99,"line_end":99,"column_start":1,"column_end":57}},{"value":"! ```rust","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":4532,"byte_end":4543,"line_start":100,"line_end":100,"column_start":1,"column_end":12}},{"value":"! # use bson::{doc, Document};","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":4544,"byte_end":4576,"line_start":101,"line_end":101,"column_start":1,"column_end":33}},{"value":"! # use std::io::Read;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":4577,"byte_end":4601,"line_start":102,"line_end":102,"column_start":1,"column_end":25}},{"value":"! let mut bytes = hex::decode(\"0C0000001069000100000000\").unwrap();","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":4602,"byte_end":4671,"line_start":103,"line_end":103,"column_start":1,"column_end":70}},{"value":"! let doc = Document::from_reader(&mut bytes.as_slice()).unwrap(); // { \"i\": 1 }","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":4672,"byte_end":4754,"line_start":104,"line_end":104,"column_start":1,"column_end":83}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":4755,"byte_end":4758,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"! let doc = doc! {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":4759,"byte_end":4779,"line_start":106,"line_end":106,"column_start":1,"column_end":21}},{"value":"!    \"hello\": \"world\",","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":4780,"byte_end":4804,"line_start":107,"line_end":107,"column_start":1,"column_end":25}},{"value":"!    \"int\": 5,","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":4805,"byte_end":4821,"line_start":108,"line_end":108,"column_start":1,"column_end":17}},{"value":"!    \"subdoc\": { \"cat\": true },","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":4822,"byte_end":4855,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"! };","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":4856,"byte_end":4862,"line_start":110,"line_end":110,"column_start":1,"column_end":7}},{"value":"! ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":4863,"byte_end":4870,"line_start":111,"line_end":111,"column_start":1,"column_end":8}},{"value":"! [`doc!`](macro.doc.html) works similarly to [`bson!`](macro.bson.html), except that it always","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":4871,"byte_end":4968,"line_start":112,"line_end":112,"column_start":1,"column_end":98}},{"value":"! returns a [`Document`](document/struct.Document.html) rather than a [`Bson`](enum.Bson.html).","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":4969,"byte_end":5066,"line_start":113,"line_end":113,"column_start":1,"column_end":98}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":5067,"byte_end":5070,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"! ### [`Document`](document/struct.Document.html) member access","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":5071,"byte_end":5136,"line_start":115,"line_end":115,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":5137,"byte_end":5140,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"! [`Document`](document/struct.Document.html) has a number of methods on it to facilitate member","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":5141,"byte_end":5239,"line_start":117,"line_end":117,"column_start":1,"column_end":99}},{"value":"! access:","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":5240,"byte_end":5251,"line_start":118,"line_end":118,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":5252,"byte_end":5255,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":5256,"byte_end":5267,"line_start":120,"line_end":120,"column_start":1,"column_end":12}},{"value":"! # use bson::doc;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":5268,"byte_end":5288,"line_start":121,"line_end":121,"column_start":1,"column_end":21}},{"value":"! let doc = doc! {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":5289,"byte_end":5309,"line_start":122,"line_end":122,"column_start":1,"column_end":21}},{"value":"!    \"string\": \"string\",","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":5310,"byte_end":5336,"line_start":123,"line_end":123,"column_start":1,"column_end":27}},{"value":"!    \"bool\": true,","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":5337,"byte_end":5357,"line_start":124,"line_end":124,"column_start":1,"column_end":21}},{"value":"!    \"i32\": 5,","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":5358,"byte_end":5374,"line_start":125,"line_end":125,"column_start":1,"column_end":17}},{"value":"!    \"doc\": { \"x\": true },","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":5375,"byte_end":5403,"line_start":126,"line_end":126,"column_start":1,"column_end":29}},{"value":"! };","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":5404,"byte_end":5410,"line_start":127,"line_end":127,"column_start":1,"column_end":7}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":5411,"byte_end":5414,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"! // attempt get values as untyped Bson","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":5415,"byte_end":5456,"line_start":129,"line_end":129,"column_start":1,"column_end":42}},{"value":"! let none = doc.get(\"asdfadsf\"); // None","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":5457,"byte_end":5500,"line_start":130,"line_end":130,"column_start":1,"column_end":44}},{"value":"! let value = doc.get(\"string\"); // Some(&Bson::String(\"string\"))","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":5501,"byte_end":5568,"line_start":131,"line_end":131,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":5569,"byte_end":5572,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"! // attempt to get values with explicit typing","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":5573,"byte_end":5622,"line_start":133,"line_end":133,"column_start":1,"column_end":50}},{"value":"! let string = doc.get_str(\"string\"); // Ok(\"string\")","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":5623,"byte_end":5678,"line_start":134,"line_end":134,"column_start":1,"column_end":56}},{"value":"! let subdoc = doc.get_document(\"doc\"); // Some(Document({ \"x\": true }))","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":5679,"byte_end":5753,"line_start":135,"line_end":135,"column_start":1,"column_end":75}},{"value":"! let error = doc.get_i64(\"i32\"); // Err(...)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":5754,"byte_end":5801,"line_start":136,"line_end":136,"column_start":1,"column_end":48}},{"value":"! ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":5802,"byte_end":5809,"line_start":137,"line_end":137,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":5810,"byte_end":5813,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"! ## Modeling BSON with strongly typed data structures","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":5814,"byte_end":5870,"line_start":139,"line_end":139,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":5871,"byte_end":5874,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"! While it is possible to work with documents and BSON values directly, it will often introduce a","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":5875,"byte_end":5974,"line_start":141,"line_end":141,"column_start":1,"column_end":100}},{"value":"! lot of boilerplate for verifying the necessary keys are present and their values are the correct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":5975,"byte_end":6075,"line_start":142,"line_end":142,"column_start":1,"column_end":101}},{"value":"! types. [`serde`](https://serde.rs/) provides a powerful way of mapping BSON data into Rust data structures largely","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":6076,"byte_end":6194,"line_start":143,"line_end":143,"column_start":1,"column_end":119}},{"value":"! automatically, removing the need for all that boilerplate.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":6195,"byte_end":6257,"line_start":144,"line_end":144,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":6258,"byte_end":6261,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"! e.g.:","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":6262,"byte_end":6271,"line_start":146,"line_end":146,"column_start":1,"column_end":10}},{"value":"! ```rust","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":6272,"byte_end":6283,"line_start":147,"line_end":147,"column_start":1,"column_end":12}},{"value":"! # use serde::{Deserialize, Serialize};","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":6284,"byte_end":6326,"line_start":148,"line_end":148,"column_start":1,"column_end":43}},{"value":"! # use bson::{bson, Bson};","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":6327,"byte_end":6356,"line_start":149,"line_end":149,"column_start":1,"column_end":30}},{"value":"! #[derive(Serialize, Deserialize)]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":6357,"byte_end":6394,"line_start":150,"line_end":150,"column_start":1,"column_end":38}},{"value":"! struct Person {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":6395,"byte_end":6414,"line_start":151,"line_end":151,"column_start":1,"column_end":20}},{"value":"!     name: String,","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":6415,"byte_end":6436,"line_start":152,"line_end":152,"column_start":1,"column_end":22}},{"value":"!     age: u8,","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":6437,"byte_end":6453,"line_start":153,"line_end":153,"column_start":1,"column_end":17}},{"value":"!     phones: Vec<String>,","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":6454,"byte_end":6482,"line_start":154,"line_end":154,"column_start":1,"column_end":29}},{"value":"! }","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":6483,"byte_end":6488,"line_start":155,"line_end":155,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":6489,"byte_end":6492,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"! fn typed_example() {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":6493,"byte_end":6517,"line_start":157,"line_end":157,"column_start":1,"column_end":25}},{"value":"!     // Some BSON input data as a `Bson`.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":6518,"byte_end":6562,"line_start":158,"line_end":158,"column_start":1,"column_end":45}},{"value":"!     let bson_data: Bson = bson!({","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":6563,"byte_end":6600,"line_start":159,"line_end":159,"column_start":1,"column_end":38}},{"value":"!         \"name\": \"John Doe\",","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":6601,"byte_end":6632,"line_start":160,"line_end":160,"column_start":1,"column_end":32}},{"value":"!         \"age\": 43,","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":6633,"byte_end":6655,"line_start":161,"line_end":161,"column_start":1,"column_end":23}},{"value":"!         \"phones\": [","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":6656,"byte_end":6679,"line_start":162,"line_end":162,"column_start":1,"column_end":24}},{"value":"!             \"+44 1234567\",","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":6680,"byte_end":6710,"line_start":163,"line_end":163,"column_start":1,"column_end":31}},{"value":"!             \"+44 2345678\"","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":6711,"byte_end":6740,"line_start":164,"line_end":164,"column_start":1,"column_end":30}},{"value":"!         ]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":6741,"byte_end":6754,"line_start":165,"line_end":165,"column_start":1,"column_end":14}},{"value":"!     });","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":6755,"byte_end":6766,"line_start":166,"line_end":166,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":6767,"byte_end":6770,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"!     // Deserialize the Person struct from the BSON data, automatically","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":6771,"byte_end":6845,"line_start":168,"line_end":168,"column_start":1,"column_end":75}},{"value":"!     // verifying that the necessary keys are present and that they are of","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":6846,"byte_end":6923,"line_start":169,"line_end":169,"column_start":1,"column_end":78}},{"value":"!     // the correct types.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":6924,"byte_end":6953,"line_start":170,"line_end":170,"column_start":1,"column_end":30}},{"value":"!     let mut person: Person = bson::from_bson(bson_data).unwrap();","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":6954,"byte_end":7023,"line_start":171,"line_end":171,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":7024,"byte_end":7027,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"!     // Do things just like with any other Rust data structure.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":7028,"byte_end":7094,"line_start":173,"line_end":173,"column_start":1,"column_end":67}},{"value":"!     println!(\"Redacting {}'s record.\", person.name);","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":7095,"byte_end":7151,"line_start":174,"line_end":174,"column_start":1,"column_end":57}},{"value":"!     person.name = \"REDACTED\".to_string();","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":7152,"byte_end":7197,"line_start":175,"line_end":175,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":7198,"byte_end":7201,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"!     // Get a serialized version of the input data as a `Bson`.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":7202,"byte_end":7268,"line_start":177,"line_end":177,"column_start":1,"column_end":67}},{"value":"!     let redacted_bson = bson::to_bson(&person).unwrap();","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":7269,"byte_end":7329,"line_start":178,"line_end":178,"column_start":1,"column_end":61}},{"value":"! }","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":7330,"byte_end":7335,"line_start":179,"line_end":179,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":7336,"byte_end":7343,"line_start":180,"line_end":180,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":7344,"byte_end":7347,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"! Any types that implement `Serialize` and `Deserialize` can be used in this way. Doing so helps","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":7348,"byte_end":7446,"line_start":182,"line_end":182,"column_start":1,"column_end":99}},{"value":"! separate the \"business logic\" that operates over the data from the (de)serialization logic that","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":7447,"byte_end":7546,"line_start":183,"line_end":183,"column_start":1,"column_end":100}},{"value":"! translates the data to/from its serialized form. This can lead to more clear and concise code","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":7547,"byte_end":7644,"line_start":184,"line_end":184,"column_start":1,"column_end":98}},{"value":"! that is also less error prone.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":7645,"byte_end":7679,"line_start":185,"line_end":185,"column_start":1,"column_end":35}},{"value":"allow(clippy :: cognitive_complexity)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":7681,"byte_end":7720,"line_start":187,"line_end":187,"column_start":1,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1046},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":16676,"byte_end":16682,"line_start":43,"line_end":43,"column_start":5,"column_end":11},"name":"Double","qualname":"::bson::Bson::Double","value":"Bson::Double(f64)","parent":{"krate":0,"index":1045},"children":[],"decl_id":null,"docs":" 64-bit binary floating point\n","sig":null,"attributes":[{"value":"/ 64-bit binary floating point","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":16639,"byte_end":16671,"line_start":42,"line_end":42,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1049},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":16714,"byte_end":16720,"line_start":45,"line_end":45,"column_start":5,"column_end":11},"name":"String","qualname":"::bson::Bson::String","value":"Bson::String(String)","parent":{"krate":0,"index":1045},"children":[],"decl_id":null,"docs":" UTF-8 string\n","sig":null,"attributes":[{"value":"/ UTF-8 string","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":16693,"byte_end":16709,"line_start":44,"line_end":44,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1052},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":16748,"byte_end":16753,"line_start":47,"line_end":47,"column_start":5,"column_end":10},"name":"Array","qualname":"::bson::Bson::Array","value":"Bson::Array(Array)","parent":{"krate":0,"index":1045},"children":[],"decl_id":null,"docs":" Array\n","sig":null,"attributes":[{"value":"/ Array","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":16734,"byte_end":16743,"line_start":46,"line_end":46,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1055},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":16792,"byte_end":16800,"line_start":49,"line_end":49,"column_start":5,"column_end":13},"name":"Document","qualname":"::bson::Bson::Document","value":"Bson::Document(Document)","parent":{"krate":0,"index":1045},"children":[],"decl_id":null,"docs":" Embedded document\n","sig":null,"attributes":[{"value":"/ Embedded document","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":16766,"byte_end":16787,"line_start":48,"line_end":48,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1058},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":16838,"byte_end":16845,"line_start":51,"line_end":51,"column_start":5,"column_end":12},"name":"Boolean","qualname":"::bson::Bson::Boolean","value":"Bson::Boolean(bool)","parent":{"krate":0,"index":1045},"children":[],"decl_id":null,"docs":" Boolean value\n","sig":null,"attributes":[{"value":"/ Boolean value","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":16816,"byte_end":16833,"line_start":50,"line_end":50,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1061},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":16876,"byte_end":16880,"line_start":53,"line_end":53,"column_start":5,"column_end":9},"name":"Null","qualname":"::bson::Bson::Null","value":"Bson::Null","parent":{"krate":0,"index":1045},"children":[],"decl_id":null,"docs":" Null value\n","sig":null,"attributes":[{"value":"/ Null value","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":16857,"byte_end":16871,"line_start":52,"line_end":52,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1063},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":16913,"byte_end":16930,"line_start":55,"line_end":55,"column_start":5,"column_end":22},"name":"RegularExpression","qualname":"::bson::Bson::RegularExpression","value":"Bson::RegularExpression(Regex)","parent":{"krate":0,"index":1045},"children":[],"decl_id":null,"docs":" Regular expression\n","sig":null,"attributes":[{"value":"/ Regular expression","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":16886,"byte_end":16908,"line_start":54,"line_end":54,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1066},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":16967,"byte_end":16981,"line_start":57,"line_end":57,"column_start":5,"column_end":19},"name":"JavaScriptCode","qualname":"::bson::Bson::JavaScriptCode","value":"Bson::JavaScriptCode(String)","parent":{"krate":0,"index":1045},"children":[],"decl_id":null,"docs":" JavaScript code\n","sig":null,"attributes":[{"value":"/ JavaScript code","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":16943,"byte_end":16962,"line_start":56,"line_end":56,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1069},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":17028,"byte_end":17051,"line_start":59,"line_end":59,"column_start":5,"column_end":28},"name":"JavaScriptCodeWithScope","qualname":"::bson::Bson::JavaScriptCodeWithScope","value":"Bson::JavaScriptCodeWithScope(JavaScriptCodeWithScope)","parent":{"krate":0,"index":1045},"children":[],"decl_id":null,"docs":" JavaScript code w/ scope\n","sig":null,"attributes":[{"value":"/ JavaScript code w/ scope","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":16995,"byte_end":17023,"line_start":58,"line_end":58,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1072},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":17112,"byte_end":17117,"line_start":61,"line_end":61,"column_start":5,"column_end":10},"name":"Int32","qualname":"::bson::Bson::Int32","value":"Bson::Int32(i32)","parent":{"krate":0,"index":1045},"children":[],"decl_id":null,"docs":" 32-bit signed integer\n","sig":null,"attributes":[{"value":"/ 32-bit signed integer","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":17082,"byte_end":17107,"line_start":60,"line_end":60,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1075},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":17158,"byte_end":17163,"line_start":63,"line_end":63,"column_start":5,"column_end":10},"name":"Int64","qualname":"::bson::Bson::Int64","value":"Bson::Int64(i64)","parent":{"krate":0,"index":1045},"children":[],"decl_id":null,"docs":" 64-bit signed integer\n","sig":null,"attributes":[{"value":"/ 64-bit signed integer","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":17128,"byte_end":17153,"line_start":62,"line_end":62,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1078},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":17192,"byte_end":17201,"line_start":65,"line_end":65,"column_start":5,"column_end":14},"name":"Timestamp","qualname":"::bson::Bson::Timestamp","value":"Bson::Timestamp(Timestamp)","parent":{"krate":0,"index":1045},"children":[],"decl_id":null,"docs":" Timestamp\n","sig":null,"attributes":[{"value":"/ Timestamp","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":17174,"byte_end":17187,"line_start":64,"line_end":64,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1081},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":17238,"byte_end":17244,"line_start":67,"line_end":67,"column_start":5,"column_end":11},"name":"Binary","qualname":"::bson::Bson::Binary","value":"Bson::Binary(Binary)","parent":{"krate":0,"index":1045},"children":[],"decl_id":null,"docs":" Binary data\n","sig":null,"attributes":[{"value":"/ Binary data","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":17218,"byte_end":17233,"line_start":66,"line_end":66,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1084},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":17319,"byte_end":17327,"line_start":69,"line_end":69,"column_start":5,"column_end":13},"name":"ObjectId","qualname":"::bson::Bson::ObjectId","value":"Bson::ObjectId(oid::ObjectId)","parent":{"krate":0,"index":1045},"children":[],"decl_id":null,"docs":" [ObjectId](http://dochub.mongodb.org/core/objectids)\n","sig":null,"attributes":[{"value":"/ [ObjectId](http://dochub.mongodb.org/core/objectids)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":17258,"byte_end":17314,"line_start":68,"line_end":68,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1087},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":17369,"byte_end":17377,"line_start":71,"line_end":71,"column_start":5,"column_end":13},"name":"DateTime","qualname":"::bson::Bson::DateTime","value":"Bson::DateTime(chrono::DateTime<Utc>)","parent":{"krate":0,"index":1045},"children":[],"decl_id":null,"docs":" UTC datetime\n","sig":null,"attributes":[{"value":"/ UTC datetime","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":17348,"byte_end":17364,"line_start":70,"line_end":70,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1090},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":17434,"byte_end":17440,"line_start":73,"line_end":73,"column_start":5,"column_end":11},"name":"Symbol","qualname":"::bson::Bson::Symbol","value":"Bson::Symbol(String)","parent":{"krate":0,"index":1045},"children":[],"decl_id":null,"docs":" Symbol (Deprecated)\n","sig":null,"attributes":[{"value":"/ Symbol (Deprecated)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":17406,"byte_end":17429,"line_start":72,"line_end":72,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1093},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":17588,"byte_end":17598,"line_start":75,"line_end":75,"column_start":5,"column_end":15},"name":"Decimal128","qualname":"::bson::Bson::Decimal128","value":"Bson::Decimal128(Decimal128)","parent":{"krate":0,"index":1045},"children":[],"decl_id":null,"docs":" [128-bit decimal floating point](https://github.com/mongodb/specifications/blob/master/source/bson-decimal128/decimal128.rst)\n","sig":null,"attributes":[{"value":"/ [128-bit decimal floating point](https://github.com/mongodb/specifications/blob/master/source/bson-decimal128/decimal128.rst)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":17454,"byte_end":17583,"line_start":74,"line_end":74,"column_start":5,"column_end":134}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1096},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":17653,"byte_end":17662,"line_start":77,"line_end":77,"column_start":5,"column_end":14},"name":"Undefined","qualname":"::bson::Bson::Undefined","value":"Bson::Undefined","parent":{"krate":0,"index":1045},"children":[],"decl_id":null,"docs":" Undefined value (Deprecated)\n","sig":null,"attributes":[{"value":"/ Undefined value (Deprecated)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":17616,"byte_end":17648,"line_start":76,"line_end":76,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1098},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":17684,"byte_end":17690,"line_start":79,"line_end":79,"column_start":5,"column_end":11},"name":"MaxKey","qualname":"::bson::Bson::MaxKey","value":"Bson::MaxKey","parent":{"krate":0,"index":1045},"children":[],"decl_id":null,"docs":" Max key\n","sig":null,"attributes":[{"value":"/ Max key","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":17668,"byte_end":17679,"line_start":78,"line_end":78,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1100},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":17712,"byte_end":17718,"line_start":81,"line_end":81,"column_start":5,"column_end":11},"name":"MinKey","qualname":"::bson::Bson::MinKey","value":"Bson::MinKey","parent":{"krate":0,"index":1045},"children":[],"decl_id":null,"docs":" Min key\n","sig":null,"attributes":[{"value":"/ Min key","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":17696,"byte_end":17707,"line_start":80,"line_end":80,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1102},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":17755,"byte_end":17764,"line_start":83,"line_end":83,"column_start":5,"column_end":14},"name":"DbPointer","qualname":"::bson::Bson::DbPointer","value":"Bson::DbPointer(DbPointer)","parent":{"krate":0,"index":1045},"children":[],"decl_id":null,"docs":" DBPointer (Deprecated)\n","sig":null,"attributes":[{"value":"/ DBPointer (Deprecated)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":17724,"byte_end":17750,"line_start":82,"line_end":82,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":1045},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":16628,"byte_end":16632,"line_start":41,"line_end":41,"column_start":10,"column_end":14},"name":"Bson","qualname":"::bson::Bson","value":"Bson::{Double, String, Array, Document, Boolean, Null, RegularExpression, JavaScriptCode, JavaScriptCodeWithScope, Int32, Int64, Timestamp, Binary, ObjectId, DateTime, Symbol, Decimal128, Undefined, MaxKey, MinKey, DbPointer}","parent":null,"children":[{"krate":0,"index":1046},{"krate":0,"index":1049},{"krate":0,"index":1052},{"krate":0,"index":1055},{"krate":0,"index":1058},{"krate":0,"index":1061},{"krate":0,"index":1063},{"krate":0,"index":1066},{"krate":0,"index":1069},{"krate":0,"index":1072},{"krate":0,"index":1075},{"krate":0,"index":1078},{"krate":0,"index":1081},{"krate":0,"index":1084},{"krate":0,"index":1087},{"krate":0,"index":1090},{"krate":0,"index":1093},{"krate":0,"index":1096},{"krate":0,"index":1098},{"krate":0,"index":1100},{"krate":0,"index":1102}],"decl_id":null,"docs":" Possible BSON value types.\n","sig":null,"attributes":[{"value":"/ Possible BSON value types.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":16553,"byte_end":16583,"line_start":39,"line_end":39,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":50},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":17816,"byte_end":17821,"line_start":87,"line_end":87,"column_start":10,"column_end":15},"name":"Array","qualname":"::bson::Array","value":"Vec<Bson>","parent":null,"children":[],"decl_id":null,"docs":" Alias for `Vec<Bson>`.\n","sig":null,"attributes":[{"value":"/ Alias for `Vec<Bson>`.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":17780,"byte_end":17806,"line_start":86,"line_end":86,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":23670,"byte_end":23690,"line_start":316,"line_end":316,"column_start":12,"column_end":32},"name":"into_relaxed_extjson","qualname":"<Bson>::into_relaxed_extjson","value":"fn (self) -> Value","parent":null,"children":[],"decl_id":null,"docs":" Converts the Bson value into its [relaxed extended JSON representation](https://docs.mongodb.com/manual/reference/mongodb-extended-json/).","sig":null,"attributes":[{"value":"/ Converts the Bson value into its [relaxed extended JSON representation](https://docs.mongodb.com/manual/reference/mongodb-extended-json/).","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":23288,"byte_end":23430,"line_start":311,"line_end":311,"column_start":5,"column_end":147}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":23435,"byte_end":23438,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ Note: extended json encoding for `Decimal128` values is not supported without the","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":23443,"byte_end":23528,"line_start":313,"line_end":313,"column_start":5,"column_end":90}},{"value":"/ \"decimal128\" feature flag. If this method is called on a case which contains a","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":23533,"byte_end":23615,"line_start":314,"line_end":314,"column_start":5,"column_end":87}},{"value":"/ `Decimal128` value, it will panic.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":23620,"byte_end":23658,"line_start":315,"line_end":315,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":27774,"byte_end":27796,"line_start":420,"line_end":420,"column_start":12,"column_end":34},"name":"into_canonical_extjson","qualname":"<Bson>::into_canonical_extjson","value":"fn (self) -> Value","parent":null,"children":[],"decl_id":null,"docs":" Converts the Bson value into its [canonical extended JSON representation](https://docs.mongodb.com/manual/reference/mongodb-extended-json/).","sig":null,"attributes":[{"value":"/ Converts the Bson value into its [canonical extended JSON representation](https://docs.mongodb.com/manual/reference/mongodb-extended-json/).","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":27390,"byte_end":27534,"line_start":415,"line_end":415,"column_start":5,"column_end":149}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":27539,"byte_end":27542,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ Note: extended json encoding for `Decimal128` values is not supported without the","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":27547,"byte_end":27632,"line_start":417,"line_end":417,"column_start":5,"column_end":90}},{"value":"/ \"decimal128\" feature flag. If this method is called on a case which contains a","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":27637,"byte_end":27719,"line_start":418,"line_end":418,"column_start":5,"column_end":87}},{"value":"/ `Decimal128` value, it will panic.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":27724,"byte_end":27762,"line_start":419,"line_end":419,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":29222,"byte_end":29234,"line_start":458,"line_end":458,"column_start":12,"column_end":24},"name":"element_type","qualname":"<Bson>::element_type","value":"fn (&self) -> ElementType","parent":null,"children":[],"decl_id":null,"docs":" Get the `ElementType` of this value.\n","sig":null,"attributes":[{"value":"/ Get the `ElementType` of this value.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":29170,"byte_end":29210,"line_start":457,"line_end":457,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":41036,"byte_end":41042,"line_start":794,"line_end":794,"column_start":12,"column_end":18},"name":"as_f64","qualname":"<Bson>::as_f64","value":"fn (&self) -> Option<f64>","parent":null,"children":[],"decl_id":null,"docs":" If `Bson` is `Double`, return its value as an `f64`. Returns `None` otherwise\n","sig":null,"attributes":[{"value":"/ If `Bson` is `Double`, return its value as an `f64`. Returns `None` otherwise","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":40943,"byte_end":41024,"line_start":793,"line_end":793,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":41266,"byte_end":41272,"line_start":802,"line_end":802,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Bson>::as_str","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" If `Bson` is `String`, return its value as a `&str`. Returns `None` otherwise\n","sig":null,"attributes":[{"value":"/ If `Bson` is `String`, return its value as a `&str`. Returns `None` otherwise","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":41173,"byte_end":41254,"line_start":801,"line_end":801,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":41531,"byte_end":41541,"line_start":811,"line_end":811,"column_start":12,"column_end":22},"name":"as_str_mut","qualname":"<Bson>::as_str_mut","value":"fn (&mut self) -> Option<&mut str>","parent":null,"children":[],"decl_id":null,"docs":" If `Bson` is `String`, return a mutable reference to its value as a `str`. Returns `None`\n otherwise\n","sig":null,"attributes":[{"value":"/ If `Bson` is `String`, return a mutable reference to its value as a `str`. Returns `None`","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":41408,"byte_end":41501,"line_start":809,"line_end":809,"column_start":5,"column_end":98}},{"value":"/ otherwise","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":41506,"byte_end":41519,"line_start":810,"line_end":810,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":41769,"byte_end":41777,"line_start":819,"line_end":819,"column_start":12,"column_end":20},"name":"as_array","qualname":"<Bson>::as_array","value":"fn (&self) -> Option<&Array>","parent":null,"children":[],"decl_id":null,"docs":" If `Bson` is `Array`, return its value. Returns `None` otherwise\n","sig":null,"attributes":[{"value":"/ If `Bson` is `Array`, return its value. Returns `None` otherwise","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":41689,"byte_end":41757,"line_start":818,"line_end":818,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":42017,"byte_end":42029,"line_start":827,"line_end":827,"column_start":12,"column_end":24},"name":"as_array_mut","qualname":"<Bson>::as_array_mut","value":"fn (&mut self) -> Option<&mut Array>","parent":null,"children":[],"decl_id":null,"docs":" If `Bson` is `Array`, return a mutable reference to its value. Returns `None` otherwise\n","sig":null,"attributes":[{"value":"/ If `Bson` is `Array`, return a mutable reference to its value. Returns `None` otherwise","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":41914,"byte_end":42005,"line_start":826,"line_end":826,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":42261,"byte_end":42272,"line_start":835,"line_end":835,"column_start":12,"column_end":23},"name":"as_document","qualname":"<Bson>::as_document","value":"fn (&self) -> Option<&Document>","parent":null,"children":[],"decl_id":null,"docs":" If `Bson` is `Document`, return its value. Returns `None` otherwise\n","sig":null,"attributes":[{"value":"/ If `Bson` is `Document`, return its value. Returns `None` otherwise","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":42178,"byte_end":42249,"line_start":834,"line_end":834,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":42521,"byte_end":42536,"line_start":843,"line_end":843,"column_start":12,"column_end":27},"name":"as_document_mut","qualname":"<Bson>::as_document_mut","value":"fn (&mut self) -> Option<&mut Document>","parent":null,"children":[],"decl_id":null,"docs":" If `Bson` is `Document`, return a mutable reference to its value. Returns `None` otherwise\n","sig":null,"attributes":[{"value":"/ If `Bson` is `Document`, return a mutable reference to its value. Returns `None` otherwise","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":42415,"byte_end":42509,"line_start":842,"line_end":842,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":42770,"byte_end":42777,"line_start":851,"line_end":851,"column_start":12,"column_end":19},"name":"as_bool","qualname":"<Bson>::as_bool","value":"fn (&self) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" If `Bson` is `Bool`, return its value. Returns `None` otherwise\n","sig":null,"attributes":[{"value":"/ If `Bson` is `Bool`, return its value. Returns `None` otherwise","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":42691,"byte_end":42758,"line_start":850,"line_end":850,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":42988,"byte_end":42994,"line_start":859,"line_end":859,"column_start":12,"column_end":18},"name":"as_i32","qualname":"<Bson>::as_i32","value":"fn (&self) -> Option<i32>","parent":null,"children":[],"decl_id":null,"docs":" If `Bson` is `I32`, return its value. Returns `None` otherwise\n","sig":null,"attributes":[{"value":"/ If `Bson` is `I32`, return its value. Returns `None` otherwise","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":42910,"byte_end":42976,"line_start":858,"line_end":858,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":43202,"byte_end":43208,"line_start":867,"line_end":867,"column_start":12,"column_end":18},"name":"as_i64","qualname":"<Bson>::as_i64","value":"fn (&self) -> Option<i64>","parent":null,"children":[],"decl_id":null,"docs":" If `Bson` is `I64`, return its value. Returns `None` otherwise\n","sig":null,"attributes":[{"value":"/ If `Bson` is `I64`, return its value. Returns `None` otherwise","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":43124,"byte_end":43190,"line_start":866,"line_end":866,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":43421,"byte_end":43433,"line_start":875,"line_end":875,"column_start":12,"column_end":24},"name":"as_object_id","qualname":"<Bson>::as_object_id","value":"fn (&self) -> Option<&oid::ObjectId>","parent":null,"children":[],"decl_id":null,"docs":" If `Bson` is `Objectid`, return its value. Returns `None` otherwise\n","sig":null,"attributes":[{"value":"/ If `Bson` is `Objectid`, return its value. Returns `None` otherwise","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":43338,"byte_end":43409,"line_start":874,"line_end":874,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":43687,"byte_end":43703,"line_start":883,"line_end":883,"column_start":12,"column_end":28},"name":"as_object_id_mut","qualname":"<Bson>::as_object_id_mut","value":"fn (&mut self) -> Option<&mut oid::ObjectId>","parent":null,"children":[],"decl_id":null,"docs":" If `Bson` is `Objectid`, return a mutable reference to its value. Returns `None` otherwise\n","sig":null,"attributes":[{"value":"/ If `Bson` is `Objectid`, return a mutable reference to its value. Returns `None` otherwise","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":43581,"byte_end":43675,"line_start":882,"line_end":882,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":43946,"byte_end":43957,"line_start":891,"line_end":891,"column_start":12,"column_end":23},"name":"as_datetime","qualname":"<Bson>::as_datetime","value":"fn (&self) -> Option<&chrono::DateTime<Utc>>","parent":null,"children":[],"decl_id":null,"docs":" If `Bson` is `DateTime`, return its value. Returns `None` otherwise\n","sig":null,"attributes":[{"value":"/ If `Bson` is `DateTime`, return its value. Returns `None` otherwise","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":43863,"byte_end":43934,"line_start":890,"line_end":890,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":44227,"byte_end":44242,"line_start":900,"line_end":900,"column_start":12,"column_end":27},"name":"as_datetime_mut","qualname":"<Bson>::as_datetime_mut","value":"fn (&mut self) -> Option<&mut chrono::DateTime<Utc>>","parent":null,"children":[],"decl_id":null,"docs":" If `Bson` is `DateTime`, return a mutable reference to its value. Returns `None`\n otherwise\n","sig":null,"attributes":[{"value":"/ If `Bson` is `DateTime`, return a mutable reference to its value. Returns `None`","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":44113,"byte_end":44197,"line_start":898,"line_end":898,"column_start":5,"column_end":89}},{"value":"/ otherwise","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":44202,"byte_end":44215,"line_start":899,"line_end":899,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":44491,"byte_end":44500,"line_start":908,"line_end":908,"column_start":12,"column_end":21},"name":"as_symbol","qualname":"<Bson>::as_symbol","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" If `Bson` is `Symbol`, return its value. Returns `None` otherwise\n","sig":null,"attributes":[{"value":"/ If `Bson` is `Symbol`, return its value. Returns `None` otherwise","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":44410,"byte_end":44479,"line_start":907,"line_end":907,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":44740,"byte_end":44753,"line_start":916,"line_end":916,"column_start":12,"column_end":25},"name":"as_symbol_mut","qualname":"<Bson>::as_symbol_mut","value":"fn (&mut self) -> Option<&mut str>","parent":null,"children":[],"decl_id":null,"docs":" If `Bson` is `Symbol`, return a mutable reference to its value. Returns `None` otherwise\n","sig":null,"attributes":[{"value":"/ If `Bson` is `Symbol`, return a mutable reference to its value. Returns `None` otherwise","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":44636,"byte_end":44728,"line_start":915,"line_end":915,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":44985,"byte_end":44997,"line_start":924,"line_end":924,"column_start":12,"column_end":24},"name":"as_timestamp","qualname":"<Bson>::as_timestamp","value":"fn (&self) -> Option<Timestamp>","parent":null,"children":[],"decl_id":null,"docs":" If `Bson` is `Timestamp`, return its value. Returns `None` otherwise\n","sig":null,"attributes":[{"value":"/ If `Bson` is `Timestamp`, return its value. Returns `None` otherwise","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":44901,"byte_end":44973,"line_start":923,"line_end":923,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":45232,"byte_end":45239,"line_start":932,"line_end":932,"column_start":12,"column_end":19},"name":"as_null","qualname":"<Bson>::as_null","value":"fn (&self) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" If `Bson` is `Null`, return its value. Returns `None` otherwise\n","sig":null,"attributes":[{"value":"/ If `Bson` is `Null`, return its value. Returns `None` otherwise","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":45153,"byte_end":45220,"line_start":931,"line_end":931,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":45372,"byte_end":45385,"line_start":939,"line_end":939,"column_start":12,"column_end":25},"name":"as_db_pointer","qualname":"<Bson>::as_db_pointer","value":"fn (&self) -> Option<&DbPointer>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1113},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":45663,"byte_end":45672,"line_start":949,"line_end":949,"column_start":12,"column_end":21},"name":"Timestamp","qualname":"::bson::Timestamp","value":"Timestamp { time, increment }","parent":null,"children":[{"krate":0,"index":1114},{"krate":0,"index":1115}],"decl_id":null,"docs":" Represents a BSON timestamp value.\n","sig":null,"attributes":[{"value":"/ Represents a BSON timestamp value.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":45545,"byte_end":45583,"line_start":947,"line_end":947,"column_start":1,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":1114},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":45735,"byte_end":45739,"line_start":951,"line_end":951,"column_start":9,"column_end":13},"name":"time","qualname":"::bson::Timestamp::time","value":"u32","parent":{"krate":0,"index":1113},"children":[],"decl_id":null,"docs":" The number of seconds since the Unix epoch.\n","sig":null,"attributes":[{"value":"/ The number of seconds since the Unix epoch.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":45679,"byte_end":45726,"line_start":950,"line_end":950,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1115},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":45866,"byte_end":45875,"line_start":955,"line_end":955,"column_start":9,"column_end":18},"name":"increment","qualname":"::bson::Timestamp::increment","value":"u32","parent":{"krate":0,"index":1113},"children":[],"decl_id":null,"docs":" An incrementing value to order timestamps with the same number of seconds in the `time`\n field.\n","sig":null,"attributes":[{"value":"/ An incrementing value to order timestamps with the same number of seconds in the `time`","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":45751,"byte_end":45842,"line_start":953,"line_end":953,"column_start":5,"column_end":96}},{"value":"/ field.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":45847,"byte_end":45857,"line_start":954,"line_end":954,"column_start":5,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":1143},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":46669,"byte_end":46677,"line_start":990,"line_end":990,"column_start":12,"column_end":20},"name":"DateTime","qualname":"::bson::DateTime","value":"","parent":null,"children":[],"decl_id":null,"docs":" `DateTime` representation in struct for serde serialization","sig":null,"attributes":[{"value":"/ `DateTime` representation in struct for serde serialization","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":46305,"byte_end":46368,"line_start":976,"line_end":976,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":46369,"byte_end":46372,"line_start":977,"line_end":977,"column_start":1,"column_end":4}},{"value":"/ Just a helper for convenience","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":46373,"byte_end":46406,"line_start":978,"line_end":978,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":46407,"byte_end":46410,"line_start":979,"line_end":979,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":46411,"byte_end":46422,"line_start":980,"line_end":980,"column_start":1,"column_end":12}},{"value":"/ use serde::{Serialize, Deserialize};","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":46423,"byte_end":46463,"line_start":981,"line_end":981,"column_start":1,"column_end":41}},{"value":"/ use bson::DateTime;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":46464,"byte_end":46487,"line_start":982,"line_end":982,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":46488,"byte_end":46491,"line_start":983,"line_end":983,"column_start":1,"column_end":4}},{"value":"/ #[derive(Serialize, Deserialize)]","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":46492,"byte_end":46529,"line_start":984,"line_end":984,"column_start":1,"column_end":38}},{"value":"/ struct Foo {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":46530,"byte_end":46546,"line_start":985,"line_end":985,"column_start":1,"column_end":17}},{"value":"/     date_time: DateTime,","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":46547,"byte_end":46575,"line_start":986,"line_end":986,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":46576,"byte_end":46581,"line_start":987,"line_end":987,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":46582,"byte_end":46589,"line_start":988,"line_end":988,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1169},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":48499,"byte_end":48504,"line_start":1051,"line_end":1051,"column_start":12,"column_end":17},"name":"Regex","qualname":"::bson::Regex","value":"Regex { pattern, options }","parent":null,"children":[{"krate":0,"index":1170},{"krate":0,"index":1171}],"decl_id":null,"docs":" Represents a BSON regular expression value.\n","sig":null,"attributes":[{"value":"/ Represents a BSON regular expression value.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":48405,"byte_end":48452,"line_start":1049,"line_end":1049,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":1170},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":48551,"byte_end":48558,"line_start":1053,"line_end":1053,"column_start":9,"column_end":16},"name":"pattern","qualname":"::bson::Regex::pattern","value":"std::string::String","parent":{"krate":0,"index":1169},"children":[],"decl_id":null,"docs":" The regex pattern to match.\n","sig":null,"attributes":[{"value":"/ The regex pattern to match.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":48511,"byte_end":48542,"line_start":1052,"line_end":1052,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":1171},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":48978,"byte_end":48985,"line_start":1062,"line_end":1062,"column_start":9,"column_end":16},"name":"options","qualname":"::bson::Regex::options","value":"std::string::String","parent":{"krate":0,"index":1169},"children":[],"decl_id":null,"docs":" The options for the regex.","sig":null,"attributes":[{"value":"/ The options for the regex.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":48573,"byte_end":48603,"line_start":1055,"line_end":1055,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":48608,"byte_end":48611,"line_start":1056,"line_end":1056,"column_start":5,"column_end":8}},{"value":"/ Options are identified by characters, which must be stored in","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":48616,"byte_end":48681,"line_start":1057,"line_end":1057,"column_start":5,"column_end":70}},{"value":"/ alphabetical order. Valid options are 'i' for case insensitive matching, 'm' for","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":48686,"byte_end":48770,"line_start":1058,"line_end":1058,"column_start":5,"column_end":89}},{"value":"/ multiline matching, 'x' for verbose mode, 'l' to make \\w, \\W, etc. locale dependent,","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":48775,"byte_end":48863,"line_start":1059,"line_end":1059,"column_start":5,"column_end":93}},{"value":"/ 's' for dotall mode ('.' matches everything), and 'u' to make \\w, \\W, etc. match","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":48868,"byte_end":48952,"line_start":1060,"line_end":1060,"column_start":5,"column_end":89}},{"value":"/ unicode.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":48957,"byte_end":48969,"line_start":1061,"line_end":1061,"column_start":5,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":1180},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":49089,"byte_end":49112,"line_start":1067,"line_end":1067,"column_start":12,"column_end":35},"name":"JavaScriptCodeWithScope","qualname":"::bson::JavaScriptCodeWithScope","value":"JavaScriptCodeWithScope { code, scope }","parent":null,"children":[{"krate":0,"index":1181},{"krate":0,"index":1182}],"decl_id":null,"docs":" Represents a BSON code with scope value.\n","sig":null,"attributes":[{"value":"/ Represents a BSON code with scope value.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":48998,"byte_end":49042,"line_start":1065,"line_end":1065,"column_start":1,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":1181},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":49123,"byte_end":49127,"line_start":1068,"line_end":1068,"column_start":9,"column_end":13},"name":"code","qualname":"::bson::JavaScriptCodeWithScope::code","value":"std::string::String","parent":{"krate":0,"index":1180},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1182},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":49145,"byte_end":49150,"line_start":1069,"line_end":1069,"column_start":9,"column_end":14},"name":"scope","qualname":"::bson::JavaScriptCodeWithScope::scope","value":"document::Document","parent":{"krate":0,"index":1180},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1191},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":49247,"byte_end":49253,"line_start":1074,"line_end":1074,"column_start":12,"column_end":18},"name":"Binary","qualname":"::bson::Binary","value":"Binary { subtype, bytes }","parent":null,"children":[{"krate":0,"index":1192},{"krate":0,"index":1193}],"decl_id":null,"docs":" Represents a BSON binary value.\n","sig":null,"attributes":[{"value":"/ Represents a BSON binary value.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":49165,"byte_end":49200,"line_start":1072,"line_end":1072,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":1192},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":49298,"byte_end":49305,"line_start":1076,"line_end":1076,"column_start":9,"column_end":16},"name":"subtype","qualname":"::bson::Binary::subtype","value":"spec::BinarySubtype","parent":{"krate":0,"index":1191},"children":[],"decl_id":null,"docs":" The subtype of the bytes.\n","sig":null,"attributes":[{"value":"/ The subtype of the bytes.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":49260,"byte_end":49289,"line_start":1075,"line_end":1075,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":1193},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":49357,"byte_end":49362,"line_start":1079,"line_end":1079,"column_start":9,"column_end":14},"name":"bytes","qualname":"::bson::Binary::bytes","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":1191},"children":[],"decl_id":null,"docs":" The binary bytes.\n","sig":null,"attributes":[{"value":"/ The binary bytes.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":49327,"byte_end":49348,"line_start":1078,"line_end":1078,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":1202},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":49990,"byte_end":49999,"line_start":1103,"line_end":1103,"column_start":12,"column_end":21},"name":"DbPointer","qualname":"::bson::DbPointer","value":"DbPointer {  }","parent":null,"children":[{"krate":0,"index":1203},{"krate":0,"index":1204}],"decl_id":null,"docs":" Represents a DBPointer. (Deprecated)\n","sig":null,"attributes":[{"value":"/ Represents a DBPointer. (Deprecated)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":49903,"byte_end":49943,"line_start":1101,"line_end":1101,"column_start":1,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":156},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\compat\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"compat","qualname":"::compat","value":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\compat\\mod.rs","parent":null,"children":[{"krate":0,"index":157}],"decl_id":null,"docs":" Backward compatibility\n","sig":null,"attributes":[{"value":"! Backward compatibility","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\compat\\mod.rs","byte_start":50073,"byte_end":50099,"line_start":1,"line_end":1,"column_start":1,"column_end":27}}]},{"kind":"Mod","id":{"krate":0,"index":157},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\compat\\u2f.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"u2f","qualname":"::compat::u2f","value":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\compat\\u2f.rs","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":162},{"krate":0,"index":164},{"krate":0,"index":166},{"krate":0,"index":168},{"krate":0,"index":170},{"krate":0,"index":172},{"krate":0,"index":175},{"krate":0,"index":177},{"krate":0,"index":179},{"krate":0,"index":181},{"krate":0,"index":183},{"krate":0,"index":185}],"decl_id":null,"docs":" Convert unsigned types to/from `Bson::Double`\n","sig":null,"attributes":[{"value":"! Convert unsigned types to/from `Bson::Double`","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\compat\\u2f.rs","byte_start":50115,"byte_end":50164,"line_start":1,"line_end":1,"column_start":1,"column_end":50}}]},{"kind":"Trait","id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\compat\\u2f.rs","byte_start":50276,"byte_end":50281,"line_start":6,"line_end":6,"column_start":11,"column_end":16},"name":"ToF64","qualname":"::compat::u2f::ToF64","value":"ToF64","parent":null,"children":[{"krate":0,"index":163}],"decl_id":null,"docs":" Converts primitive unsigned types to `f64`\n","sig":null,"attributes":[{"value":"/ Converts primitive unsigned types to `f64`","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\compat\\u2f.rs","byte_start":50219,"byte_end":50265,"line_start":5,"line_end":5,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\compat\\u2f.rs","byte_start":50323,"byte_end":50329,"line_start":8,"line_end":8,"column_start":8,"column_end":14},"name":"to_f64","qualname":"::compat::u2f::ToF64::to_f64","value":"fn (&self) -> f64","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":" Converts to `f64` value\n","sig":null,"attributes":[{"value":"/ Converts to `f64` value","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\compat\\u2f.rs","byte_start":50288,"byte_end":50315,"line_start":7,"line_end":7,"column_start":5,"column_end":32}}]},{"kind":"Function","id":{"krate":0,"index":172},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\compat\\u2f.rs","byte_start":50725,"byte_end":50734,"line_start":36,"line_end":36,"column_start":8,"column_end":17},"name":"serialize","qualname":"::compat::u2f::serialize","value":"fn <T, S> (v: &T, s: S) -> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Serialize unsigned types to `Bson::Double`\n","sig":null,"attributes":[{"value":"/ Serialize unsigned types to `Bson::Double`","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\compat\\u2f.rs","byte_start":50671,"byte_end":50717,"line_start":35,"line_end":35,"column_start":1,"column_end":47}}]},{"kind":"Trait","id":{"krate":0,"index":175},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\compat\\u2f.rs","byte_start":50897,"byte_end":50904,"line_start":45,"line_end":45,"column_start":11,"column_end":18},"name":"FromF64","qualname":"::compat::u2f::FromF64","value":"FromF64","parent":null,"children":[{"krate":0,"index":176}],"decl_id":null,"docs":" Converts from `f64` value\n","sig":null,"attributes":[{"value":"/ Converts from `f64` value","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\compat\\u2f.rs","byte_start":50857,"byte_end":50886,"line_start":44,"line_end":44,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\compat\\u2f.rs","byte_start":50948,"byte_end":50956,"line_start":47,"line_end":47,"column_start":8,"column_end":16},"name":"from_f64","qualname":"::compat::u2f::FromF64::from_f64","value":"fn (v: f64) -> Self","parent":{"krate":0,"index":175},"children":[],"decl_id":null,"docs":" Converts from `f64` value\n","sig":null,"attributes":[{"value":"/ Converts from `f64` value","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\compat\\u2f.rs","byte_start":50911,"byte_end":50940,"line_start":46,"line_end":46,"column_start":5,"column_end":34}}]},{"kind":"Function","id":{"krate":0,"index":185},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\compat\\u2f.rs","byte_start":51358,"byte_end":51369,"line_start":75,"line_end":75,"column_start":8,"column_end":19},"name":"deserialize","qualname":"::compat::u2f::deserialize","value":"fn <'de, T, D> (d: D) -> Result<T, D::Error>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize unsigned types to `Bson::Double`\n","sig":null,"attributes":[{"value":"/ Deserialize unsigned types to `Bson::Double`","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\compat\\u2f.rs","byte_start":51302,"byte_end":51350,"line_start":74,"line_end":74,"column_start":1,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":189},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"de","qualname":"::de","value":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\mod.rs","parent":null,"children":[{"krate":0,"index":190},{"krate":0,"index":216},{"krate":0,"index":396},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":405},{"krate":0,"index":410},{"krate":0,"index":425},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":437},{"krate":0,"index":439},{"krate":0,"index":441},{"krate":0,"index":443},{"krate":0,"index":445},{"krate":0,"index":448},{"krate":0,"index":451},{"krate":0,"index":457}],"decl_id":null,"docs":" Deserializer\n","sig":null,"attributes":[{"value":"! Deserializer","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\mod.rs","byte_start":52652,"byte_end":52668,"line_start":22,"line_end":22,"column_start":1,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1214},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\error.rs","byte_start":63088,"byte_end":63095,"line_start":12,"line_end":12,"column_start":5,"column_end":12},"name":"IoError","qualname":"::de::error::Error::IoError","value":"Error::IoError(io::Error)","parent":{"krate":0,"index":1213},"children":[],"decl_id":null,"docs":" A [`std::io::Error`](https://doc.rust-lang.org/std/io/struct.Error.html) encountered while deserializing.\n","sig":null,"attributes":[{"value":"/ A [`std::io::Error`](https://doc.rust-lang.org/std/io/struct.Error.html) encountered while deserializing.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\error.rs","byte_start":62974,"byte_end":63083,"line_start":11,"line_end":11,"column_start":5,"column_end":114}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1217},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\error.rs","byte_start":63289,"byte_end":63302,"line_start":16,"line_end":16,"column_start":5,"column_end":18},"name":"FromUtf8Error","qualname":"::de::error::Error::FromUtf8Error","value":"Error::FromUtf8Error(string::FromUtf8Error)","parent":{"krate":0,"index":1213},"children":[],"decl_id":null,"docs":" A [`std::string::FromUtf8Error`](https://doc.rust-lang.org/std/string/struct.FromUtf8Error.html) encountered\n while decoding a UTF-8 String from the input data.\n","sig":null,"attributes":[{"value":"/ A [`std::string::FromUtf8Error`](https://doc.rust-lang.org/std/string/struct.FromUtf8Error.html) encountered","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\error.rs","byte_start":63113,"byte_end":63225,"line_start":14,"line_end":14,"column_start":5,"column_end":117}},{"value":"/ while decoding a UTF-8 String from the input data.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\error.rs","byte_start":63230,"byte_end":63284,"line_start":15,"line_end":15,"column_start":5,"column_end":59}}]},{"kind":"StructVariant","id":{"krate":0,"index":1220},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\error.rs","byte_start":63447,"byte_end":63478,"line_start":20,"line_end":20,"column_start":5,"column_end":36},"name":"UnrecognizedDocumentElementType","qualname":"::de::error::Error::UnrecognizedDocumentElementType","value":"Error::UnrecognizedDocumentElementType { key, element_type }","parent":{"krate":0,"index":1213},"children":[],"decl_id":null,"docs":" While decoding a `Document` from bytes, an unexpected or unsupported element type was\n encountered.\n","sig":null,"attributes":[{"value":"/ While decoding a `Document` from bytes, an unexpected or unsupported element type was","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\error.rs","byte_start":63332,"byte_end":63421,"line_start":18,"line_end":18,"column_start":5,"column_end":94}},{"value":"/ encountered.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\error.rs","byte_start":63426,"byte_end":63442,"line_start":19,"line_end":19,"column_start":5,"column_end":21}}]},{"kind":"StructVariant","id":{"krate":0,"index":1223},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\error.rs","byte_start":63739,"byte_end":63750,"line_start":29,"line_end":29,"column_start":5,"column_end":16},"name":"SyntaxError","qualname":"::de::error::Error::SyntaxError","value":"Error::SyntaxError { message }","parent":{"krate":0,"index":1213},"children":[],"decl_id":null,"docs":" There was an error with the syntactical structure of the BSON.\n","sig":null,"attributes":[{"value":"/ There was an error with the syntactical structure of the BSON.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\error.rs","byte_start":63668,"byte_end":63734,"line_start":28,"line_end":28,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1225},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\error.rs","byte_start":63833,"byte_end":63844,"line_start":32,"line_end":32,"column_start":5,"column_end":16},"name":"EndOfStream","qualname":"::de::error::Error::EndOfStream","value":"Error::EndOfStream","parent":{"krate":0,"index":1213},"children":[],"decl_id":null,"docs":" The end of the BSON input was reached too soon.\n","sig":null,"attributes":[{"value":"/ The end of the BSON input was reached too soon.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\error.rs","byte_start":63777,"byte_end":63828,"line_start":31,"line_end":31,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1227},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\error.rs","byte_start":63912,"byte_end":63928,"line_start":35,"line_end":35,"column_start":5,"column_end":21},"name":"InvalidTimestamp","qualname":"::de::error::Error::InvalidTimestamp","value":"Error::InvalidTimestamp(i64)","parent":{"krate":0,"index":1213},"children":[],"decl_id":null,"docs":" An invalid timestamp was encountered while decoding.\n","sig":null,"attributes":[{"value":"/ An invalid timestamp was encountered while decoding.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\error.rs","byte_start":63851,"byte_end":63907,"line_start":34,"line_end":34,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1230},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\error.rs","byte_start":64003,"byte_end":64021,"line_start":38,"line_end":38,"column_start":5,"column_end":23},"name":"AmbiguousTimestamp","qualname":"::de::error::Error::AmbiguousTimestamp","value":"Error::AmbiguousTimestamp(i64)","parent":{"krate":0,"index":1213},"children":[],"decl_id":null,"docs":" An ambiguous timestamp was encountered while decoding.\n","sig":null,"attributes":[{"value":"/ An ambiguous timestamp was encountered while decoding.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\error.rs","byte_start":63940,"byte_end":63998,"line_start":37,"line_end":37,"column_start":5,"column_end":63}}]},{"kind":"StructVariant","id":{"krate":0,"index":1233},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\error.rs","byte_start":64154,"byte_end":64174,"line_start":42,"line_end":42,"column_start":5,"column_end":25},"name":"DeserializationError","qualname":"::de::error::Error::DeserializationError","value":"Error::DeserializationError { message }","parent":{"krate":0,"index":1213},"children":[],"decl_id":null,"docs":" A general error encountered during deserialization.\n See: https://docs.serde.rs/serde/de/trait.Error.html\n","sig":null,"attributes":[{"value":"/ A general error encountered during deserialization.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\error.rs","byte_start":64033,"byte_end":64088,"line_start":40,"line_end":40,"column_start":5,"column_end":60}},{"value":"/ See: https://docs.serde.rs/serde/de/trait.Error.html","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\error.rs","byte_start":64093,"byte_end":64149,"line_start":41,"line_end":41,"column_start":5,"column_end":61}}]},{"kind":"Enum","id":{"krate":0,"index":1213},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\error.rs","byte_start":62962,"byte_end":62967,"line_start":10,"line_end":10,"column_start":10,"column_end":15},"name":"Error","qualname":"::de::error::Error","value":"Error::{IoError, FromUtf8Error, UnrecognizedDocumentElementType, SyntaxError, EndOfStream, InvalidTimestamp, AmbiguousTimestamp, DeserializationError}","parent":null,"children":[{"krate":0,"index":1214},{"krate":0,"index":1217},{"krate":0,"index":1220},{"krate":0,"index":1223},{"krate":0,"index":1225},{"krate":0,"index":1227},{"krate":0,"index":1230},{"krate":0,"index":1233}],"decl_id":null,"docs":" Possible errors that can arise during decoding.\n","sig":null,"attributes":[{"value":"/ Possible errors that can arise during decoding.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\error.rs","byte_start":62866,"byte_end":62917,"line_start":7,"line_end":7,"column_start":1,"column_end":52}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\error.rs","byte_start":62935,"byte_end":62952,"line_start":9,"line_end":9,"column_start":1,"column_end":18}}]},{"kind":"Type","id":{"krate":0,"index":212},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\error.rs","byte_start":65886,"byte_end":65892,"line_start":101,"line_end":101,"column_start":10,"column_end":16},"name":"Result","qualname":"::de::error::Result","value":"std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Alias for `Result<T, Error>`.\n","sig":null,"attributes":[{"value":"/ Alias for `Result<T, Error>`.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\error.rs","byte_start":65843,"byte_end":65876,"line_start":100,"line_end":100,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":303},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\serde.rs","byte_start":72709,"byte_end":72721,"line_start":234,"line_end":234,"column_start":12,"column_end":24},"name":"Deserializer","qualname":"::de::serde::Deserializer","value":"Deserializer {  }","parent":null,"children":[{"krate":0,"index":304}],"decl_id":null,"docs":" Serde Deserializer\n","sig":null,"attributes":[{"value":"/ Serde Deserializer","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\serde.rs","byte_start":72675,"byte_end":72697,"line_start":233,"line_end":233,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\serde.rs","byte_start":72783,"byte_end":72786,"line_start":239,"line_end":239,"column_start":12,"column_end":15},"name":"new","qualname":"<Deserializer>::new","value":"fn (value: Bson) -> Deserializer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":457},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\mod.rs","byte_start":62612,"byte_end":62621,"line_start":334,"line_end":334,"column_start":8,"column_end":17},"name":"from_bson","qualname":"::de::from_bson","value":"fn <'de, T> (bson: Bson) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Decode a BSON `Value` into a `T` Deserializable.\n","sig":null,"attributes":[{"value":"/ Decode a BSON `Value` into a `T` Deserializable.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\mod.rs","byte_start":62552,"byte_end":62604,"line_start":333,"line_end":333,"column_start":1,"column_end":53}}]},{"kind":"Mod","id":{"krate":0,"index":460},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\decimal128.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"decimal128","qualname":"::decimal128","value":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\decimal128.rs","parent":null,"children":[{"krate":0,"index":461},{"krate":0,"index":1399},{"krate":0,"index":1412},{"krate":0,"index":1408},{"krate":0,"index":1409},{"krate":0,"index":1402},{"krate":0,"index":462},{"krate":0,"index":464}],"decl_id":null,"docs":" [BSON Decimal128](https://github.com/mongodb/specifications/blob/master/source/bson-decimal128/decimal128.rst) data type representation\n","sig":null,"attributes":[{"value":"! [BSON Decimal128](https://github.com/mongodb/specifications/blob/master/source/bson-decimal128/decimal128.rst) data type representation","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\decimal128.rs","byte_start":88234,"byte_end":88373,"line_start":1,"line_end":1,"column_start":1,"column_end":140}}]},{"kind":"Struct","id":{"krate":0,"index":1399},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\decimal128.rs","byte_start":88877,"byte_end":88887,"line_start":16,"line_end":16,"column_start":12,"column_end":22},"name":"Decimal128","qualname":"::decimal128::Decimal128","value":"Decimal128 {  }","parent":null,"children":[{"krate":0,"index":1400}],"decl_id":null,"docs":" Decimal128 type.","sig":null,"attributes":[{"value":"/ Decimal128 type.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\decimal128.rs","byte_start":88440,"byte_end":88460,"line_start":7,"line_end":7,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\decimal128.rs","byte_start":88461,"byte_end":88464,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Currently, this type does not have any functionality and can only be serialized and","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\decimal128.rs","byte_start":88465,"byte_end":88552,"line_start":9,"line_end":9,"column_start":1,"column_end":88}},{"value":"/ deserialized from existing documents that contain BSON decimal128s.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\decimal128.rs","byte_start":88553,"byte_end":88624,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\decimal128.rs","byte_start":88625,"byte_end":88628,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Experimental functionality can be enabled through the usage of the `\"decimal128\"`","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\decimal128.rs","byte_start":88629,"byte_end":88714,"line_start":12,"line_end":12,"column_start":1,"column_end":86}},{"value":"/ feature flag. Note that the API and behavior of such functionality are unstable and","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\decimal128.rs","byte_start":88715,"byte_end":88802,"line_start":13,"line_end":13,"column_start":1,"column_end":88}},{"value":"/ subject to change.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\decimal128.rs","byte_start":88803,"byte_end":88825,"line_start":14,"line_end":14,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":466},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"document","qualname":"::document","value":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","parent":null,"children":[{"krate":0,"index":467},{"krate":0,"index":484},{"krate":0,"index":487},{"krate":0,"index":490},{"krate":0,"index":493},{"krate":0,"index":498},{"krate":0,"index":1414},{"krate":0,"index":1419},{"krate":0,"index":1420},{"krate":0,"index":514},{"krate":0,"index":516},{"krate":0,"index":518},{"krate":0,"index":520},{"krate":0,"index":1422},{"krate":0,"index":1428},{"krate":0,"index":1424},{"krate":0,"index":1425},{"krate":0,"index":521},{"krate":0,"index":523},{"krate":0,"index":525},{"krate":0,"index":527},{"krate":0,"index":529},{"krate":0,"index":532},{"krate":0,"index":535},{"krate":0,"index":538},{"krate":0,"index":541},{"krate":0,"index":545},{"krate":0,"index":549},{"krate":0,"index":553},{"krate":0,"index":558},{"krate":0,"index":561},{"krate":0,"index":565},{"krate":0,"index":569},{"krate":0,"index":621},{"krate":0,"index":624},{"krate":0,"index":630},{"krate":0,"index":632},{"krate":0,"index":634},{"krate":0,"index":636},{"krate":0,"index":644}],"decl_id":null,"docs":" A BSON document represented as an associative HashMap with insertion ordering.\n","sig":null,"attributes":[{"value":"! A BSON document represented as an associative HashMap with insertion ordering.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":96731,"byte_end":96813,"line_start":1,"line_end":1,"column_start":1,"column_end":83}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1415},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":97722,"byte_end":97732,"line_start":36,"line_end":36,"column_start":5,"column_end":15},"name":"NotPresent","qualname":"::document::ValueAccessError::NotPresent","value":"ValueAccessError::NotPresent","parent":{"krate":0,"index":1414},"children":[],"decl_id":null,"docs":" Cannot find the expected field with the specified key\n","sig":null,"attributes":[{"value":"/ Cannot find the expected field with the specified key","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":97660,"byte_end":97717,"line_start":35,"line_end":35,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1417},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":97820,"byte_end":97834,"line_start":38,"line_end":38,"column_start":5,"column_end":19},"name":"UnexpectedType","qualname":"::document::ValueAccessError::UnexpectedType","value":"ValueAccessError::UnexpectedType","parent":{"krate":0,"index":1414},"children":[],"decl_id":null,"docs":" Found a Bson value with the specified key, but not with the expected type\n","sig":null,"attributes":[{"value":"/ Found a Bson value with the specified key, but not with the expected type","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":97738,"byte_end":97815,"line_start":37,"line_end":37,"column_start":5,"column_end":82}}]},{"kind":"Enum","id":{"krate":0,"index":1414},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":97637,"byte_end":97653,"line_start":34,"line_end":34,"column_start":10,"column_end":26},"name":"ValueAccessError","qualname":"::document::ValueAccessError","value":"ValueAccessError::{NotPresent, UnexpectedType}","parent":null,"children":[{"krate":0,"index":1415},{"krate":0,"index":1417}],"decl_id":null,"docs":" Error to indicate that either a value was empty or it contained an unexpected\n type, for use with the direct getters.\n","sig":null,"attributes":[{"value":"/ Error to indicate that either a value was empty or it contained an unexpected","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":97464,"byte_end":97545,"line_start":30,"line_end":30,"column_start":1,"column_end":82}},{"value":"/ type, for use with the direct getters.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":97546,"byte_end":97588,"line_start":31,"line_end":31,"column_start":1,"column_end":43}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":97610,"byte_end":97627,"line_start":33,"line_end":33,"column_start":1,"column_end":18}}]},{"kind":"Type","id":{"krate":0,"index":514},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":97883,"byte_end":97900,"line_start":42,"line_end":42,"column_start":10,"column_end":27},"name":"ValueAccessResult","qualname":"::document::ValueAccessResult","value":"Result<T, ValueAccessError>","parent":null,"children":[],"decl_id":null,"docs":" Result of accessing Bson value\n","sig":null,"attributes":[{"value":"/ Result of accessing Bson value","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":97839,"byte_end":97873,"line_start":41,"line_end":41,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":1422},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":98786,"byte_end":98794,"line_start":68,"line_end":68,"column_start":12,"column_end":20},"name":"Document","qualname":"::document::Document","value":"Document {  }","parent":null,"children":[{"krate":0,"index":1423}],"decl_id":null,"docs":" A BSON document represented as an associative HashMap with insertion ordering.\n","sig":null,"attributes":[{"value":"/ A BSON document represented as an associative HashMap with insertion ordering.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":98664,"byte_end":98746,"line_start":66,"line_end":66,"column_start":1,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":527},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":99574,"byte_end":99594,"line_start":105,"line_end":105,"column_start":12,"column_end":32},"name":"DocumentIntoIterator","qualname":"::document::DocumentIntoIterator","value":"DocumentIntoIterator {  }","parent":null,"children":[{"krate":0,"index":528}],"decl_id":null,"docs":" An iterator over Document entries.\n","sig":null,"attributes":[{"value":"/ An iterator over Document entries.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":99524,"byte_end":99562,"line_start":104,"line_end":104,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":529},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":99697,"byte_end":99713,"line_start":110,"line_end":110,"column_start":12,"column_end":28},"name":"DocumentIterator","qualname":"::document::DocumentIterator","value":"DocumentIterator {  }","parent":null,"children":[{"krate":0,"index":531}],"decl_id":null,"docs":" An owning iterator over Document entries.\n","sig":null,"attributes":[{"value":"/ An owning iterator over Document entries.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":99640,"byte_end":99685,"line_start":109,"line_end":109,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":535},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":99914,"byte_end":99918,"line_start":117,"line_end":117,"column_start":12,"column_end":16},"name":"Keys","qualname":"::document::Keys","value":"Keys {  }","parent":null,"children":[{"krate":0,"index":537}],"decl_id":null,"docs":" An iterator over an Document's keys.\n","sig":null,"attributes":[{"value":"/ An iterator over an Document's keys.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":99862,"byte_end":99902,"line_start":116,"line_end":116,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":538},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":100022,"byte_end":100028,"line_start":122,"line_end":122,"column_start":12,"column_end":18},"name":"Values","qualname":"::document::Values","value":"Values {  }","parent":null,"children":[{"krate":0,"index":540}],"decl_id":null,"docs":" An iterator over an Document's values.\n","sig":null,"attributes":[{"value":"/ An iterator over an Document's values.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":99968,"byte_end":100010,"line_start":121,"line_end":121,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":101492,"byte_end":101495,"line_start":190,"line_end":190,"column_start":12,"column_end":15},"name":"new","qualname":"<Document>::new","value":"fn () -> Document","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty Document.\n","sig":null,"attributes":[{"value":"/ Creates a new empty Document.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":101447,"byte_end":101480,"line_start":189,"line_end":189,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":571},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":101654,"byte_end":101658,"line_start":197,"line_end":197,"column_start":12,"column_end":16},"name":"iter","qualname":"<Document>::iter","value":"fn (&self) -> DocumentIterator","parent":null,"children":[],"decl_id":null,"docs":" Gets an iterator over the entries of the map.\n","sig":null,"attributes":[{"value":"/ Gets an iterator over the entries of the map.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":101593,"byte_end":101642,"line_start":196,"line_end":196,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":101781,"byte_end":101786,"line_start":202,"line_end":202,"column_start":12,"column_end":17},"name":"clear","qualname":"<Document>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the document, removing all values.\n","sig":null,"attributes":[{"value":"/ Clears the document, removing all values.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":101724,"byte_end":101769,"line_start":201,"line_end":201,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":101912,"byte_end":101915,"line_start":207,"line_end":207,"column_start":12,"column_end":15},"name":"get","qualname":"<Document>::get","value":"fn (&self, key: &str) -> Option<&Bson>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the Bson corresponding to the key.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the Bson corresponding to the key.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":101839,"byte_end":101900,"line_start":206,"line_end":206,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":102069,"byte_end":102076,"line_start":212,"line_end":212,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Document>::get_mut","value":"fn (&mut self, key: &str) -> Option<&mut Bson>","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the Bson corresponding to the key\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the Bson corresponding to the key","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":101992,"byte_end":102057,"line_start":211,"line_end":211,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":575},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":102267,"byte_end":102274,"line_start":218,"line_end":218,"column_start":12,"column_end":19},"name":"get_f64","qualname":"<Document>::get_f64","value":"fn (&self, key: &str) -> ValueAccessResult<f64>","parent":null,"children":[],"decl_id":null,"docs":" Get a floating point value for this key if it exists and has\n the correct type.\n","sig":null,"attributes":[{"value":"/ Get a floating point value for this key if it exists and has","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":102165,"byte_end":102229,"line_start":216,"line_end":216,"column_start":5,"column_end":69}},{"value":"/ the correct type.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":102234,"byte_end":102255,"line_start":217,"line_end":217,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":576},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":102659,"byte_end":102670,"line_start":228,"line_end":228,"column_start":12,"column_end":23},"name":"get_f64_mut","qualname":"<Document>::get_f64_mut","value":"fn (&mut self, key: &str) -> ValueAccessResult<&mut f64>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a floating point value for this key if it exists and has\n the correct type.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to a floating point value for this key if it exists and has","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":102534,"byte_end":102621,"line_start":226,"line_end":226,"column_start":5,"column_end":92}},{"value":"/ the correct type.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":102626,"byte_end":102647,"line_start":227,"line_end":227,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":577},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":103871,"byte_end":103878,"line_start":257,"line_end":257,"column_start":12,"column_end":19},"name":"get_str","qualname":"<Document>::get_str","value":"fn (&self, key: &str) -> ValueAccessResult<&str>","parent":null,"children":[],"decl_id":null,"docs":" Get a string slice this key if it exists and has the correct type.\n","sig":null,"attributes":[{"value":"/ Get a string slice this key if it exists and has the correct type.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":103789,"byte_end":103859,"line_start":256,"line_end":256,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":104233,"byte_end":104244,"line_start":266,"line_end":266,"column_start":12,"column_end":23},"name":"get_str_mut","qualname":"<Document>::get_str_mut","value":"fn (&mut self, key: &str) -> ValueAccessResult<&mut str>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable string slice this key if it exists and has the correct type.\n","sig":null,"attributes":[{"value":"/ Get a mutable string slice this key if it exists and has the correct type.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":104143,"byte_end":104221,"line_start":265,"line_end":265,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":579},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":104632,"byte_end":104641,"line_start":276,"line_end":276,"column_start":12,"column_end":21},"name":"get_array","qualname":"<Document>::get_array","value":"fn (&self, key: &str) -> ValueAccessResult<&Array>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to an array for this key if it exists and has\n the correct type.\n","sig":null,"attributes":[{"value":"/ Get a reference to an array for this key if it exists and has","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":104529,"byte_end":104594,"line_start":274,"line_end":274,"column_start":5,"column_end":70}},{"value":"/ the correct type.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":104599,"byte_end":104620,"line_start":275,"line_end":275,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":105018,"byte_end":105031,"line_start":286,"line_end":286,"column_start":12,"column_end":25},"name":"get_array_mut","qualname":"<Document>::get_array_mut","value":"fn (&mut self, key: &str) -> ValueAccessResult<&mut Array>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to an array for this key if it exists and has\n the correct type.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to an array for this key if it exists and has","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":104907,"byte_end":104980,"line_start":284,"line_end":284,"column_start":5,"column_end":78}},{"value":"/ the correct type.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":104985,"byte_end":105006,"line_start":285,"line_end":285,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":105422,"byte_end":105434,"line_start":296,"line_end":296,"column_start":12,"column_end":24},"name":"get_document","qualname":"<Document>::get_document","value":"fn (&self, key: &str) -> ValueAccessResult<&Document>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a document for this key if it exists and has\n the correct type.\n","sig":null,"attributes":[{"value":"/ Get a reference to a document for this key if it exists and has","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":105317,"byte_end":105384,"line_start":294,"line_end":294,"column_start":5,"column_end":72}},{"value":"/ the correct type.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":105389,"byte_end":105410,"line_start":295,"line_end":295,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":105819,"byte_end":105835,"line_start":306,"line_end":306,"column_start":12,"column_end":28},"name":"get_document_mut","qualname":"<Document>::get_document_mut","value":"fn (&mut self, key: &str) -> ValueAccessResult<&mut Document>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a document for this key if it exists and has\n the correct type.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to a document for this key if it exists and has","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":105706,"byte_end":105781,"line_start":304,"line_end":304,"column_start":5,"column_end":80}},{"value":"/ the correct type.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":105786,"byte_end":105807,"line_start":305,"line_end":305,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":106211,"byte_end":106219,"line_start":315,"line_end":315,"column_start":12,"column_end":20},"name":"get_bool","qualname":"<Document>::get_bool","value":"fn (&self, key: &str) -> ValueAccessResult<bool>","parent":null,"children":[],"decl_id":null,"docs":" Get a bool value for this key if it exists and has the correct type.\n","sig":null,"attributes":[{"value":"/ Get a bool value for this key if it exists and has the correct type.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":106127,"byte_end":106199,"line_start":314,"line_end":314,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":106588,"byte_end":106600,"line_start":324,"line_end":324,"column_start":12,"column_end":24},"name":"get_bool_mut","qualname":"<Document>::get_bool_mut","value":"fn (&mut self, key: &str) -> ValueAccessResult<&mut bool>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a bool value for this key if it exists and has the correct type.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to a bool value for this key if it exists and has the correct type.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":106481,"byte_end":106576,"line_start":323,"line_end":323,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":106943,"byte_end":106950,"line_start":333,"line_end":333,"column_start":12,"column_end":19},"name":"is_null","qualname":"<Document>::is_null","value":"fn (&self, key: &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns wether this key has a null value\n","sig":null,"attributes":[{"value":"/ Returns wether this key has a null value","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":106887,"byte_end":106931,"line_start":332,"line_end":332,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":107117,"byte_end":107124,"line_start":338,"line_end":338,"column_start":12,"column_end":19},"name":"get_i32","qualname":"<Document>::get_i32","value":"fn (&self, key: &str) -> ValueAccessResult<i32>","parent":null,"children":[],"decl_id":null,"docs":" Get an i32 value for this key if it exists and has the correct type.\n","sig":null,"attributes":[{"value":"/ Get an i32 value for this key if it exists and has the correct type.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":107033,"byte_end":107105,"line_start":337,"line_end":337,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":107490,"byte_end":107501,"line_start":347,"line_end":347,"column_start":12,"column_end":23},"name":"get_i32_mut","qualname":"<Document>::get_i32_mut","value":"fn (&mut self, key: &str) -> ValueAccessResult<&mut i32>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to an i32 value for this key if it exists and has the correct type.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to an i32 value for this key if it exists and has the correct type.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":107383,"byte_end":107478,"line_start":346,"line_end":346,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":107869,"byte_end":107876,"line_start":356,"line_end":356,"column_start":12,"column_end":19},"name":"get_i64","qualname":"<Document>::get_i64","value":"fn (&self, key: &str) -> ValueAccessResult<i64>","parent":null,"children":[],"decl_id":null,"docs":" Get an i64 value for this key if it exists and has the correct type.\n","sig":null,"attributes":[{"value":"/ Get an i64 value for this key if it exists and has the correct type.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":107785,"byte_end":107857,"line_start":355,"line_end":355,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":108242,"byte_end":108253,"line_start":365,"line_end":365,"column_start":12,"column_end":23},"name":"get_i64_mut","qualname":"<Document>::get_i64_mut","value":"fn (&mut self, key: &str) -> ValueAccessResult<&mut i64>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to an i64 value for this key if it exists and has the correct type.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to an i64 value for this key if it exists and has the correct type.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":108135,"byte_end":108230,"line_start":364,"line_end":364,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":108627,"byte_end":108640,"line_start":374,"line_end":374,"column_start":12,"column_end":25},"name":"get_timestamp","qualname":"<Document>::get_timestamp","value":"fn (&self, key: &str) -> ValueAccessResult<Timestamp>","parent":null,"children":[],"decl_id":null,"docs":" Get a time stamp value for this key if it exists and has the correct type.\n","sig":null,"attributes":[{"value":"/ Get a time stamp value for this key if it exists and has the correct type.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":108537,"byte_end":108615,"line_start":373,"line_end":373,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":591},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":109046,"byte_end":109063,"line_start":384,"line_end":384,"column_start":12,"column_end":29},"name":"get_timestamp_mut","qualname":"<Document>::get_timestamp_mut","value":"fn (&mut self, key: &str) -> ValueAccessResult<&mut Timestamp>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a time stamp value for this key if it exists and has the correct\n type.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to a time stamp value for this key if it exists and has the correct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":108925,"byte_end":109020,"line_start":382,"line_end":382,"column_start":5,"column_end":100}},{"value":"/ type.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":109025,"byte_end":109034,"line_start":383,"line_end":383,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":109490,"byte_end":109508,"line_start":394,"line_end":394,"column_start":12,"column_end":30},"name":"get_binary_generic","qualname":"<Document>::get_binary_generic","value":"fn (&self, key: &str) -> ValueAccessResult<&Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a generic binary value for this key if it exists and has the correct\n type.\n","sig":null,"attributes":[{"value":"/ Get a reference to a generic binary value for this key if it exists and has the correct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":109373,"byte_end":109464,"line_start":392,"line_end":392,"column_start":5,"column_end":96}},{"value":"/ type.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":109469,"byte_end":109478,"line_start":393,"line_end":393,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":593},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":109994,"byte_end":110016,"line_start":407,"line_end":407,"column_start":12,"column_end":34},"name":"get_binary_generic_mut","qualname":"<Document>::get_binary_generic_mut","value":"fn (&mut self, key: &str) -> ValueAccessResult<&mut Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference generic binary value for this key if it exists and has the correct\n type.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference generic binary value for this key if it exists and has the correct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":109874,"byte_end":109968,"line_start":405,"line_end":405,"column_start":5,"column_end":99}},{"value":"/ type.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":109973,"byte_end":109982,"line_start":406,"line_end":406,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":110507,"byte_end":110520,"line_start":419,"line_end":419,"column_start":12,"column_end":25},"name":"get_object_id","qualname":"<Document>::get_object_id","value":"fn (&self, key: &str) -> ValueAccessResult<&ObjectId>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to an object id value for this key if it exists and has the correct type.\n","sig":null,"attributes":[{"value":"/ Get a reference to an object id value for this key if it exists and has the correct type.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":110402,"byte_end":110495,"line_start":418,"line_end":418,"column_start":5,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":595},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":110913,"byte_end":110930,"line_start":429,"line_end":429,"column_start":12,"column_end":29},"name":"get_object_id_mut","qualname":"<Document>::get_object_id_mut","value":"fn (&mut self, key: &str) -> ValueAccessResult<&mut ObjectId>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to an object id value for this key if it exists and has the correct\n type.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to an object id value for this key if it exists and has the correct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":110792,"byte_end":110887,"line_start":427,"line_end":427,"column_start":5,"column_end":100}},{"value":"/ type.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":110892,"byte_end":110901,"line_start":428,"line_end":428,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":111329,"byte_end":111341,"line_start":438,"line_end":438,"column_start":12,"column_end":24},"name":"get_datetime","qualname":"<Document>::get_datetime","value":"fn (&self, key: &str) -> ValueAccessResult<&DateTime<Utc>>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a UTC datetime value for this key if it exists and has the correct type.\n","sig":null,"attributes":[{"value":"/ Get a reference to a UTC datetime value for this key if it exists and has the correct type.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":111222,"byte_end":111317,"line_start":437,"line_end":437,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":111741,"byte_end":111757,"line_start":448,"line_end":448,"column_start":12,"column_end":28},"name":"get_datetime_mut","qualname":"<Document>::get_datetime_mut","value":"fn (&mut self, key: &str) -> ValueAccessResult<&mut DateTime<Utc>>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a UTC datetime value for this key if it exists and has the\n correct type.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to a UTC datetime value for this key if it exists and has the","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":111618,"byte_end":111707,"line_start":446,"line_end":446,"column_start":5,"column_end":94}},{"value":"/ correct type.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":111712,"byte_end":111729,"line_start":447,"line_end":447,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":112133,"byte_end":112145,"line_start":457,"line_end":457,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<Document>::contains_key","value":"fn (&self, key: &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains a value for the specified key.\n","sig":null,"attributes":[{"value":"/ Returns true if the map contains a value for the specified key.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":112054,"byte_end":112121,"line_start":456,"line_end":456,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":599},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":112284,"byte_end":112288,"line_start":462,"line_end":462,"column_start":12,"column_end":16},"name":"keys","qualname":"<Document>::keys","value":"fn <'a> (&'a self) -> Keys<'a>","parent":null,"children":[],"decl_id":null,"docs":" Gets a collection of all keys in the document.\n","sig":null,"attributes":[{"value":"/ Gets a collection of all keys in the document.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":112222,"byte_end":112272,"line_start":461,"line_end":461,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":112600,"byte_end":112606,"line_start":474,"line_end":474,"column_start":12,"column_end":18},"name":"values","qualname":"<Document>::values","value":"fn <'a> (&'a self) -> Values<'a>","parent":null,"children":[],"decl_id":null,"docs":" Gets a collection of all values in the document.\n","sig":null,"attributes":[{"value":"/ Gets a collection of all values in the document.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":112536,"byte_end":112588,"line_start":473,"line_end":473,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":609},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":112923,"byte_end":112926,"line_start":486,"line_end":486,"column_start":12,"column_end":15},"name":"len","qualname":"<Document>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the document.\n","sig":null,"attributes":[{"value":"/ Returns the number of elements in the document.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":112860,"byte_end":112911,"line_start":485,"line_end":485,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":113046,"byte_end":113054,"line_start":491,"line_end":491,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Document>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the document contains no elements\n","sig":null,"attributes":[{"value":"/ Returns true if the document contains no elements","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":112981,"byte_end":113034,"line_start":490,"line_end":490,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":113287,"byte_end":113293,"line_start":498,"line_end":498,"column_start":12,"column_end":18},"name":"insert","qualname":"<Document>::insert","value":"fn <KT, BT> (&mut self, key: KT, val: BT) -> Option<Bson>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the OccupiedEntry's key,\n and returns the entry's old value. Accepts any type that\n can be converted into Bson.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry with the OccupiedEntry's key,","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":113113,"byte_end":113174,"line_start":495,"line_end":495,"column_start":5,"column_end":66}},{"value":"/ and returns the entry's old value. Accepts any type that","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":113179,"byte_end":113239,"line_start":496,"line_end":496,"column_start":5,"column_end":65}},{"value":"/ can be converted into Bson.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":113244,"byte_end":113275,"line_start":497,"line_end":497,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":113517,"byte_end":113523,"line_start":503,"line_end":503,"column_start":12,"column_end":18},"name":"remove","qualname":"<Document>::remove","value":"fn (&mut self, key: &str) -> Option<Bson>","parent":null,"children":[],"decl_id":null,"docs":" Takes the value of the entry out of the document, and returns it.\n","sig":null,"attributes":[{"value":"/ Takes the value of the entry out of the document, and returns it.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":113436,"byte_end":113505,"line_start":502,"line_end":502,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":113613,"byte_end":113618,"line_start":507,"line_end":507,"column_start":12,"column_end":17},"name":"entry","qualname":"<Document>::entry","value":"fn (&mut self, k: String) -> Entry","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":616},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":113801,"byte_end":113810,"line_start":514,"line_end":514,"column_start":12,"column_end":21},"name":"to_writer","qualname":"<Document>::to_writer","value":"fn <W> (&self, writer: &mut W) -> crate::ser::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to serialize the `Document` into a byte stream.\n","sig":null,"attributes":[{"value":"/ Attempts to serialize the `Document` into a byte stream.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":113729,"byte_end":113789,"line_start":513,"line_end":513,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":114319,"byte_end":114330,"line_start":530,"line_end":530,"column_start":12,"column_end":23},"name":"from_reader","qualname":"<Document>::from_reader","value":"fn <R> (reader: &mut R) -> crate::de::Result<Document>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to deserialize a `Document` from a byte stream.\n","sig":null,"attributes":[{"value":"/ Attempts to deserialize a `Document` from a byte stream.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":114247,"byte_end":114307,"line_start":529,"line_end":529,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":621},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":115242,"byte_end":115247,"line_start":564,"line_end":564,"column_start":12,"column_end":17},"name":"Entry","qualname":"::document::Entry","value":"Entry {  }","parent":null,"children":[{"krate":0,"index":623}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":115342,"byte_end":115345,"line_start":569,"line_end":569,"column_start":12,"column_end":15},"name":"key","qualname":"<Entry>::key","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":115406,"byte_end":115415,"line_start":573,"line_end":573,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"fn (self, default: Bson) -> &'a mut Bson","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":115511,"byte_end":115525,"line_start":577,"line_end":577,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"fn <F> (self, default: F) -> &'a mut Bson","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":632},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":115803,"byte_end":115818,"line_start":588,"line_end":588,"column_start":12,"column_end":27},"name":"DocumentVisitor","qualname":"::document::DocumentVisitor","value":"DocumentVisitor {  }","parent":null,"children":[{"krate":0,"index":633}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":115935,"byte_end":115938,"line_start":594,"line_end":594,"column_start":12,"column_end":15},"name":"new","qualname":"<DocumentVisitor>::new","value":"fn () -> DocumentVisitor","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: new_without_default)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":115886,"byte_end":115923,"line_start":593,"line_end":593,"column_start":5,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":647},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"extjson","qualname":"::extjson","value":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","parent":null,"children":[{"krate":0,"index":648},{"krate":0,"index":686}],"decl_id":null,"docs":" Deserialization and serialization of [MongoDB Extended JSON v2](https://docs.mongodb.com/manual/reference/mongodb-extended-json/)","sig":null,"attributes":[{"value":"! Deserialization and serialization of [MongoDB Extended JSON v2](https://docs.mongodb.com/manual/reference/mongodb-extended-json/)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":117011,"byte_end":117144,"line_start":1,"line_end":1,"column_start":1,"column_end":134}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":117145,"byte_end":117148,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! ## Overview of Extended JSON","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":117149,"byte_end":117181,"line_start":3,"line_end":3,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":117182,"byte_end":117185,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! MongoDB Extended JSON (abbreviated extJSON) is format of JSON that allows for the encoding of","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":117186,"byte_end":117283,"line_start":5,"line_end":5,"column_start":1,"column_end":98}},{"value":"! BSON type information. Normal JSON cannot unambiguously represent all BSON types losslessly, so","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":117284,"byte_end":117383,"line_start":6,"line_end":6,"column_start":1,"column_end":100}},{"value":"! an extension was designed to include conventions for representing those types.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":117384,"byte_end":117466,"line_start":7,"line_end":7,"column_start":1,"column_end":83}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":117467,"byte_end":117470,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! For example, a BSON binary is represented by the following format:","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":117471,"byte_end":117541,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"! ```text","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":117542,"byte_end":117553,"line_start":10,"line_end":10,"column_start":1,"column_end":12}},{"value":"! {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":117554,"byte_end":117559,"line_start":11,"line_end":11,"column_start":1,"column_end":6}},{"value":"!    \"$binary\": {","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":117560,"byte_end":117579,"line_start":12,"line_end":12,"column_start":1,"column_end":20}},{"value":"!        \"base64\": <base64 encoded payload as a string>,","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":117580,"byte_end":117638,"line_start":13,"line_end":13,"column_start":1,"column_end":59}},{"value":"!        \"subType\": <subtype as a one or two character hex string>,","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":117639,"byte_end":117708,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"!    }","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":117709,"byte_end":117717,"line_start":15,"line_end":15,"column_start":1,"column_end":9}},{"value":"! }","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":117718,"byte_end":117723,"line_start":16,"line_end":16,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":117724,"byte_end":117731,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"! For more information on extJSON and the complete list of translations, see the [official MongoDB documentation](https://docs.mongodb.com/manual/reference/mongodb-extended-json/).","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":117732,"byte_end":117914,"line_start":18,"line_end":18,"column_start":1,"column_end":183}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":117915,"byte_end":117918,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! All MongoDB drivers and BSON libraries interpret and produce extJSON, so it can serve as a","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":117919,"byte_end":118013,"line_start":20,"line_end":20,"column_start":1,"column_end":95}},{"value":"! useful tool for communicating between applications where raw BSON bytes cannot be used (e.g. via","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":118014,"byte_end":118114,"line_start":21,"line_end":21,"column_start":1,"column_end":101}},{"value":"! JSON REST APIs). It's also useful for representing BSON data as a string.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":118115,"byte_end":118192,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":118193,"byte_end":118196,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"! ### Canonical and Relaxed Modes","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":118197,"byte_end":118232,"line_start":24,"line_end":24,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":118233,"byte_end":118236,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! There are two modes of extJSON: \"Canonical\" and \"Relaxed\". They are the same except for the","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":118237,"byte_end":118332,"line_start":26,"line_end":26,"column_start":1,"column_end":96}},{"value":"! following differences:","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":118333,"byte_end":118359,"line_start":27,"line_end":27,"column_start":1,"column_end":27}},{"value":"!   - In relaxed mode, all BSON numbers are represented by the JSON number type, rather than the","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":118360,"byte_end":118458,"line_start":28,"line_end":28,"column_start":1,"column_end":99}},{"value":"!     object","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":118459,"byte_end":118473,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"! notation.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":118474,"byte_end":118487,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"!   - In relaxed mode, the string in the datetime object notation is ISO-8601 formatted (if the","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":118488,"byte_end":118585,"line_start":31,"line_end":31,"column_start":1,"column_end":98}},{"value":"!     date is after 1970).","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":118586,"byte_end":118614,"line_start":32,"line_end":32,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":118615,"byte_end":118618,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"! e.g.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":118619,"byte_end":118627,"line_start":34,"line_end":34,"column_start":1,"column_end":9}},{"value":"! ```rust","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":118628,"byte_end":118639,"line_start":35,"line_end":35,"column_start":1,"column_end":12}},{"value":"! # use bson::bson;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":118640,"byte_end":118661,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"! let doc = bson!({ \"x\": 5, \"d\": chrono::Utc::now() });","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":118662,"byte_end":118719,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":118720,"byte_end":118723,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! println!(\"relaxed: {}\", doc.clone().into_relaxed_extjson());","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":118724,"byte_end":118788,"line_start":39,"line_end":39,"column_start":1,"column_end":65}},{"value":"! // relaxed: \"{\"x\":5,\"d\":{\"$date\":\"2020-06-01T22:19:13.075Z\"}}\"","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":118789,"byte_end":118855,"line_start":40,"line_end":40,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":118856,"byte_end":118859,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! println!(\"canonical: {}\", doc.into_canonical_extjson());","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":118860,"byte_end":118920,"line_start":42,"line_end":42,"column_start":1,"column_end":61}},{"value":"! // canonical: {\"x\":{\"$numberInt\":\"5\"},\"d\":{\"$date\":{\"$numberLong\":\"1591050020711\"}}}","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":118921,"byte_end":119009,"line_start":43,"line_end":43,"column_start":1,"column_end":89}},{"value":"! ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":119010,"byte_end":119017,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":119018,"byte_end":119021,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"! Canonical mode is useful when BSON values need to be round tripped without losing any type","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":119022,"byte_end":119116,"line_start":46,"line_end":46,"column_start":1,"column_end":95}},{"value":"! information. Relaxed mode is more useful when debugging or logging BSON data.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":119117,"byte_end":119198,"line_start":47,"line_end":47,"column_start":1,"column_end":82}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":119199,"byte_end":119202,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"! ## Deserializing Extended JSON","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":119203,"byte_end":119237,"line_start":49,"line_end":49,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":119238,"byte_end":119241,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"! Extended JSON can be deserialized using [`Bson`](../enum.Bson.html)'s","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":119242,"byte_end":119315,"line_start":51,"line_end":51,"column_start":1,"column_end":74}},{"value":"! `TryFrom<serde_json::Value>` implementation. This implementation accepts both canonical and","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":119316,"byte_end":119411,"line_start":52,"line_end":52,"column_start":1,"column_end":96}},{"value":"! relaxed extJSON, and the two modes can even be mixed within a single representation.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":119412,"byte_end":119500,"line_start":53,"line_end":53,"column_start":1,"column_end":89}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":119501,"byte_end":119504,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"! e.g.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":119505,"byte_end":119513,"line_start":55,"line_end":55,"column_start":1,"column_end":9}},{"value":"! ```rust","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":119514,"byte_end":119525,"line_start":56,"line_end":56,"column_start":1,"column_end":12}},{"value":"! # use bson::Bson;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":119526,"byte_end":119547,"line_start":57,"line_end":57,"column_start":1,"column_end":22}},{"value":"! # use serde_json::json;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":119548,"byte_end":119575,"line_start":58,"line_end":58,"column_start":1,"column_end":28}},{"value":"! # use std::convert::{TryFrom, TryInto};","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":119576,"byte_end":119619,"line_start":59,"line_end":59,"column_start":1,"column_end":44}},{"value":"! let json_doc = json!({ \"x\": 5i32, \"y\": { \"$numberInt\": \"5\" }, \"z\": { \"subdoc\": \"hello\" } });","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":119620,"byte_end":119716,"line_start":60,"line_end":60,"column_start":1,"column_end":97}},{"value":"! let bson: Bson = json_doc.try_into().unwrap(); // Bson::Document(...)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":119717,"byte_end":119790,"line_start":61,"line_end":61,"column_start":1,"column_end":74}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":119791,"byte_end":119794,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"! let json_date = json!({ \"$date\": { \"$numberLong\": \"1590972160292\" } });","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":119795,"byte_end":119870,"line_start":63,"line_end":63,"column_start":1,"column_end":76}},{"value":"! let bson_date: Bson = json_date.try_into().unwrap(); // Bson::DateTime(...)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":119871,"byte_end":119950,"line_start":64,"line_end":64,"column_start":1,"column_end":80}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":119951,"byte_end":119954,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"! let invalid_ext_json = json!({ \"$numberLong\": 5 });","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":119955,"byte_end":120010,"line_start":66,"line_end":66,"column_start":1,"column_end":56}},{"value":"! Bson::try_from(invalid_ext_json).expect_err(\"5 should be a string\");","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":120011,"byte_end":120083,"line_start":67,"line_end":67,"column_start":1,"column_end":73}},{"value":"! ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":120084,"byte_end":120091,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":120092,"byte_end":120095,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"! ## Serializing to Extended JSON","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":120096,"byte_end":120131,"line_start":70,"line_end":70,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":120132,"byte_end":120135,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"! Extended JSON can be created via [`Bson`](../enum.Bson.html)'s `Into<serde_json::Value>`","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":120136,"byte_end":120228,"line_start":72,"line_end":72,"column_start":1,"column_end":93}},{"value":"! implementation (which will create relaxed extJSON),","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":120229,"byte_end":120284,"line_start":73,"line_end":73,"column_start":1,"column_end":56}},{"value":"! [`Bson::into_relaxed_extjson`](../enum.Bson.html#method.into_relaxed_extjson), and","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":120285,"byte_end":120371,"line_start":74,"line_end":74,"column_start":1,"column_end":87}},{"value":"! [`Bson::into_canonical_extjson`](../enum.Bson.html#method.into_canonical_extjson).","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":120372,"byte_end":120458,"line_start":75,"line_end":75,"column_start":1,"column_end":87}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":120459,"byte_end":120462,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"! e.g.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":120463,"byte_end":120471,"line_start":77,"line_end":77,"column_start":1,"column_end":9}},{"value":"! ```rust","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":120472,"byte_end":120483,"line_start":78,"line_end":78,"column_start":1,"column_end":12}},{"value":"! # use bson::{bson, oid};","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":120484,"byte_end":120512,"line_start":79,"line_end":79,"column_start":1,"column_end":29}},{"value":"! let doc = bson!({ \"x\": 5i32, \"_id\": oid::ObjectId::new() });","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":120513,"byte_end":120577,"line_start":80,"line_end":80,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":120578,"byte_end":120581,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"! let relaxed_extjson: serde_json::Value = doc.clone().into();","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":120582,"byte_end":120646,"line_start":82,"line_end":82,"column_start":1,"column_end":65}},{"value":"! println!(\"{}\", relaxed_extjson); // { \"x\": 5, \"_id\": { \"$oid\": <hexstring> } }","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":120647,"byte_end":120729,"line_start":83,"line_end":83,"column_start":1,"column_end":83}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":120730,"byte_end":120733,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"! let relaxed_extjson = doc.clone().into_relaxed_extjson();","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":120734,"byte_end":120795,"line_start":85,"line_end":85,"column_start":1,"column_end":62}},{"value":"! println!(\"{}\", relaxed_extjson); // { \"x\": 5, \"_id\": { \"$oid\": <hexstring> } }","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":120796,"byte_end":120878,"line_start":86,"line_end":86,"column_start":1,"column_end":83}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":120879,"byte_end":120882,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"! let canonical_extjson = doc.into_canonical_extjson();","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":120883,"byte_end":120940,"line_start":88,"line_end":88,"column_start":1,"column_end":58}},{"value":"! println!(\"{}\", canonical_extjson); // { \"x\": { \"$numberInt\": \"5\" }, \"_id\": { \"$oid\": <hexstring> } }","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":120941,"byte_end":121045,"line_start":89,"line_end":89,"column_start":1,"column_end":105}},{"value":"! ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":121046,"byte_end":121053,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":648},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\de.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"de","qualname":"::extjson::de","value":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\de.rs","parent":null,"children":[{"krate":0,"index":649},{"krate":0,"index":652},{"krate":0,"index":655},{"krate":0,"index":1430},{"krate":0,"index":1436},{"krate":0,"index":660},{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":666},{"krate":0,"index":668},{"krate":0,"index":670},{"krate":0,"index":672},{"krate":0,"index":675},{"krate":0,"index":682}],"decl_id":null,"docs":" Deserializing [MongoDB Extended JSON v2](https://docs.mongodb.com/manual/reference/mongodb-extended-json/)","sig":null,"attributes":[{"value":"! Deserializing [MongoDB Extended JSON v2](https://docs.mongodb.com/manual/reference/mongodb-extended-json/)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\de.rs","byte_start":121080,"byte_end":121190,"line_start":1,"line_end":1,"column_start":1,"column_end":111}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\de.rs","byte_start":121191,"byte_end":121194,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! ## Usage","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\de.rs","byte_start":121195,"byte_end":121207,"line_start":3,"line_end":3,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\de.rs","byte_start":121208,"byte_end":121211,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! Extended JSON can be deserialized using [`Bson`](../../enum.Bson.html)'s","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\de.rs","byte_start":121212,"byte_end":121288,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"! `TryFrom<serde_json::Value>` implementation. This implementation accepts both canonical and","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\de.rs","byte_start":121289,"byte_end":121384,"line_start":6,"line_end":6,"column_start":1,"column_end":96}},{"value":"! relaxed extJSON, and the two modes can even be mixed within a single representation.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\de.rs","byte_start":121385,"byte_end":121473,"line_start":7,"line_end":7,"column_start":1,"column_end":89}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\de.rs","byte_start":121474,"byte_end":121477,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! e.g.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\de.rs","byte_start":121478,"byte_end":121486,"line_start":9,"line_end":9,"column_start":1,"column_end":9}},{"value":"! ```rust","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\de.rs","byte_start":121487,"byte_end":121498,"line_start":10,"line_end":10,"column_start":1,"column_end":12}},{"value":"! # use bson::Bson;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\de.rs","byte_start":121499,"byte_end":121520,"line_start":11,"line_end":11,"column_start":1,"column_end":22}},{"value":"! # use serde_json::json;","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\de.rs","byte_start":121521,"byte_end":121548,"line_start":12,"line_end":12,"column_start":1,"column_end":28}},{"value":"! # use std::convert::{TryFrom, TryInto};","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\de.rs","byte_start":121549,"byte_end":121592,"line_start":13,"line_end":13,"column_start":1,"column_end":44}},{"value":"! let json_doc = json!({ \"x\": 5i32, \"y\": { \"$numberInt\": \"5\" }, \"z\": { \"subdoc\": \"hello\" } });","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\de.rs","byte_start":121593,"byte_end":121689,"line_start":14,"line_end":14,"column_start":1,"column_end":97}},{"value":"! let bson: Bson = json_doc.try_into().unwrap(); // Bson::Document(...)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\de.rs","byte_start":121690,"byte_end":121763,"line_start":15,"line_end":15,"column_start":1,"column_end":74}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\de.rs","byte_start":121764,"byte_end":121767,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! let json_date = json!({ \"$date\": { \"$numberLong\": \"1590972160292\" } });","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\de.rs","byte_start":121768,"byte_end":121843,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"! let bson_date: Bson = json_date.try_into().unwrap(); // Bson::DateTime(...)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\de.rs","byte_start":121844,"byte_end":121923,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"!","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\de.rs","byte_start":121924,"byte_end":121927,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! let invalid_ext_json = json!({ \"$numberLong\": 5 });","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\de.rs","byte_start":121928,"byte_end":121983,"line_start":20,"line_end":20,"column_start":1,"column_end":56}},{"value":"! Bson::try_from(invalid_ext_json).expect_err(\"5 should be a string\");","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\de.rs","byte_start":121984,"byte_end":122056,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"! ```","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\de.rs","byte_start":122057,"byte_end":122064,"line_start":22,"line_end":22,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1431},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\de.rs","byte_start":122487,"byte_end":122502,"line_start":35,"line_end":35,"column_start":5,"column_end":20},"name":"InvalidObjectId","qualname":"::extjson::de::Error::InvalidObjectId","value":"Error::InvalidObjectId(oid::Error)","parent":{"krate":0,"index":1430},"children":[],"decl_id":null,"docs":" Errors that can occur during OID construction and generation from the input data.\n","sig":null,"attributes":[{"value":"/ Errors that can occur during OID construction and generation from the input data.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\de.rs","byte_start":122397,"byte_end":122482,"line_start":34,"line_end":34,"column_start":5,"column_end":90}}]},{"kind":"StructVariant","id":{"krate":0,"index":1434},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\de.rs","byte_start":122642,"byte_end":122662,"line_start":39,"line_end":39,"column_start":5,"column_end":25},"name":"DeserializationError","qualname":"::extjson::de::Error::DeserializationError","value":"Error::DeserializationError { message }","parent":{"krate":0,"index":1430},"children":[],"decl_id":null,"docs":" A general error encountered during deserialization.\n See: https://docs.serde.rs/serde/de/trait.Error.html\n","sig":null,"attributes":[{"value":"/ A general error encountered during deserialization.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\de.rs","byte_start":122521,"byte_end":122576,"line_start":37,"line_end":37,"column_start":5,"column_end":60}},{"value":"/ See: https://docs.serde.rs/serde/de/trait.Error.html","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\de.rs","byte_start":122581,"byte_end":122637,"line_start":38,"line_end":38,"column_start":5,"column_end":61}}]},{"kind":"Enum","id":{"krate":0,"index":1430},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\de.rs","byte_start":122385,"byte_end":122390,"line_start":33,"line_end":33,"column_start":10,"column_end":15},"name":"Error","qualname":"::extjson::de::Error","value":"Error::{InvalidObjectId, DeserializationError}","parent":null,"children":[{"krate":0,"index":1431},{"krate":0,"index":1434}],"decl_id":null,"docs":" Error cases that can occur during deserialization from [extended JSON](https://docs.mongodb.com/manual/reference/mongodb-extended-json/).\n","sig":null,"attributes":[{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\de.rs","byte_start":122216,"byte_end":122233,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/ Error cases that can occur during deserialization from [extended JSON](https://docs.mongodb.com/manual/reference/mongodb-extended-json/).","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\de.rs","byte_start":122234,"byte_end":122375,"line_start":32,"line_end":32,"column_start":1,"column_end":142}}]},{"kind":"Type","id":{"krate":0,"index":670},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\de.rs","byte_start":123524,"byte_end":123530,"line_start":78,"line_end":78,"column_start":10,"column_end":16},"name":"Result","qualname":"::extjson::de::Result","value":"std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":727},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\oid.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"oid","qualname":"::oid","value":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\oid.rs","parent":null,"children":[{"krate":0,"index":728},{"krate":0,"index":735},{"krate":0,"index":738},{"krate":0,"index":741},{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":746},{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":750},{"krate":0,"index":751},{"krate":0,"index":2205},{"krate":0,"index":2211},{"krate":0,"index":752},{"krate":0,"index":754},{"krate":0,"index":756},{"krate":0,"index":758},{"krate":0,"index":2213},{"krate":0,"index":2235},{"krate":0,"index":2231},{"krate":0,"index":2232},{"krate":0,"index":2225},{"krate":0,"index":2221},{"krate":0,"index":2222},{"krate":0,"index":2219},{"krate":0,"index":2216},{"krate":0,"index":760},{"krate":0,"index":762},{"krate":0,"index":787},{"krate":0,"index":789}],"decl_id":null,"docs":" ObjectId\n","sig":null,"attributes":[{"value":"! ObjectId","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\oid.rs","byte_start":137881,"byte_end":137893,"line_start":1,"line_end":1,"column_start":1,"column_end":13}}]},{"kind":"StructVariant","id":{"krate":0,"index":2206},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\oid.rs","byte_start":138613,"byte_end":138626,"line_start":33,"line_end":33,"column_start":5,"column_end":18},"name":"ArgumentError","qualname":"::oid::Error::ArgumentError","value":"Error::ArgumentError { message }","parent":{"krate":0,"index":2205},"children":[],"decl_id":null,"docs":" An invalid argument was passed in.\n","sig":null,"attributes":[{"value":"/ An invalid argument was passed in.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\oid.rs","byte_start":138570,"byte_end":138608,"line_start":32,"line_end":32,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2208},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\oid.rs","byte_start":138700,"byte_end":138712,"line_start":36,"line_end":36,"column_start":5,"column_end":17},"name":"FromHexError","qualname":"::oid::Error::FromHexError","value":"Error::FromHexError(FromHexError)","parent":{"krate":0,"index":2205},"children":[],"decl_id":null,"docs":" An error occured parsing a hex string.\n","sig":null,"attributes":[{"value":"/ An error occured parsing a hex string.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\oid.rs","byte_start":138653,"byte_end":138695,"line_start":35,"line_end":35,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":2205},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\oid.rs","byte_start":138558,"byte_end":138563,"line_start":31,"line_end":31,"column_start":10,"column_end":15},"name":"Error","qualname":"::oid::Error","value":"Error::{ArgumentError, FromHexError}","parent":null,"children":[{"krate":0,"index":2206},{"krate":0,"index":2208}],"decl_id":null,"docs":" Errors that can occur during OID construction and generation.\n","sig":null,"attributes":[{"value":"/ Errors that can occur during OID construction and generation.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\oid.rs","byte_start":138448,"byte_end":138513,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\oid.rs","byte_start":138531,"byte_end":138548,"line_start":30,"line_end":30,"column_start":1,"column_end":18}}]},{"kind":"Type","id":{"krate":0,"index":754},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\oid.rs","byte_start":138897,"byte_end":138903,"line_start":46,"line_end":46,"column_start":10,"column_end":16},"name":"Result","qualname":"::oid::Result","value":"result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Alias for Result<T, oid::Error>.\n","sig":null,"attributes":[{"value":"/ Alias for Result<T, oid::Error>.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\oid.rs","byte_start":138851,"byte_end":138887,"line_start":45,"line_end":45,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2213},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\oid.rs","byte_start":139555,"byte_end":139563,"line_start":68,"line_end":68,"column_start":12,"column_end":20},"name":"ObjectId","qualname":"::oid::ObjectId","value":"ObjectId {  }","parent":null,"children":[{"krate":0,"index":2214}],"decl_id":null,"docs":" A wrapper around raw 12-byte ObjectId representations.\n","sig":null,"attributes":[{"value":"/ A wrapper around raw 12-byte ObjectId representations.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\oid.rs","byte_start":139430,"byte_end":139488,"line_start":66,"line_end":66,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":763},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\oid.rs","byte_start":139860,"byte_end":139863,"line_start":82,"line_end":82,"column_start":12,"column_end":15},"name":"new","qualname":"<ObjectId>::new","value":"fn () -> ObjectId","parent":null,"children":[],"decl_id":null,"docs":" Generates a new ObjectID, represented in bytes.\n See the [docs](http://docs.mongodb.org/manual/reference/object-id/)\n for more information.\n","sig":null,"attributes":[{"value":"/ Generates a new ObjectID, represented in bytes.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\oid.rs","byte_start":139691,"byte_end":139742,"line_start":79,"line_end":79,"column_start":5,"column_end":56}},{"value":"/ See the [docs](http://docs.mongodb.org/manual/reference/object-id/)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\oid.rs","byte_start":139747,"byte_end":139818,"line_start":80,"line_end":80,"column_start":5,"column_end":76}},{"value":"/ for more information.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\oid.rs","byte_start":139823,"byte_end":139848,"line_start":81,"line_end":81,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":766},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\oid.rs","byte_start":140581,"byte_end":140591,"line_start":99,"line_end":99,"column_start":12,"column_end":22},"name":"with_bytes","qualname":"<ObjectId>::with_bytes","value":"fn (bytes: [u8; 12]) -> ObjectId","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new ObjectId wrapper around the raw byte representation.\n","sig":null,"attributes":[{"value":"/ Constructs a new ObjectId wrapper around the raw byte representation.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\oid.rs","byte_start":140496,"byte_end":140569,"line_start":98,"line_end":98,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":768},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\oid.rs","byte_start":140746,"byte_end":140757,"line_start":104,"line_end":104,"column_start":12,"column_end":23},"name":"with_string","qualname":"<ObjectId>::with_string","value":"fn (s: &str) -> Result<ObjectId>","parent":null,"children":[],"decl_id":null,"docs":" Creates an ObjectID using a 12-byte (24-char) hexadecimal string.\n","sig":null,"attributes":[{"value":"/ Creates an ObjectID using a 12-byte (24-char) hexadecimal string.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\oid.rs","byte_start":140665,"byte_end":140734,"line_start":103,"line_end":103,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":771},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\oid.rs","byte_start":141286,"byte_end":141291,"line_start":118,"line_end":118,"column_start":12,"column_end":17},"name":"bytes","qualname":"<ObjectId>::bytes","value":"fn (&self) -> [u8; 12]","parent":null,"children":[],"decl_id":null,"docs":" Returns the raw byte representation of an ObjectId.\n","sig":null,"attributes":[{"value":"/ Returns the raw byte representation of an ObjectId.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\oid.rs","byte_start":141219,"byte_end":141274,"line_start":117,"line_end":117,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":773},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\oid.rs","byte_start":141399,"byte_end":141405,"line_start":123,"line_end":123,"column_start":12,"column_end":18},"name":"to_hex","qualname":"<ObjectId>::to_hex","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Convert the objectId to hex representation.\n","sig":null,"attributes":[{"value":"/ Convert the objectId to hex representation.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\oid.rs","byte_start":141340,"byte_end":141387,"line_start":122,"line_end":122,"column_start":5,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":791},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ser","qualname":"::ser","value":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\mod.rs","parent":null,"children":[{"krate":0,"index":792},{"krate":0,"index":811},{"krate":0,"index":971},{"krate":0,"index":976},{"krate":0,"index":979},{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":991},{"krate":0,"index":992},{"krate":0,"index":994},{"krate":0,"index":996},{"krate":0,"index":998},{"krate":0,"index":1000},{"krate":0,"index":1002},{"krate":0,"index":1004},{"krate":0,"index":1006}],"decl_id":null,"docs":" Serializer\n","sig":null,"attributes":[{"value":"! Serializer","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\mod.rs","byte_start":145465,"byte_end":145479,"line_start":22,"line_end":22,"column_start":1,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2238},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\error.rs","byte_start":150574,"byte_end":150581,"line_start":12,"line_end":12,"column_start":5,"column_end":12},"name":"IoError","qualname":"::ser::error::Error::IoError","value":"Error::IoError(io::Error)","parent":{"krate":0,"index":2237},"children":[],"decl_id":null,"docs":" A [`std::io::Error`](https://doc.rust-lang.org/std/io/struct.Error.html) encountered while serializing.\n","sig":null,"attributes":[{"value":"/ A [`std::io::Error`](https://doc.rust-lang.org/std/io/struct.Error.html) encountered while serializing.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\error.rs","byte_start":150462,"byte_end":150569,"line_start":11,"line_end":11,"column_start":5,"column_end":112}}]},{"kind":"StructVariant","id":{"krate":0,"index":2241},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\error.rs","byte_start":150655,"byte_end":150672,"line_start":15,"line_end":15,"column_start":5,"column_end":22},"name":"InvalidMapKeyType","qualname":"::ser::error::Error::InvalidMapKeyType","value":"Error::InvalidMapKeyType { key }","parent":{"krate":0,"index":2237},"children":[],"decl_id":null,"docs":" A key could not be serialized to a BSON string.\n","sig":null,"attributes":[{"value":"/ A key could not be serialized to a BSON string.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\error.rs","byte_start":150599,"byte_end":150650,"line_start":14,"line_end":14,"column_start":5,"column_end":56}}]},{"kind":"StructVariant","id":{"krate":0,"index":2243},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\error.rs","byte_start":150906,"byte_end":150924,"line_start":22,"line_end":22,"column_start":5,"column_end":23},"name":"SerializationError","qualname":"::ser::error::Error::SerializationError","value":"Error::SerializationError { message }","parent":{"krate":0,"index":2237},"children":[],"decl_id":null,"docs":" A general error that ocurred during serialization.\n See: https://docs.rs/serde/1.0.110/serde/ser/trait.Error.html#tymethod.custom\n","sig":null,"attributes":[{"value":"/ A general error that ocurred during serialization.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\error.rs","byte_start":150761,"byte_end":150815,"line_start":20,"line_end":20,"column_start":5,"column_end":59}},{"value":"/ See: https://docs.rs/serde/1.0.110/serde/ser/trait.Error.html#tymethod.custom","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\error.rs","byte_start":150820,"byte_end":150901,"line_start":21,"line_end":21,"column_start":5,"column_end":86}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2245},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\error.rs","byte_start":151296,"byte_end":151319,"line_start":33,"line_end":33,"column_start":5,"column_end":28},"name":"UnsupportedUnsignedType","qualname":"::ser::error::Error::UnsupportedUnsignedType","value":"Error::UnsupportedUnsignedType","parent":{"krate":0,"index":2237},"children":[],"decl_id":null,"docs":" Returned when serialization of an unsigned integer was attempted. BSON only supports\n 32-bit and 64-bit signed integers.","sig":null,"attributes":[{"value":"cfg(not(feature = \"u2i\"))","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\error.rs","byte_start":151008,"byte_end":151036,"line_start":27,"line_end":27,"column_start":5,"column_end":33}},{"value":"/ Returned when serialization of an unsigned integer was attempted. BSON only supports","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\error.rs","byte_start":151041,"byte_end":151129,"line_start":28,"line_end":28,"column_start":5,"column_end":93}},{"value":"/ 32-bit and 64-bit signed integers.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\error.rs","byte_start":151134,"byte_end":151172,"line_start":29,"line_end":29,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\error.rs","byte_start":151177,"byte_end":151180,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ To allow serialization of unsigned integers as signed integers, enable the \"u2i\" feature","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\error.rs","byte_start":151185,"byte_end":151277,"line_start":31,"line_end":31,"column_start":5,"column_end":97}},{"value":"/ flag.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\error.rs","byte_start":151282,"byte_end":151291,"line_start":32,"line_end":32,"column_start":5,"column_end":14}}]},{"kind":"Enum","id":{"krate":0,"index":2237},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\error.rs","byte_start":150450,"byte_end":150455,"line_start":10,"line_end":10,"column_start":10,"column_end":15},"name":"Error","qualname":"::ser::error::Error","value":"Error::{IoError, InvalidMapKeyType, SerializationError, UnsupportedUnsignedType}","parent":null,"children":[{"krate":0,"index":2238},{"krate":0,"index":2241},{"krate":0,"index":2243},{"krate":0,"index":2245}],"decl_id":null,"docs":" Possible errors that can arise during encoding.\n","sig":null,"attributes":[{"value":"/ Possible errors that can arise during encoding.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\error.rs","byte_start":150354,"byte_end":150405,"line_start":7,"line_end":7,"column_start":1,"column_end":52}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\error.rs","byte_start":150423,"byte_end":150440,"line_start":9,"line_end":9,"column_start":1,"column_end":18}}]},{"kind":"Type","id":{"krate":0,"index":809},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\error.rs","byte_start":152831,"byte_end":152837,"line_start":84,"line_end":84,"column_start":10,"column_end":16},"name":"Result","qualname":"::ser::error::Result","value":"std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Alias for `Result<T, Error>`.\n","sig":null,"attributes":[{"value":"/ Alias for `Result<T, Error>`.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\error.rs","byte_start":152788,"byte_end":152821,"line_start":83,"line_end":83,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":847},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\serde.rs","byte_start":155064,"byte_end":155074,"line_start":87,"line_end":87,"column_start":12,"column_end":22},"name":"Serializer","qualname":"::ser::serde::Serializer","value":"","parent":null,"children":[],"decl_id":null,"docs":" Serde Serializer\n","sig":null,"attributes":[{"value":"/ Serde Serializer","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\serde.rs","byte_start":155032,"byte_end":155052,"line_start":86,"line_end":86,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":850},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\serde.rs","byte_start":155186,"byte_end":155189,"line_start":92,"line_end":92,"column_start":12,"column_end":15},"name":"new","qualname":"<Serializer>::new","value":"fn () -> Serializer","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Serializer`.\n","sig":null,"attributes":[{"value":"/ Construct a new `Serializer`.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\serde.rs","byte_start":155099,"byte_end":155132,"line_start":90,"line_end":90,"column_start":5,"column_end":38}},{"value":"allow(clippy :: new_without_default)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\serde.rs","byte_start":155137,"byte_end":155174,"line_start":91,"line_end":91,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":892},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\serde.rs","byte_start":161739,"byte_end":161754,"line_start":352,"line_end":352,"column_start":12,"column_end":27},"name":"ArraySerializer","qualname":"::ser::serde::ArraySerializer","value":"ArraySerializer {  }","parent":null,"children":[{"krate":0,"index":893}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":900},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\serde.rs","byte_start":162143,"byte_end":162158,"line_start":371,"line_end":371,"column_start":12,"column_end":27},"name":"TupleSerializer","qualname":"::ser::serde::TupleSerializer","value":"TupleSerializer {  }","parent":null,"children":[{"krate":0,"index":901}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":908},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\serde.rs","byte_start":162549,"byte_end":162570,"line_start":390,"line_end":390,"column_start":12,"column_end":33},"name":"TupleStructSerializer","qualname":"::ser::serde::TupleStructSerializer","value":"TupleStructSerializer {  }","parent":null,"children":[{"krate":0,"index":909}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":916},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\serde.rs","byte_start":162971,"byte_end":162993,"line_start":409,"line_end":409,"column_start":12,"column_end":34},"name":"TupleVariantSerializer","qualname":"::ser::serde::TupleVariantSerializer","value":"TupleVariantSerializer {  }","parent":null,"children":[{"krate":0,"index":917},{"krate":0,"index":918}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":925},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\serde.rs","byte_start":163519,"byte_end":163532,"line_start":431,"line_end":431,"column_start":12,"column_end":25},"name":"MapSerializer","qualname":"::ser::serde::MapSerializer","value":"MapSerializer {  }","parent":null,"children":[{"krate":0,"index":926},{"krate":0,"index":927}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":936},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\serde.rs","byte_start":164321,"byte_end":164337,"line_start":460,"line_end":460,"column_start":12,"column_end":28},"name":"StructSerializer","qualname":"::ser::serde::StructSerializer","value":"StructSerializer {  }","parent":null,"children":[{"krate":0,"index":937}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":944},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\serde.rs","byte_start":164805,"byte_end":164828,"line_start":483,"line_end":483,"column_start":12,"column_end":35},"name":"StructVariantSerializer","qualname":"::ser::serde::StructVariantSerializer","value":"StructVariantSerializer {  }","parent":null,"children":[{"krate":0,"index":945},{"krate":0,"index":946}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1006},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\mod.rs","byte_start":150138,"byte_end":150145,"line_start":177,"line_end":177,"column_start":8,"column_end":15},"name":"to_bson","qualname":"::ser::to_bson","value":"fn <T> (value: &T) -> Result<Bson>","parent":null,"children":[],"decl_id":null,"docs":" Encode a `T` Serializable into a BSON `Value`.\n","sig":null,"attributes":[{"value":"/ Encode a `T` Serializable into a BSON `Value`.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\mod.rs","byte_start":150080,"byte_end":150130,"line_start":176,"line_end":176,"column_start":1,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":1008},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"spec","qualname":"::spec","value":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","parent":null,"children":[{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1026},{"krate":0,"index":1027},{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":2249},{"krate":0,"index":2322},{"krate":0,"index":2319},{"krate":0,"index":2320},{"krate":0,"index":2316},{"krate":0,"index":2317},{"krate":0,"index":2314},{"krate":0,"index":2313},{"krate":0,"index":1038},{"krate":0,"index":2324},{"krate":0,"index":2356},{"krate":0,"index":2354},{"krate":0,"index":2352},{"krate":0,"index":2349},{"krate":0,"index":2350},{"krate":0,"index":2345},{"krate":0,"index":2346},{"krate":0,"index":2342},{"krate":0,"index":1041},{"krate":0,"index":1043}],"decl_id":null,"docs":" Constants derived from the [BSON Specification Version 1.1](http://bsonspec.org/spec.html).\n","sig":null,"attributes":[{"value":"! Constants derived from the [BSON Specification Version 1.1](http://bsonspec.org/spec.html).","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":168478,"byte_end":168573,"line_start":22,"line_end":22,"column_start":1,"column_end":96}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2250},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":170082,"byte_end":170088,"line_start":64,"line_end":64,"column_start":5,"column_end":11},"name":"Double","qualname":"::spec::ElementType::Double","value":"ElementType::Double","parent":{"krate":0,"index":2249},"children":[],"decl_id":null,"docs":" 64-bit binary floating point\n","sig":null,"attributes":[{"value":"/ 64-bit binary floating point","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":170045,"byte_end":170077,"line_start":63,"line_end":63,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2253},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":170145,"byte_end":170151,"line_start":66,"line_end":66,"column_start":5,"column_end":11},"name":"String","qualname":"::spec::ElementType::String","value":"ElementType::String","parent":{"krate":0,"index":2249},"children":[],"decl_id":null,"docs":" UTF-8 string\n","sig":null,"attributes":[{"value":"/ UTF-8 string","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":170124,"byte_end":170140,"line_start":65,"line_end":65,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2256},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":170210,"byte_end":170226,"line_start":68,"line_end":68,"column_start":5,"column_end":21},"name":"EmbeddedDocument","qualname":"::spec::ElementType::EmbeddedDocument","value":"ElementType::EmbeddedDocument","parent":{"krate":0,"index":2249},"children":[],"decl_id":null,"docs":" Embedded document\n","sig":null,"attributes":[{"value":"/ Embedded document","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":170184,"byte_end":170205,"line_start":67,"line_end":67,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2259},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":170279,"byte_end":170284,"line_start":70,"line_end":70,"column_start":5,"column_end":10},"name":"Array","qualname":"::spec::ElementType::Array","value":"ElementType::Array","parent":{"krate":0,"index":2249},"children":[],"decl_id":null,"docs":" Array\n","sig":null,"attributes":[{"value":"/ Array","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":170265,"byte_end":170274,"line_start":69,"line_end":69,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2262},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":170331,"byte_end":170337,"line_start":72,"line_end":72,"column_start":5,"column_end":11},"name":"Binary","qualname":"::spec::ElementType::Binary","value":"ElementType::Binary","parent":{"krate":0,"index":2249},"children":[],"decl_id":null,"docs":" Binary data\n","sig":null,"attributes":[{"value":"/ Binary data","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":170311,"byte_end":170326,"line_start":71,"line_end":71,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2265},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":170403,"byte_end":170412,"line_start":74,"line_end":74,"column_start":5,"column_end":14},"name":"Undefined","qualname":"::spec::ElementType::Undefined","value":"ElementType::Undefined","parent":{"krate":0,"index":2249},"children":[],"decl_id":null,"docs":" Deprecated. Undefined (value)\n","sig":null,"attributes":[{"value":"/ Deprecated. Undefined (value)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":170365,"byte_end":170398,"line_start":73,"line_end":73,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2268},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":170504,"byte_end":170512,"line_start":76,"line_end":76,"column_start":5,"column_end":13},"name":"ObjectId","qualname":"::spec::ElementType::ObjectId","value":"ElementType::ObjectId","parent":{"krate":0,"index":2249},"children":[],"decl_id":null,"docs":" [ObjectId](http://dochub.mongodb.org/core/objectids)\n","sig":null,"attributes":[{"value":"/ [ObjectId](http://dochub.mongodb.org/core/objectids)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":170443,"byte_end":170499,"line_start":75,"line_end":75,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2271},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":170562,"byte_end":170569,"line_start":78,"line_end":78,"column_start":5,"column_end":12},"name":"Boolean","qualname":"::spec::ElementType::Boolean","value":"ElementType::Boolean","parent":{"krate":0,"index":2249},"children":[],"decl_id":null,"docs":" Bool value\n","sig":null,"attributes":[{"value":"/ Bool value","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":170543,"byte_end":170557,"line_start":77,"line_end":77,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2274},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":170619,"byte_end":170627,"line_start":80,"line_end":80,"column_start":5,"column_end":13},"name":"DateTime","qualname":"::spec::ElementType::DateTime","value":"ElementType::DateTime","parent":{"krate":0,"index":2249},"children":[],"decl_id":null,"docs":" UTC datetime\n","sig":null,"attributes":[{"value":"/ UTC datetime","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":170598,"byte_end":170614,"line_start":79,"line_end":79,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2277},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":170680,"byte_end":170684,"line_start":82,"line_end":82,"column_start":5,"column_end":9},"name":"Null","qualname":"::spec::ElementType::Null","value":"ElementType::Null","parent":{"krate":0,"index":2249},"children":[],"decl_id":null,"docs":" Null value\n","sig":null,"attributes":[{"value":"/ Null value","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":170661,"byte_end":170675,"line_start":81,"line_end":81,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2280},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":171183,"byte_end":171200,"line_start":89,"line_end":89,"column_start":5,"column_end":22},"name":"RegularExpression","qualname":"::spec::ElementType::RegularExpression","value":"ElementType::RegularExpression","parent":{"krate":0,"index":2249},"children":[],"decl_id":null,"docs":" Regular expression - The first cstring is the regex pattern, the second is the regex\n options string. Options are identified by characters, which must be stored in\n alphabetical order. Valid options are 'i' for case insensitive matching, 'm' for\n multiline matching, 'x' for verbose mode, 'l' to make \\w, \\W, etc. locale dependent,\n 's' for dotall mode ('.' matches everything), and 'u' to make \\w, \\W, etc. match\n unicode.\n","sig":null,"attributes":[{"value":"/ Regular expression - The first cstring is the regex pattern, the second is the regex","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":170716,"byte_end":170804,"line_start":83,"line_end":83,"column_start":5,"column_end":93}},{"value":"/ options string. Options are identified by characters, which must be stored in","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":170809,"byte_end":170890,"line_start":84,"line_end":84,"column_start":5,"column_end":86}},{"value":"/ alphabetical order. Valid options are 'i' for case insensitive matching, 'm' for","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":170895,"byte_end":170979,"line_start":85,"line_end":85,"column_start":5,"column_end":89}},{"value":"/ multiline matching, 'x' for verbose mode, 'l' to make \\w, \\W, etc. locale dependent,","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":170984,"byte_end":171072,"line_start":86,"line_end":86,"column_start":5,"column_end":93}},{"value":"/ 's' for dotall mode ('.' matches everything), and 'u' to make \\w, \\W, etc. match","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":171077,"byte_end":171161,"line_start":87,"line_end":87,"column_start":5,"column_end":89}},{"value":"/ unicode.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":171166,"byte_end":171178,"line_start":88,"line_end":88,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2283},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":171260,"byte_end":171269,"line_start":91,"line_end":91,"column_start":5,"column_end":14},"name":"DbPointer","qualname":"::spec::ElementType::DbPointer","value":"ElementType::DbPointer","parent":{"krate":0,"index":2249},"children":[],"decl_id":null,"docs":" Deprecated.\n","sig":null,"attributes":[{"value":"/ Deprecated.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":171240,"byte_end":171255,"line_start":90,"line_end":90,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2286},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":171324,"byte_end":171338,"line_start":93,"line_end":93,"column_start":5,"column_end":19},"name":"JavaScriptCode","qualname":"::spec::ElementType::JavaScriptCode","value":"ElementType::JavaScriptCode","parent":{"krate":0,"index":2249},"children":[],"decl_id":null,"docs":" JavaScript code\n","sig":null,"attributes":[{"value":"/ JavaScript code","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":171300,"byte_end":171319,"line_start":92,"line_end":92,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2289},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":171395,"byte_end":171401,"line_start":95,"line_end":95,"column_start":5,"column_end":11},"name":"Symbol","qualname":"::spec::ElementType::Symbol","value":"ElementType::Symbol","parent":{"krate":0,"index":2249},"children":[],"decl_id":null,"docs":" Deprecated.\n","sig":null,"attributes":[{"value":"/ Deprecated.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":171375,"byte_end":171390,"line_start":94,"line_end":94,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2292},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":171462,"byte_end":171485,"line_start":97,"line_end":97,"column_start":5,"column_end":28},"name":"JavaScriptCodeWithScope","qualname":"::spec::ElementType::JavaScriptCodeWithScope","value":"ElementType::JavaScriptCodeWithScope","parent":{"krate":0,"index":2249},"children":[],"decl_id":null,"docs":" JavaScript code w/ scope\n","sig":null,"attributes":[{"value":"/ JavaScript code w/ scope","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":171429,"byte_end":171457,"line_start":96,"line_end":96,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2295},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":171556,"byte_end":171561,"line_start":99,"line_end":99,"column_start":5,"column_end":10},"name":"Int32","qualname":"::spec::ElementType::Int32","value":"ElementType::Int32","parent":{"krate":0,"index":2249},"children":[],"decl_id":null,"docs":" 32-bit integer\n","sig":null,"attributes":[{"value":"/ 32-bit integer","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":171533,"byte_end":171551,"line_start":98,"line_end":98,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2298},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":171614,"byte_end":171623,"line_start":101,"line_end":101,"column_start":5,"column_end":14},"name":"Timestamp","qualname":"::spec::ElementType::Timestamp","value":"ElementType::Timestamp","parent":{"krate":0,"index":2249},"children":[],"decl_id":null,"docs":" Timestamp\n","sig":null,"attributes":[{"value":"/ Timestamp","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":171596,"byte_end":171609,"line_start":100,"line_end":100,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2301},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":171677,"byte_end":171682,"line_start":103,"line_end":103,"column_start":5,"column_end":10},"name":"Int64","qualname":"::spec::ElementType::Int64","value":"ElementType::Int64","parent":{"krate":0,"index":2249},"children":[],"decl_id":null,"docs":" 64-bit integer\n","sig":null,"attributes":[{"value":"/ 64-bit integer","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":171654,"byte_end":171672,"line_start":102,"line_end":102,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2304},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":171851,"byte_end":171861,"line_start":105,"line_end":105,"column_start":5,"column_end":15},"name":"Decimal128","qualname":"::spec::ElementType::Decimal128","value":"ElementType::Decimal128","parent":{"krate":0,"index":2249},"children":[],"decl_id":null,"docs":" [128-bit decimal floating point](https://github.com/mongodb/specifications/blob/master/source/bson-decimal128/decimal128.rst)\n","sig":null,"attributes":[{"value":"/ [128-bit decimal floating point](https://github.com/mongodb/specifications/blob/master/source/bson-decimal128/decimal128.rst)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":171717,"byte_end":171846,"line_start":104,"line_end":104,"column_start":5,"column_end":134}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2307},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":171897,"byte_end":171903,"line_start":106,"line_end":106,"column_start":5,"column_end":11},"name":"MaxKey","qualname":"::spec::ElementType::MaxKey","value":"ElementType::MaxKey","parent":{"krate":0,"index":2249},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2310},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":171931,"byte_end":171937,"line_start":107,"line_end":107,"column_start":5,"column_end":11},"name":"MinKey","qualname":"::spec::ElementType::MinKey","value":"ElementType::MinKey","parent":{"krate":0,"index":2249},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2249},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":170027,"byte_end":170038,"line_start":62,"line_end":62,"column_start":10,"column_end":21},"name":"ElementType","qualname":"::spec::ElementType","value":"ElementType::{Double, String, EmbeddedDocument, Array, Binary, Undefined, ObjectId, Boolean, DateTime, Null, RegularExpression, DbPointer, JavaScriptCode, Symbol, JavaScriptCodeWithScope, Int32, Timestamp, Int64, Decimal128, MaxKey, MinKey}","parent":null,"children":[{"krate":0,"index":2250},{"krate":0,"index":2253},{"krate":0,"index":2256},{"krate":0,"index":2259},{"krate":0,"index":2262},{"krate":0,"index":2265},{"krate":0,"index":2268},{"krate":0,"index":2271},{"krate":0,"index":2274},{"krate":0,"index":2277},{"krate":0,"index":2280},{"krate":0,"index":2283},{"krate":0,"index":2286},{"krate":0,"index":2289},{"krate":0,"index":2292},{"krate":0,"index":2295},{"krate":0,"index":2298},{"krate":0,"index":2301},{"krate":0,"index":2304},{"krate":0,"index":2307},{"krate":0,"index":2310}],"decl_id":null,"docs":" All available BSON element types.","sig":null,"attributes":[{"value":"/ All available BSON element types.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":169855,"byte_end":169892,"line_start":57,"line_end":57,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":169893,"byte_end":169896,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ Not all element types are representable by the `Bson` type.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":169897,"byte_end":169960,"line_start":59,"line_end":59,"column_start":1,"column_end":64}},{"value":"repr(u8)","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":169961,"byte_end":169972,"line_start":60,"line_end":60,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1039},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":172048,"byte_end":172052,"line_start":113,"line_end":113,"column_start":12,"column_end":16},"name":"from","qualname":"<ElementType>::from","value":"fn (tag: u8) -> Option<ElementType>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to convert from a `u8`.\n","sig":null,"attributes":[{"value":"/ Attempt to convert from a `u8`.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":171987,"byte_end":172022,"line_start":111,"line_end":111,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":172027,"byte_end":172036,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2325},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":173450,"byte_end":173457,"line_start":146,"line_end":146,"column_start":5,"column_end":12},"name":"Generic","qualname":"::spec::BinarySubtype::Generic","value":"BinarySubtype::Generic","parent":{"krate":0,"index":2324},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2327},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":173463,"byte_end":173471,"line_start":147,"line_end":147,"column_start":5,"column_end":13},"name":"Function","qualname":"::spec::BinarySubtype::Function","value":"BinarySubtype::Function","parent":{"krate":0,"index":2324},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2329},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":173477,"byte_end":173486,"line_start":148,"line_end":148,"column_start":5,"column_end":14},"name":"BinaryOld","qualname":"::spec::BinarySubtype::BinaryOld","value":"BinarySubtype::BinaryOld","parent":{"krate":0,"index":2324},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2331},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":173492,"byte_end":173499,"line_start":149,"line_end":149,"column_start":5,"column_end":12},"name":"UuidOld","qualname":"::spec::BinarySubtype::UuidOld","value":"BinarySubtype::UuidOld","parent":{"krate":0,"index":2324},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2333},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":173505,"byte_end":173509,"line_start":150,"line_end":150,"column_start":5,"column_end":9},"name":"Uuid","qualname":"::spec::BinarySubtype::Uuid","value":"BinarySubtype::Uuid","parent":{"krate":0,"index":2324},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2335},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":173515,"byte_end":173518,"line_start":151,"line_end":151,"column_start":5,"column_end":8},"name":"Md5","qualname":"::spec::BinarySubtype::Md5","value":"BinarySubtype::Md5","parent":{"krate":0,"index":2324},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2337},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":173524,"byte_end":173533,"line_start":152,"line_end":152,"column_start":5,"column_end":14},"name":"Encrypted","qualname":"::spec::BinarySubtype::Encrypted","value":"BinarySubtype::Encrypted","parent":{"krate":0,"index":2324},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2339},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":173539,"byte_end":173550,"line_start":153,"line_end":153,"column_start":5,"column_end":16},"name":"UserDefined","qualname":"::spec::BinarySubtype::UserDefined","value":"BinarySubtype::UserDefined(u8)","parent":{"krate":0,"index":2324},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2324},"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":173430,"byte_end":173443,"line_start":145,"line_end":145,"column_start":10,"column_end":23},"name":"BinarySubtype","qualname":"::spec::BinarySubtype","value":"BinarySubtype::{Generic, Function, BinaryOld, UuidOld, Uuid, Md5, Encrypted, UserDefined}","parent":null,"children":[{"krate":0,"index":2325},{"krate":0,"index":2327},{"krate":0,"index":2329},{"krate":0,"index":2331},{"krate":0,"index":2333},{"krate":0,"index":2335},{"krate":0,"index":2337},{"krate":0,"index":2339}],"decl_id":null,"docs":" The available binary subtypes, plus a user-defined slot.\n","sig":null,"attributes":[{"value":"/ The available binary subtypes, plus a user-defined slot.","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":173291,"byte_end":173351,"line_start":142,"line_end":142,"column_start":1,"column_end":61}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":173403,"byte_end":173420,"line_start":144,"line_end":144,"column_start":1,"column_end":18}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":17853,"byte_end":17857,"line_start":89,"line_end":89,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":17932,"byte_end":17936,"line_start":95,"line_end":95,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":54}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":20155,"byte_end":20159,"line_start":152,"line_end":152,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":56}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":20251,"byte_end":20255,"line_start":158,"line_end":158,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":20341,"byte_end":20345,"line_start":164,"line_end":164,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":20445,"byte_end":20449,"line_start":170,"line_end":170,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":20542,"byte_end":20546,"line_start":176,"line_end":176,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":20639,"byte_end":20643,"line_start":182,"line_end":182,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":20732,"byte_end":20736,"line_start":188,"line_end":188,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":20862,"byte_end":20866,"line_start":194,"line_end":194,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":21019,"byte_end":21023,"line_start":200,"line_end":200,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":21127,"byte_end":21131,"line_start":206,"line_end":206,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":21229,"byte_end":21233,"line_start":212,"line_end":212,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":21357,"byte_end":21361,"line_start":221,"line_end":221,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":21521,"byte_end":21525,"line_start":230,"line_end":230,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":21725,"byte_end":21729,"line_start":239,"line_end":239,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":22170,"byte_end":22174,"line_start":255,"line_end":255,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":22258,"byte_end":22262,"line_start":261,"line_end":261,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":22346,"byte_end":22350,"line_start":267,"line_end":267,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":22441,"byte_end":22445,"line_start":273,"line_end":273,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":22541,"byte_end":22545,"line_start":279,"line_end":279,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":22674,"byte_end":22678,"line_start":285,"line_end":285,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":22793,"byte_end":22797,"line_start":291,"line_end":291,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":22908,"byte_end":22912,"line_start":297,"line_end":297,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":23185,"byte_end":23190,"line_start":304,"line_end":304,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":23277,"byte_end":23281,"line_start":310,"line_end":310,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":111},{"krate":0,"index":113},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":40932,"byte_end":40936,"line_start":792,"line_end":792,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":45890,"byte_end":45899,"line_start":958,"line_end":958,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":46712,"byte_end":46720,"line_start":992,"line_end":992,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":47937,"byte_end":47945,"line_start":1023,"line_end":1023,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":48072,"byte_end":48080,"line_start":1031,"line_end":1031,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":48204,"byte_end":48212,"line_start":1037,"line_end":1037,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":48317,"byte_end":48325,"line_start":1043,"line_end":1043,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":49381,"byte_end":49387,"line_start":1082,"line_end":1082,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\error.rs","byte_start":64281,"byte_end":64286,"line_start":48,"line_end":48,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\error.rs","byte_start":64402,"byte_end":64407,"line_start":54,"line_end":54,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\error.rs","byte_start":64526,"byte_end":64531,"line_start":60,"line_end":60,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\error.rs","byte_start":65439,"byte_end":65444,"line_start":82,"line_end":82,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\error.rs","byte_start":65695,"byte_end":65700,"line_start":92,"line_end":92,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\error.rs","byte_start":65935,"byte_end":65939,"line_start":103,"line_end":103,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\serde.rs","byte_start":67998,"byte_end":68006,"line_start":28,"line_end":28,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\serde.rs","byte_start":68513,"byte_end":68521,"line_start":44,"line_end":44,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\serde.rs","byte_start":69093,"byte_end":69097,"line_start":61,"line_end":61,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\serde.rs","byte_start":69315,"byte_end":69326,"line_start":71,"line_end":71,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":269},{"krate":0,"index":271},{"krate":0,"index":273},{"krate":0,"index":275},{"krate":0,"index":277},{"krate":0,"index":279},{"krate":0,"index":281},{"krate":0,"index":283},{"krate":0,"index":285},{"krate":0,"index":287},{"krate":0,"index":289},{"krate":0,"index":291},{"krate":0,"index":293},{"krate":0,"index":295},{"krate":0,"index":297},{"krate":0,"index":299},{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\serde.rs","byte_start":72757,"byte_end":72769,"line_start":238,"line_end":238,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\serde.rs","byte_start":73853,"byte_end":73865,"line_start":281,"line_end":281,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":313},{"krate":0,"index":315},{"krate":0,"index":317},{"krate":0,"index":1237},{"krate":0,"index":1239},{"krate":0,"index":1241},{"krate":0,"index":1243},{"krate":0,"index":1245},{"krate":0,"index":1247},{"krate":0,"index":1249},{"krate":0,"index":1251},{"krate":0,"index":1253},{"krate":0,"index":1255},{"krate":0,"index":1257},{"krate":0,"index":1259},{"krate":0,"index":1261},{"krate":0,"index":1263},{"krate":0,"index":1265},{"krate":0,"index":1267},{"krate":0,"index":1269},{"krate":0,"index":1271},{"krate":0,"index":1273},{"krate":0,"index":1275},{"krate":0,"index":1277},{"krate":0,"index":1279},{"krate":0,"index":1281},{"krate":0,"index":1283},{"krate":0,"index":1285}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\serde.rs","byte_start":78960,"byte_end":78976,"line_start":448,"line_end":448,"column_start":31,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\serde.rs","byte_start":79416,"byte_end":79435,"line_start":465,"line_end":465,"column_start":34,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":335},{"krate":0,"index":337},{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\serde.rs","byte_start":81372,"byte_end":81387,"line_start":532,"line_end":532,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":1287},{"krate":0,"index":1289},{"krate":0,"index":1291},{"krate":0,"index":1293},{"krate":0,"index":1295},{"krate":0,"index":1297},{"krate":0,"index":1299},{"krate":0,"index":1301},{"krate":0,"index":1303},{"krate":0,"index":1305},{"krate":0,"index":1307},{"krate":0,"index":1309},{"krate":0,"index":1311},{"krate":0,"index":1313},{"krate":0,"index":1315},{"krate":0,"index":1317},{"krate":0,"index":1319},{"krate":0,"index":1321},{"krate":0,"index":1323},{"krate":0,"index":1325},{"krate":0,"index":1327},{"krate":0,"index":1329},{"krate":0,"index":1331},{"krate":0,"index":1333},{"krate":0,"index":1335},{"krate":0,"index":1337},{"krate":0,"index":1339},{"krate":0,"index":1341}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\serde.rs","byte_start":82753,"byte_end":82768,"line_start":579,"line_end":579,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\serde.rs","byte_start":83508,"byte_end":83523,"line_start":610,"line_end":610,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":364},{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\serde.rs","byte_start":84501,"byte_end":84516,"line_start":646,"line_end":646,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":1343},{"krate":0,"index":1345},{"krate":0,"index":1347},{"krate":0,"index":1349},{"krate":0,"index":1351},{"krate":0,"index":1353},{"krate":0,"index":1355},{"krate":0,"index":1357},{"krate":0,"index":1359},{"krate":0,"index":1361},{"krate":0,"index":1363},{"krate":0,"index":1365},{"krate":0,"index":1367},{"krate":0,"index":1369},{"krate":0,"index":1371},{"krate":0,"index":1373},{"krate":0,"index":1375},{"krate":0,"index":1377},{"krate":0,"index":1379},{"krate":0,"index":1381},{"krate":0,"index":1383},{"krate":0,"index":1385},{"krate":0,"index":1387},{"krate":0,"index":1389},{"krate":0,"index":1391},{"krate":0,"index":1393},{"krate":0,"index":1395},{"krate":0,"index":1397}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\serde.rs","byte_start":85793,"byte_end":85802,"line_start":689,"line_end":689,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\serde.rs","byte_start":86139,"byte_end":86144,"line_start":701,"line_end":701,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\serde.rs","byte_start":86477,"byte_end":86500,"line_start":713,"line_end":713,"column_start":32,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\serde.rs","byte_start":86877,"byte_end":86883,"line_start":725,"line_end":725,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\serde.rs","byte_start":87578,"byte_end":87586,"line_start":750,"line_end":750,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\serde.rs","byte_start":87917,"byte_end":87926,"line_start":762,"line_end":762,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\decimal128.rs","byte_start":93320,"byte_end":93330,"line_start":195,"line_end":195,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\decimal128.rs","byte_start":93655,"byte_end":93665,"line_start":207,"line_end":207,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":465}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":97951,"byte_end":97967,"line_start":44,"line_end":44,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":98328,"byte_end":98344,"line_start":55,"line_end":55,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":519}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":98643,"byte_end":98659,"line_start":64,"line_end":64,"column_start":23,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":98857,"byte_end":98865,"line_start":72,"line_end":72,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":98945,"byte_end":98953,"line_start":78,"line_end":78,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":524}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":99402,"byte_end":99410,"line_start":98,"line_end":98,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":100098,"byte_end":100102,"line_start":126,"line_end":126,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":543},{"krate":0,"index":544}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":100242,"byte_end":100248,"line_start":134,"line_end":134,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":547},{"krate":0,"index":548}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":100384,"byte_end":100392,"line_start":142,"line_end":142,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":100862,"byte_end":100870,"line_start":162,"line_end":162,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":559}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":101100,"byte_end":101120,"line_start":172,"line_end":172,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":101269,"byte_end":101285,"line_start":180,"line_end":180,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":567},{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":101432,"byte_end":101440,"line_start":188,"line_end":188,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":604},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":115319,"byte_end":115324,"line_start":568,"line_end":568,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":115678,"byte_end":115686,"line_start":582,"line_end":582,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":631}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":115864,"byte_end":115879,"line_start":592,"line_end":592,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":635}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":116067,"byte_end":116082,"line_start":601,"line_end":601,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":642}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":116845,"byte_end":116853,"line_start":634,"line_end":634,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":645}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\de.rs","byte_start":122714,"byte_end":122719,"line_start":42,"line_end":42,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":661}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\de.rs","byte_start":122997,"byte_end":123002,"line_start":51,"line_end":51,"column_start":28,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\de.rs","byte_start":123033,"byte_end":123038,"line_start":53,"line_end":53,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":664}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\de.rs","byte_start":123250,"byte_end":123255,"line_start":64,"line_end":64,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\de.rs","byte_start":123424,"byte_end":123429,"line_start":72,"line_end":72,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":669}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\de.rs","byte_start":123782,"byte_end":123786,"line_start":81,"line_end":81,"column_start":62,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":673},{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\de.rs","byte_start":127431,"byte_end":127435,"line_start":180,"line_end":180,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":676},{"krate":0,"index":677}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\de.rs","byte_start":128908,"byte_end":128916,"line_start":216,"line_end":216,"column_start":62,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":683},{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\models.rs","byte_start":129686,"byte_end":129691,"line_start":18,"line_end":18,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\models.rs","byte_start":130147,"byte_end":130152,"line_start":37,"line_end":37,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":701}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\models.rs","byte_start":130611,"byte_end":130617,"line_start":56,"line_end":56,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":704}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\models.rs","byte_start":131338,"byte_end":131346,"line_start":82,"line_end":82,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":707}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\models.rs","byte_start":131925,"byte_end":131930,"line_start":110,"line_end":110,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":709}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\models.rs","byte_start":132553,"byte_end":132559,"line_start":138,"line_end":138,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":711}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\models.rs","byte_start":134041,"byte_end":134050,"line_start":193,"line_end":193,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":715}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\models.rs","byte_start":134496,"byte_end":134504,"line_start":216,"line_end":216,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":717}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\models.rs","byte_start":135460,"byte_end":135466,"line_start":246,"line_end":246,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":720}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\models.rs","byte_start":135939,"byte_end":135945,"line_start":266,"line_end":266,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":722}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\models.rs","byte_start":136611,"byte_end":136620,"line_start":296,"line_end":296,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":724}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Inherent","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\models.rs","byte_start":137556,"byte_end":137565,"line_start":333,"line_end":333,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":726}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\oid.rs","byte_start":138759,"byte_end":138764,"line_start":39,"line_end":39,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":753}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\oid.rs","byte_start":138958,"byte_end":138963,"line_start":48,"line_end":48,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":757}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\oid.rs","byte_start":139222,"byte_end":139227,"line_start":57,"line_end":57,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":759}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\oid.rs","byte_start":139604,"byte_end":139612,"line_start":72,"line_end":72,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":761}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\oid.rs","byte_start":139676,"byte_end":139684,"line_start":78,"line_end":78,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":763},{"krate":0,"index":766},{"krate":0,"index":768},{"krate":0,"index":771},{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":778},{"krate":0,"index":782}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\oid.rs","byte_start":143034,"byte_end":143042,"line_start":173,"line_end":173,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":788}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\oid.rs","byte_start":143169,"byte_end":143177,"line_start":179,"line_end":179,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":790}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\error.rs","byte_start":151494,"byte_end":151499,"line_start":40,"line_end":40,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":801}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\error.rs","byte_start":151600,"byte_end":151605,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":803}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\error.rs","byte_start":152445,"byte_end":152450,"line_start":66,"line_end":66,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":805}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\error.rs","byte_start":152642,"byte_end":152647,"line_start":75,"line_end":75,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":807}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\serde.rs","byte_start":153442,"byte_end":153450,"line_start":33,"line_end":33,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":839}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\serde.rs","byte_start":153748,"byte_end":153756,"line_start":45,"line_end":45,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":842}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\serde.rs","byte_start":154084,"byte_end":154088,"line_start":59,"line_end":59,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":845}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\serde.rs","byte_start":155082,"byte_end":155092,"line_start":89,"line_end":89,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":850}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\serde.rs","byte_start":155261,"byte_end":155271,"line_start":97,"line_end":97,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":856},{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":883},{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":891}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\serde.rs","byte_start":161800,"byte_end":161815,"line_start":356,"line_end":356,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":899}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\serde.rs","byte_start":162206,"byte_end":162221,"line_start":375,"line_end":375,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":907}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\serde.rs","byte_start":162624,"byte_end":162645,"line_start":394,"line_end":394,"column_start":31,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":911},{"krate":0,"index":912},{"krate":0,"index":913},{"krate":0,"index":915}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\serde.rs","byte_start":163072,"byte_end":163094,"line_start":414,"line_end":414,"column_start":32,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":920},{"krate":0,"index":921},{"krate":0,"index":922},{"krate":0,"index":924}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\serde.rs","byte_start":163611,"byte_end":163624,"line_start":436,"line_end":436,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":931},{"krate":0,"index":933},{"krate":0,"index":935}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\serde.rs","byte_start":164389,"byte_end":164405,"line_start":464,"line_end":464,"column_start":26,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":943}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\serde.rs","byte_start":164911,"byte_end":164934,"line_start":488,"line_end":488,"column_start":33,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":948},{"krate":0,"index":949},{"krate":0,"index":950},{"krate":0,"index":952}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\serde.rs","byte_start":165476,"byte_end":165485,"line_start":511,"line_end":511,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":954}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\serde.rs","byte_start":165723,"byte_end":165728,"line_start":522,"line_end":522,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":957}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\serde.rs","byte_start":165981,"byte_end":166004,"line_start":533,"line_end":533,"column_start":20,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":960}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\serde.rs","byte_start":166263,"byte_end":166269,"line_start":544,"line_end":544,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":963}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\serde.rs","byte_start":166798,"byte_end":166806,"line_start":567,"line_end":567,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":966}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\serde.rs","byte_start":167095,"byte_end":167104,"line_start":579,"line_end":579,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":969}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":171969,"byte_end":171980,"line_start":110,"line_end":110,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1039}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":174180,"byte_end":174193,"line_start":172,"line_end":172,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1044}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":8066,"byte_end":8072,"line_start":209,"line_end":209,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":156}},{"kind":"Mod","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\compat\\mod.rs","byte_start":50109,"byte_end":50112,"line_start":3,"line_end":3,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":157}},{"kind":"Mod","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":8082,"byte_end":8084,"line_start":210,"line_end":210,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":189}},{"kind":"Mod","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":8094,"byte_end":8104,"line_start":211,"line_end":211,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":460}},{"kind":"Mod","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":8114,"byte_end":8122,"line_start":212,"line_end":212,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":466}},{"kind":"Mod","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":8132,"byte_end":8139,"line_start":213,"line_end":213,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":647}},{"kind":"Mod","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\mod.rs","byte_start":121063,"byte_end":121065,"line_start":92,"line_end":92,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":648}},{"kind":"Mod","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":8149,"byte_end":8152,"line_start":214,"line_end":214,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":727}},{"kind":"Mod","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":8162,"byte_end":8165,"line_start":215,"line_end":215,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":791}},{"kind":"Mod","span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\lib.rs","byte_start":8175,"byte_end":8179,"line_start":216,"line_end":216,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1008}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":17853,"byte_end":17857,"line_start":89,"line_end":89,"column_start":18,"column_end":22},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1045},"to":{"krate":2,"index":1893}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":17932,"byte_end":17936,"line_start":95,"line_end":95,"column_start":18,"column_end":22},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1045},"to":{"krate":2,"index":6188}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":20155,"byte_end":20159,"line_start":152,"line_end":152,"column_start":20,"column_end":24},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1045},"to":{"krate":2,"index":1823}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":20251,"byte_end":20255,"line_start":158,"line_end":158,"column_start":20,"column_end":24},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1045},"to":{"krate":2,"index":1823}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":20341,"byte_end":20345,"line_start":164,"line_end":164,"column_start":21,"column_end":25},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1045},"to":{"krate":2,"index":1823}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":20445,"byte_end":20449,"line_start":170,"line_end":170,"column_start":23,"column_end":27},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1045},"to":{"krate":2,"index":1823}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":20542,"byte_end":20546,"line_start":176,"line_end":176,"column_start":25,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1045},"to":{"krate":2,"index":1823}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":20639,"byte_end":20643,"line_start":182,"line_end":182,"column_start":21,"column_end":25},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1045},"to":{"krate":2,"index":1823}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":20732,"byte_end":20736,"line_start":188,"line_end":188,"column_start":22,"column_end":26},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1045},"to":{"krate":2,"index":1823}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":20862,"byte_end":20866,"line_start":194,"line_end":194,"column_start":40,"column_end":44},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1045},"to":{"krate":2,"index":1823}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":21019,"byte_end":21023,"line_start":200,"line_end":200,"column_start":23,"column_end":27},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1045},"to":{"krate":2,"index":1823}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":21127,"byte_end":21131,"line_start":206,"line_end":206,"column_start":26,"column_end":30},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1045},"to":{"krate":2,"index":1823}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":21229,"byte_end":21233,"line_start":212,"line_end":212,"column_start":22,"column_end":26},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1045},"to":{"krate":2,"index":1823}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":21357,"byte_end":21361,"line_start":221,"line_end":221,"column_start":26,"column_end":30},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1045},"to":{"krate":2,"index":1823}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":21521,"byte_end":21525,"line_start":230,"line_end":230,"column_start":24,"column_end":28},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1045},"to":{"krate":2,"index":1823}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":21725,"byte_end":21729,"line_start":239,"line_end":239,"column_start":54,"column_end":58},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1045},"to":{"krate":2,"index":4878}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":22170,"byte_end":22174,"line_start":255,"line_end":255,"column_start":20,"column_end":24},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1045},"to":{"krate":2,"index":1823}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":22258,"byte_end":22262,"line_start":261,"line_end":261,"column_start":20,"column_end":24},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1045},"to":{"krate":2,"index":1823}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":22346,"byte_end":22350,"line_start":267,"line_end":267,"column_start":20,"column_end":24},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1045},"to":{"krate":2,"index":1823}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":22441,"byte_end":22445,"line_start":273,"line_end":273,"column_start":20,"column_end":24},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1045},"to":{"krate":2,"index":1823}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":22541,"byte_end":22545,"line_start":279,"line_end":279,"column_start":25,"column_end":29},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1045},"to":{"krate":2,"index":1823}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":22674,"byte_end":22678,"line_start":285,"line_end":285,"column_start":30,"column_end":34},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1045},"to":{"krate":2,"index":1823}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":22793,"byte_end":22797,"line_start":291,"line_end":291,"column_start":38,"column_end":42},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1045},"to":{"krate":2,"index":1823}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":22908,"byte_end":22912,"line_start":297,"line_end":297,"column_start":26,"column_end":30},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1045},"to":{"krate":2,"index":1823}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":23185,"byte_end":23190,"line_start":304,"line_end":304,"column_start":21,"column_end":26},"kind":{"Impl":{"id":24}},"from":{"krate":19,"index":2192},"to":{"krate":2,"index":1823}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":23277,"byte_end":23281,"line_start":310,"line_end":310,"column_start":6,"column_end":10},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1045},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":40932,"byte_end":40936,"line_start":792,"line_end":792,"column_start":6,"column_end":10},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1045},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":45890,"byte_end":45899,"line_start":958,"line_end":958,"column_start":6,"column_end":15},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1113},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":46712,"byte_end":46720,"line_start":992,"line_end":992,"column_start":6,"column_end":14},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1143},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":47937,"byte_end":47945,"line_start":1023,"line_end":1023,"column_start":16,"column_end":24},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1143},"to":{"krate":2,"index":2074}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":48072,"byte_end":48080,"line_start":1031,"line_end":1031,"column_start":19,"column_end":27},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1143},"to":{"krate":2,"index":2087}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":48204,"byte_end":48212,"line_start":1037,"line_end":1037,"column_start":33,"column_end":41},"kind":{"Impl":{"id":31}},"from":{"krate":14,"index":1659},"to":{"krate":2,"index":1823}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":48317,"byte_end":48325,"line_start":1043,"line_end":1043,"column_start":38,"column_end":46},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1143},"to":{"krate":2,"index":1823}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\bson.rs","byte_start":49381,"byte_end":49387,"line_start":1082,"line_end":1082,"column_start":6,"column_end":12},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1191},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\error.rs","byte_start":64281,"byte_end":64286,"line_start":48,"line_end":48,"column_start":26,"column_end":31},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1213},"to":{"krate":2,"index":1823}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\error.rs","byte_start":64402,"byte_end":64407,"line_start":54,"line_end":54,"column_start":38,"column_end":43},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1213},"to":{"krate":2,"index":1823}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\error.rs","byte_start":64526,"byte_end":64531,"line_start":60,"line_end":60,"column_start":23,"column_end":28},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1213},"to":{"krate":2,"index":6188}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\error.rs","byte_start":65439,"byte_end":65444,"line_start":82,"line_end":82,"column_start":23,"column_end":28},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1213},"to":{"krate":1,"index":1642}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\error.rs","byte_start":65695,"byte_end":65700,"line_start":92,"line_end":92,"column_start":20,"column_end":25},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1213},"to":{"krate":20,"index":8088}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\error.rs","byte_start":65935,"byte_end":65939,"line_start":103,"line_end":103,"column_start":6,"column_end":10},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1045},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\serde.rs","byte_start":67998,"byte_end":68006,"line_start":28,"line_end":28,"column_start":32,"column_end":40},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":2213},"to":{"krate":20,"index":1192}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\serde.rs","byte_start":68513,"byte_end":68521,"line_start":44,"line_end":44,"column_start":32,"column_end":40},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1422},"to":{"krate":20,"index":1192}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\serde.rs","byte_start":69093,"byte_end":69097,"line_start":61,"line_end":61,"column_start":32,"column_end":36},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1045},"to":{"krate":20,"index":1192}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\serde.rs","byte_start":69315,"byte_end":69326,"line_start":71,"line_end":71,"column_start":28,"column_end":39},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":247},"to":{"krate":20,"index":1276}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\serde.rs","byte_start":72757,"byte_end":72769,"line_start":238,"line_end":238,"column_start":6,"column_end":18},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":303},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\serde.rs","byte_start":73853,"byte_end":73865,"line_start":281,"line_end":281,"column_start":37,"column_end":49},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":303},"to":{"krate":20,"index":1214}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\serde.rs","byte_start":78960,"byte_end":78976,"line_start":448,"line_end":448,"column_start":31,"column_end":47},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":319},"to":{"krate":20,"index":1388}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\serde.rs","byte_start":79416,"byte_end":79435,"line_start":465,"line_end":465,"column_start":34,"column_end":53},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":328},"to":{"krate":20,"index":1396}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\serde.rs","byte_start":81372,"byte_end":81387,"line_start":532,"line_end":532,"column_start":37,"column_end":52},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":341},"to":{"krate":20,"index":1214}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\serde.rs","byte_start":82753,"byte_end":82768,"line_start":579,"line_end":579,"column_start":30,"column_end":45},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":341},"to":{"krate":20,"index":1332}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\serde.rs","byte_start":83508,"byte_end":83523,"line_start":610,"line_end":610,"column_start":30,"column_end":45},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":355},"to":{"krate":20,"index":1350}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\serde.rs","byte_start":84501,"byte_end":84516,"line_start":646,"line_end":646,"column_start":37,"column_end":52},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":355},"to":{"krate":20,"index":1214}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\serde.rs","byte_start":85793,"byte_end":85802,"line_start":689,"line_end":689,"column_start":32,"column_end":41},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1113},"to":{"krate":20,"index":1192}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\serde.rs","byte_start":86139,"byte_end":86144,"line_start":701,"line_end":701,"column_start":32,"column_end":37},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1169},"to":{"krate":20,"index":1192}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\serde.rs","byte_start":86477,"byte_end":86500,"line_start":713,"line_end":713,"column_start":32,"column_end":55},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1180},"to":{"krate":20,"index":1192}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\serde.rs","byte_start":86877,"byte_end":86883,"line_start":725,"line_end":725,"column_start":32,"column_end":38},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1191},"to":{"krate":20,"index":1192}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\serde.rs","byte_start":87578,"byte_end":87586,"line_start":750,"line_end":750,"column_start":32,"column_end":40},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1143},"to":{"krate":20,"index":1192}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\de\\serde.rs","byte_start":87917,"byte_end":87926,"line_start":762,"line_end":762,"column_start":32,"column_end":41},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1202},"to":{"krate":20,"index":1192}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\decimal128.rs","byte_start":93320,"byte_end":93330,"line_start":195,"line_end":195,"column_start":21,"column_end":31},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1399},"to":{"krate":2,"index":6183}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\decimal128.rs","byte_start":93655,"byte_end":93665,"line_start":207,"line_end":207,"column_start":23,"column_end":33},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1399},"to":{"krate":2,"index":6188}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":97951,"byte_end":97967,"line_start":44,"line_end":44,"column_start":16,"column_end":32},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1414},"to":{"krate":2,"index":6183}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":98328,"byte_end":98344,"line_start":55,"line_end":55,"column_start":18,"column_end":34},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1414},"to":{"krate":2,"index":6188}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":98643,"byte_end":98659,"line_start":64,"line_end":64,"column_start":23,"column_end":39},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1414},"to":{"krate":1,"index":1642}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":98857,"byte_end":98865,"line_start":72,"line_end":72,"column_start":18,"column_end":26},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1422},"to":{"krate":2,"index":1893}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":98945,"byte_end":98953,"line_start":78,"line_end":78,"column_start":18,"column_end":26},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1422},"to":{"krate":2,"index":6188}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":99402,"byte_end":99410,"line_start":98,"line_end":98,"column_start":16,"column_end":24},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1422},"to":{"krate":2,"index":6183}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":100098,"byte_end":100102,"line_start":126,"line_end":126,"column_start":23,"column_end":27},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":535},"to":{"krate":2,"index":4972}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":100242,"byte_end":100248,"line_start":134,"line_end":134,"column_start":23,"column_end":29},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":538},"to":{"krate":2,"index":4972}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":100384,"byte_end":100392,"line_start":142,"line_end":142,"column_start":23,"column_end":31},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1422},"to":{"krate":2,"index":4882}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":100862,"byte_end":100870,"line_start":162,"line_end":162,"column_start":39,"column_end":47},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1422},"to":{"krate":2,"index":4878}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":101100,"byte_end":101120,"line_start":172,"line_end":172,"column_start":23,"column_end":43},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":527},"to":{"krate":2,"index":4972}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":101269,"byte_end":101285,"line_start":180,"line_end":180,"column_start":23,"column_end":39},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":529},"to":{"krate":2,"index":4972}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":101432,"byte_end":101440,"line_start":188,"line_end":188,"column_start":6,"column_end":14},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1422},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":115319,"byte_end":115324,"line_start":568,"line_end":568,"column_start":10,"column_end":15},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":621},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":115678,"byte_end":115686,"line_start":582,"line_end":582,"column_start":44,"column_end":52},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1422},"to":{"krate":2,"index":1823}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":115864,"byte_end":115879,"line_start":592,"line_end":592,"column_start":6,"column_end":21},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":632},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":116067,"byte_end":116082,"line_start":601,"line_end":601,"column_start":28,"column_end":43},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":632},"to":{"krate":20,"index":1276}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\document.rs","byte_start":116845,"byte_end":116853,"line_start":634,"line_end":634,"column_start":33,"column_end":41},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1422},"to":{"krate":2,"index":4891}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\de.rs","byte_start":122714,"byte_end":122719,"line_start":42,"line_end":42,"column_start":28,"column_end":33},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1430},"to":{"krate":2,"index":6188}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\de.rs","byte_start":122997,"byte_end":123002,"line_start":51,"line_end":51,"column_start":28,"column_end":33},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1430},"to":{"krate":1,"index":1642}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\de.rs","byte_start":123033,"byte_end":123038,"line_start":53,"line_end":53,"column_start":27,"column_end":32},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1430},"to":{"krate":20,"index":8088}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\de.rs","byte_start":123250,"byte_end":123255,"line_start":64,"line_end":64,"column_start":34,"column_end":39},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1430},"to":{"krate":2,"index":1823}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\de.rs","byte_start":123424,"byte_end":123429,"line_start":72,"line_end":72,"column_start":27,"column_end":32},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1430},"to":{"krate":2,"index":1823}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\de.rs","byte_start":123782,"byte_end":123786,"line_start":81,"line_end":81,"column_start":62,"column_end":66},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1045},"to":{"krate":2,"index":1830}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\de.rs","byte_start":127431,"byte_end":127435,"line_start":180,"line_end":180,"column_start":37,"column_end":41},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1045},"to":{"krate":2,"index":1830}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\de.rs","byte_start":128908,"byte_end":128916,"line_start":216,"line_end":216,"column_start":62,"column_end":70},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1422},"to":{"krate":2,"index":1830}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\models.rs","byte_start":129686,"byte_end":129691,"line_start":18,"line_end":18,"column_start":6,"column_end":11},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1438},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\models.rs","byte_start":130147,"byte_end":130152,"line_start":37,"line_end":37,"column_start":6,"column_end":11},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1479},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\models.rs","byte_start":130611,"byte_end":130617,"line_start":56,"line_end":56,"column_start":6,"column_end":12},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1520},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\models.rs","byte_start":131338,"byte_end":131346,"line_start":82,"line_end":82,"column_start":6,"column_end":14},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1561},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\models.rs","byte_start":131925,"byte_end":131930,"line_start":110,"line_end":110,"column_start":6,"column_end":11},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1643},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\models.rs","byte_start":132553,"byte_end":132559,"line_start":138,"line_end":138,"column_start":6,"column_end":12},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1728},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\models.rs","byte_start":134041,"byte_end":134050,"line_start":193,"line_end":193,"column_start":6,"column_end":15},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1857},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\models.rs","byte_start":134496,"byte_end":134504,"line_start":216,"line_end":216,"column_start":6,"column_end":14},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1942},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\models.rs","byte_start":135460,"byte_end":135466,"line_start":246,"line_end":246,"column_start":6,"column_end":12},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1997},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\models.rs","byte_start":135939,"byte_end":135945,"line_start":266,"line_end":266,"column_start":6,"column_end":12},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2038},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\models.rs","byte_start":136611,"byte_end":136620,"line_start":296,"line_end":296,"column_start":6,"column_end":15},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2079},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\extjson\\models.rs","byte_start":137556,"byte_end":137565,"line_start":333,"line_end":333,"column_start":6,"column_end":15},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\oid.rs","byte_start":138759,"byte_end":138764,"line_start":39,"line_end":39,"column_start":29,"column_end":34},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2205},"to":{"krate":2,"index":1823}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\oid.rs","byte_start":138958,"byte_end":138963,"line_start":48,"line_end":48,"column_start":23,"column_end":28},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2205},"to":{"krate":2,"index":6188}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\oid.rs","byte_start":139222,"byte_end":139227,"line_start":57,"line_end":57,"column_start":23,"column_end":28},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":2205},"to":{"krate":1,"index":1642}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\oid.rs","byte_start":139604,"byte_end":139612,"line_start":72,"line_end":72,"column_start":18,"column_end":26},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2213},"to":{"krate":2,"index":1893}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\oid.rs","byte_start":139676,"byte_end":139684,"line_start":78,"line_end":78,"column_start":6,"column_end":14},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2213},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\oid.rs","byte_start":143034,"byte_end":143042,"line_start":173,"line_end":173,"column_start":23,"column_end":31},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2213},"to":{"krate":2,"index":6188}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\oid.rs","byte_start":143169,"byte_end":143177,"line_start":179,"line_end":179,"column_start":21,"column_end":29},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":2213},"to":{"krate":2,"index":6183}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\error.rs","byte_start":151494,"byte_end":151499,"line_start":40,"line_end":40,"column_start":26,"column_end":31},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":2237},"to":{"krate":2,"index":1823}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\error.rs","byte_start":151600,"byte_end":151605,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2237},"to":{"krate":2,"index":6188}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\error.rs","byte_start":152445,"byte_end":152450,"line_start":66,"line_end":66,"column_start":23,"column_end":28},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":2237},"to":{"krate":1,"index":1642}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\error.rs","byte_start":152642,"byte_end":152647,"line_start":75,"line_end":75,"column_start":21,"column_end":26},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":2237},"to":{"krate":20,"index":8702}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\serde.rs","byte_start":153442,"byte_end":153450,"line_start":33,"line_end":33,"column_start":20,"column_end":28},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":2213},"to":{"krate":20,"index":1680}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\serde.rs","byte_start":153748,"byte_end":153756,"line_start":45,"line_end":45,"column_start":20,"column_end":28},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1422},"to":{"krate":20,"index":1680}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\serde.rs","byte_start":154084,"byte_end":154088,"line_start":59,"line_end":59,"column_start":20,"column_end":24},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1045},"to":{"krate":20,"index":1680}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\serde.rs","byte_start":155082,"byte_end":155092,"line_start":89,"line_end":89,"column_start":6,"column_end":16},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":847},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\serde.rs","byte_start":155261,"byte_end":155271,"line_start":97,"line_end":97,"column_start":26,"column_end":36},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":847},"to":{"krate":20,"index":1683}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\serde.rs","byte_start":161800,"byte_end":161815,"line_start":356,"line_end":356,"column_start":23,"column_end":38},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":892},"to":{"krate":20,"index":1733}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\serde.rs","byte_start":162206,"byte_end":162221,"line_start":375,"line_end":375,"column_start":25,"column_end":40},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":900},"to":{"krate":20,"index":1739}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\serde.rs","byte_start":162624,"byte_end":162645,"line_start":394,"line_end":394,"column_start":31,"column_end":52},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":908},"to":{"krate":20,"index":1745}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\serde.rs","byte_start":163072,"byte_end":163094,"line_start":414,"line_end":414,"column_start":32,"column_end":54},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":916},"to":{"krate":20,"index":1751}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\serde.rs","byte_start":163611,"byte_end":163624,"line_start":436,"line_end":436,"column_start":23,"column_end":36},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":925},"to":{"krate":20,"index":1757}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\serde.rs","byte_start":164389,"byte_end":164405,"line_start":464,"line_end":464,"column_start":26,"column_end":42},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":936},"to":{"krate":20,"index":1768}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\serde.rs","byte_start":164911,"byte_end":164934,"line_start":488,"line_end":488,"column_start":33,"column_end":56},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":944},"to":{"krate":20,"index":1775}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\serde.rs","byte_start":165476,"byte_end":165485,"line_start":511,"line_end":511,"column_start":20,"column_end":29},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1113},"to":{"krate":20,"index":1680}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\serde.rs","byte_start":165723,"byte_end":165728,"line_start":522,"line_end":522,"column_start":20,"column_end":25},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":1169},"to":{"krate":20,"index":1680}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\serde.rs","byte_start":165981,"byte_end":166004,"line_start":533,"line_end":533,"column_start":20,"column_end":43},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":1180},"to":{"krate":20,"index":1680}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\serde.rs","byte_start":166263,"byte_end":166269,"line_start":544,"line_end":544,"column_start":20,"column_end":26},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1191},"to":{"krate":20,"index":1680}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\serde.rs","byte_start":166798,"byte_end":166806,"line_start":567,"line_end":567,"column_start":20,"column_end":28},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":1143},"to":{"krate":20,"index":1680}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\ser\\serde.rs","byte_start":167095,"byte_end":167104,"line_start":579,"line_end":579,"column_start":20,"column_end":29},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1202},"to":{"krate":20,"index":1680}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":171969,"byte_end":171980,"line_start":110,"line_end":110,"column_start":6,"column_end":17},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":2249},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\79211\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.0.0\\src\\spec.rs","byte_start":174180,"byte_end":174193,"line_start":172,"line_end":172,"column_start":19,"column_end":32},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":2324},"to":{"krate":2,"index":1823}}]}